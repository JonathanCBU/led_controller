Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(assert.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_cache.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp32s3-mp.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(adc_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_timing_config.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu_util.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dport_access.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_sleep.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mac_addr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_uart.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(reset_reason.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(systimer_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_table.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_system_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap_caps.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(stubs.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                              (--whole-archive)
zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                              (--whole-archive)
zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(busy_wait.c.obj)
                              zephyr/libzephyr.a(rtc_time.c.obj) (z_impl_k_busy_wait)
zephyr/kernel/libkernel.a(device.c.obj)
                              app/libapp.a(main.c.obj) (z_device_is_ready)
zephyr/kernel/libkernel.a(errno.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_z_errno)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/libzephyr.a(soc.c.obj) (z_bss_zero)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (z_impl_k_thread_name_set)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(mutex.c.obj)
                              zephyr/libzephyr.a(esp_efuse_api.c.obj) (z_impl_k_mutex_unlock)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(thread.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(mempool.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (k_free)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
zephyr/kernel/libkernel.a(kheap.c.obj)
                              zephyr/kernel/libkernel.a(mempool.c.obj) (k_heap_aligned_alloc)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__ashldi3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__lshrdi3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__subdf3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__muldf3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdf3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__fixdfdi)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatunsidf)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatundidf)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__truncdfsf2)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__extendsfdf2)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
                              zephyr/libzephyr.a(esp_efuse_utility.c.obj) (__popcountsi2)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdi3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__udivdi3)
c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memcpy)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memset)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
                              zephyr/libzephyr.a(log.c.obj) (strcmp)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
                              zephyr/libzephyr.a(cbprintf_packaged.c.obj) (strlen)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
                              zephyr/libzephyr.a(mac_addr.c.obj) (memcmp)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (strnlen)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
                              zephyr/libzephyr.a(esp_timer.c.obj) (fprintf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
                              zephyr/libzephyr.a(esp_timer.c.obj) (fputs)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
                              app/libapp.a(main.c.obj) (printf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
                              zephyr/libzephyr.a(esp_timer.c.obj) (snprintf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
                              (__l_vfprintf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
                              (__l_vfscanf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
                              zephyr/libzephyr.a(log.c.obj) (vprintf)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
                              c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o) (strchr)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
                              c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o) (fgetc)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
                              c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o) (__file_str_put)
c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
                              c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o) (ungetc)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x160 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x21 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x50 zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x26 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000      0x178 zephyr/libzephyr.a(heap.c.obj)
 .literal.cbvprintf_package
                0x0000000000000000       0x1c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbpprintf_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package_convert
                0x0000000000000000       0x2c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x425 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000       0xbc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x74 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.is_ptr   0x0000000000000000       0x5e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_convert
                0x0000000000000000      0x37a zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x1e23 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x4e9 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x1b16 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x258 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000     0x2153 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0xa04 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .rodata.str1.1
                0x0000000000000000        0xf zephyr/libzephyr.a(printk.c.obj)
 ._llext_const_symbol.static.printk_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(printk.c.obj)
 ._llext_const_symbol.static.vprintk_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(printk.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4cc zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x209 zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x159 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x48a zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x35e zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.encode_uint
                0x0000000000000000        0x8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.z_cbvprintf_impl
                0x0000000000000000       0x3c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.encode_uint
                0x0000000000000000       0xb8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.outs     0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.z_cbvprintf_impl
                0x0000000000000000      0x98d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000000000     0x1045 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000000      0x42a zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000000000     0x149f zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000000      0x138 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000000000     0x1bda zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x0000000000000000      0x62d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.assert_post_action
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .literal.assert_print
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000        0xc zephyr/libzephyr.a(assert.c.obj)
 .text.assert_print
                0x0000000000000000       0x26 zephyr/libzephyr.a(assert.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x20 zephyr/libzephyr.a(assert.c.obj)
 ._llext_const_symbol.static.assert_print_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(assert.c.obj)
 ._llext_const_symbol.static.assert_post_action_sym_
                0x0000000000000000        0x8 zephyr/libzephyr.a(assert.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000000000      0x2a0 zephyr/libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000000      0x17d zephyr/libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000000000      0x2c6 zephyr/libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000000000      0x4d9 zephyr/libzephyr.a(assert.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(assert.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6e zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12b zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x13d zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x2d0 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x235 zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dec.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 zephyr/libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x4e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2a7 zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x119 zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x27b zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x57f zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x23c zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hex.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x28 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x47 zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x80 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x14b zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x343 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x63 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x23ac zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x4a5 zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x235c zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x530 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x27c9 zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x42c zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(rb.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x14 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x20 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x122 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xc6 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xc0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3e zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x882 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1fd zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x765 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x68 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xbec zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x4d9 zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_test_and_set_region
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$constprop$0
                0x0000000000000000       0x3f zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xba zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0x6a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x1a8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x147d zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x3e6 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000      0xddb zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000       0xc0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x1b06 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x541 zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x90 zephyr/libzephyr.a(soc.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .rodata        0x0000000000000000       0x10 zephyr/libzephyr.a(soc.c.obj)
 .iram1.5       0x0000000000000000      0x1f9 zephyr/libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .literal.smp_log
                0x0000000000000000        0xc zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .literal.esp_appcpu_start
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .text.smp_log  0x0000000000000000       0x26 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .rodata.esp_appcpu_start.str1.1
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .text.esp_appcpu_start
                0x0000000000000000       0x8b zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_info    0x0000000000000000      0x238 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_abbrev  0x0000000000000000      0x194 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_loc     0x0000000000000000       0x52 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_line    0x0000000000000000      0x399 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_str     0x0000000000000000      0x2f3 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .literal.uart_hal_set_sw_flow_ctrl
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x2c zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_sclk
                0x0000000000000000       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xd0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0xa2 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_inverse_signal
                0x0000000000000000       0x87 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000      0x14f zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x17 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_txfifo_rst
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_txfifo_rst
                0x0000000000000000       0x29 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x46 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.4       0x0000000000000000        0xd zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5       0x0000000000000000       0x10 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.7       0x0000000000000000       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8       0x0000000000000000       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.6       0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .rodata.adc_channel_io_map
                0x0000000000000000       0x50 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_info    0x0000000000000000       0x9e zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_abbrev  0x0000000000000000       0x61 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_line    0x0000000000000000       0xe4 zephyr/libzephyr.a(adc_periph.c.obj)
 .debug_str     0x0000000000000000      0x218 zephyr/libzephyr.a(adc_periph.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(adc_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xc4 zephyr/libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .literal.spi_timing_set_pin_drive_strength
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .literal.spi_timing_get_flash_timing_param
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .rodata        0x0000000000000000       0x24 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text.spi_timing_set_pin_drive_strength
                0x0000000000000000       0x60 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text.spi_timing_flash_tuning
                0x0000000000000000        0x5 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text.spi_timing_psram_tuning
                0x0000000000000000        0x5 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text.spi_timing_is_tuned
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .text.spi_timing_get_flash_timing_param
                0x0000000000000000        0x9 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .literal.spi_timing_config_get_cs_timing
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .literal.spi_timing_config_get_flash_clock_reg
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .text.spi_timing_config_get_cs_timing
                0x0000000000000000       0x48 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .text.spi_timing_config_get_flash_clock_reg
                0x0000000000000000        0xd zephyr/libzephyr.a(spi_timing_config.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_util.c.obj)
 .literal.esp_cpu_configure_region_protection
                0x0000000000000000       0x10 zephyr/libzephyr.a(cpu_util.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.2       0x0000000000000000        0xe zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.3       0x0000000000000000        0xe zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.4       0x0000000000000000       0x1e zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.5       0x0000000000000000       0x3a zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.6       0x0000000000000000        0xe zephyr/libzephyr.a(cpu_util.c.obj)
 .iram1.7       0x0000000000000000        0x7 zephyr/libzephyr.a(cpu_util.c.obj)
 .rodata        0x0000000000000000       0x14 zephyr/libzephyr.a(cpu_util.c.obj)
 .text.esp_cpu_configure_region_protection
                0x0000000000000000       0x33 zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_info    0x0000000000000000      0x3ba zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_abbrev  0x0000000000000000      0x205 zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_loc     0x0000000000000000       0xea zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_line    0x0000000000000000      0x55d zephyr/libzephyr.a(cpu_util.c.obj)
 .debug_str     0x0000000000000000      0x445 zephyr/libzephyr.a(cpu_util.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cpu_util.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .text.esp_dport_access_read_buffer
                0x0000000000000000       0x1f zephyr/libzephyr.a(dport_access.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_info    0x0000000000000000       0xed zephyr/libzephyr.a(dport_access.c.obj)
 .debug_abbrev  0x0000000000000000       0xa0 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_loc     0x0000000000000000       0x3b zephyr/libzephyr.a(dport_access.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_line    0x0000000000000000      0x1eb zephyr/libzephyr.a(dport_access.c.obj)
 .debug_str     0x0000000000000000      0x263 zephyr/libzephyr.a(dport_access.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_rtc_get_time_us
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_slowclk_cal_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.4       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.5       0x0000000000000000        0xa zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_rtc_get_time_us
                0x0000000000000000       0x8e zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_slowclk_cal_get
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_rtc_time
                0x0000000000000000        0x9 zephyr/libzephyr.a(esp_clk.c.obj)
 .rtc.data.0    0x0000000000000000       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss.s_esp_rtc_time_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.rtc_clk_32k_enable_external
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8m_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8md256_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enable_external
                0x0000000000000000       0x36 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000        0xe zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x23 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8m_enabled
                0x0000000000000000       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8md256_enabled
                0x0000000000000000       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x1e zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$38
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_vddsdio_get_config
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_set_config
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_get_config
                0x0000000000000000       0x63 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_set_config
                0x0000000000000000       0x48 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_clk_cal_ratio
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_light_slp_time_get
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_deep_slp_time_get
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_wait_for_slow_cycle
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_freq_cal
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_cal_ratio
                0x0000000000000000       0x24 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_light_slp_time_get
                0x0000000000000000       0x35 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_deep_slp_time_get
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_wait_for_slow_cycle
                0x0000000000000000       0x2f zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_freq_cal
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .literal.rtc_sleep_get_default_config
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_init
                0x0000000000000000       0xac zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_low_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_set_wakeup_time
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_start
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_get_default_config
                0x0000000000000000      0x137 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_init
                0x0000000000000000      0x42f zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_low_init
                0x0000000000000000       0x62 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_set_wakeup_time
                0x0000000000000000       0x15 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_start
                0x0000000000000000       0xb5 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.esp_base_mac_addr_set
                0x0000000000000000        0x8 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_get
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_custom
                0x0000000000000000       0x14 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_default
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_derive_local_mac
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x1c zephyr/libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_set
                0x0000000000000000       0x22 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_get
                0x0000000000000000       0x34 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_custom
                0x0000000000000000       0x49 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_default
                0x0000000000000000       0x29 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_derive_local_mac
                0x0000000000000000       0x49 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_read_mac
                0x0000000000000000       0x76 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss.base_mac_addr
                0x0000000000000000        0x6 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_frame   0x0000000000000000       0xa0 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_info    0x0000000000000000      0x68d zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_abbrev  0x0000000000000000      0x241 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_loc     0x0000000000000000      0x309 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_ranges  0x0000000000000000       0x38 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_line    0x0000000000000000      0x87c zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_str     0x0000000000000000      0x5d2 zephyr/libzephyr.a(mac_addr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .literal.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_perip_clk_init
                0x0000000000000000       0x34 zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .text.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0xe zephyr/libzephyr.a(clk.c.obj)
 .text.esp_perip_clk_init
                0x0000000000000000      0x122 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_reset_reason
                0x0000000000000000        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(reset_reason.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .text.esp_reset_reason
                0x0000000000000000        0xa zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal.periph_module_reset
                0x0000000000000000       0x14 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x5b zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.cpu_hal_set_watchpoint
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text.cpu_hal_set_breakpoint
                0x0000000000000000       0x22 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text.cpu_hal_clear_breakpoint
                0x0000000000000000       0x23 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text.cpu_hal_set_watchpoint
                0x0000000000000000       0x70 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text.cpu_hal_clear_watchpoint
                0x0000000000000000       0x18 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text.cpu_hal_set_vecbase
                0x0000000000000000        0x8 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_info    0x0000000000000000      0x468 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_abbrev  0x0000000000000000      0x1ca zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_loc     0x0000000000000000      0x3d5 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_ranges  0x0000000000000000       0x78 zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_line    0x0000000000000000      0x69e zephyr/libzephyr.a(cpu_hal.c.obj)
 .debug_str     0x0000000000000000      0x3ac zephyr/libzephyr.a(cpu_hal.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cpu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000        0x9 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x3e zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x3c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x44 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x640 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x293 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000      0x10e zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x69a zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x49d zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x2c zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x75 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10      0x0000000000000000        0xe zephyr/libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000      0x127 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x6e zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x90 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x84 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_init.str1.1
                0x0000000000000000        0xa zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000       0x70 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x23 zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xc4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x36 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13      0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_is_active
                0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.4       0x0000000000000000       0x26 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0       0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1       0x0000000000000000       0x1c zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2       0x0000000000000000       0x41 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.3       0x0000000000000000       0x12 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.5       0x0000000000000000        0x5 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.6       0x0000000000000000        0x9 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .data.timestamp_id$0
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.systimer_hal_get_counter_value
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_time
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_target
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_period
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_alarm_value
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_counter_value_advance
                0x0000000000000000        0x8 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_counter_value
                0x0000000000000000       0x4e zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_time
                0x0000000000000000       0x1b zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_target
                0x0000000000000000       0x73 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_period
                0x0000000000000000       0x65 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_alarm_value
                0x0000000000000000       0x1c zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_enable_alarm_int
                0x0000000000000000       0x1e zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_counter_value_advance
                0x0000000000000000       0x5c zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_counter_can_stall_by_cpu
                0x0000000000000000       0x34 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.esp_log_impl_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_lock_timeout
                0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_impl_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock
                0x0000000000000000       0x16 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock_timeout
                0x0000000000000000        0xd zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_unlock
                0x0000000000000000       0x17 zephyr/libzephyr.a(log_noos.c.obj)
 .bss.s_lock    0x0000000000000000        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.heap_bubble_down
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.s_log_level_get_and_unlock
                0x0000000000000000       0x2c zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x44 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_writev
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_write
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .text.heap_bubble_down
                0x0000000000000000       0x49 zephyr/libzephyr.a(log.c.obj)
 .text.s_log_level_get_and_unlock
                0x0000000000000000       0xf1 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a zephyr/libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xf3 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_get
                0x0000000000000000       0x15 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_writev
                0x0000000000000000       0x32 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_write
                0x0000000000000000       0x26 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_misses
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.s_log_print_func
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x0000000000000000       0xf8 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_efuse_get_pkg_ver
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_disable_rom_download_mode
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_set_rom_log_scheme
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .literal.esp_efuse_enable_rom_secure_download_mode
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_get_chip_ver
                0x0000000000000000        0x7 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_get_pkg_ver
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_disable_rom_download_mode
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_set_rom_log_scheme
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text.esp_efuse_enable_rom_secure_download_mode
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_info    0x0000000000000000      0x3e1 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_abbrev  0x0000000000000000      0x195 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_loc     0x0000000000000000       0x15 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_line    0x0000000000000000      0x4c7 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .debug_str     0x0000000000000000      0x60e zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SYS_DATA_PART2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USER_DATA_MAC_CUSTOM
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USER_DATA
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_TEMP_CALIB
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PSRAM_VENDOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PSRAM_TEMP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PSRAM_CAP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_VENDOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_TEMP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_CAP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PKG_VERSION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_VERSION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FORCE_SEND_RESUME
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_ECC_EN
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_PAGE_SIZE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_TYPE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PIN_POWER_SELECTION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_UART_PRINT_CONTROL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_ECC_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DIRECT_BOOT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_TPUW
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_PHY_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_STRAP_JTAG_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_EN
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WDT_DELAY_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_FORCE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_TIEH
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_XPD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_EXCHG_PINS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_PAD_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SOFT_DIS_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_APP_CPU
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_TWAI
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_OTG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DCACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_ICACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SOFT_DIS_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_EXCHG_PINS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_CUSTOM_MAC
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_USR_DATA
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_OCODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_TEMP_CALIB
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SYS_DATA_PART1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIG_DBIAS_HVT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_V_DIG_DBIAS20
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_V_RTC_DBIAS20
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_K_DIG_LDO
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_K_RTC_LDO
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PSRAM_VENDOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PSRAM_TEMP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PSRAM_CAP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_VENDOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_TEMP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_CAP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK_VERSION_MINOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PKG_VERSION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_MAC
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_VERSION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FORCE_SEND_RESUME
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_ECC_EN
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_PAGE_SIZE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_TYPE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PIN_POWER_SELECTION
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_UART_PRINT_CONTROL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_ECC_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DIRECT_BOOT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_TPUW
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_EN
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_5
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_4
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_3
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WDT_DELAY_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_FORCE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_TIEH
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_XPD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_PHY_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_STRAP_JTAG_SEL
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_PAD_JTAG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_APP_CPU
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_TWAI
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_OTG
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DCACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_ICACHE
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_RD_DIS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SYS_DATA_PART2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY5   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY4   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY3   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY2   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY1   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY0   0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USER_DATA_MAC_CUSTOM
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USER_DATA
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.TEMP_CALIB
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PSRAM_VENDOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PSRAM_TEMP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PSRAM_CAP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_VENDOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_TEMP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_CAP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PKG_VERSION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D7
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D6
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_WP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_HD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_CS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_Q
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC    0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_VERSION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FORCE_SEND_RESUME
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_ECC_EN
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_PAGE_SIZE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_TYPE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PIN_POWER_SELECTION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.UART_PRINT_CONTROL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_ECC_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DIRECT_BOOT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_TPUW
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_PHY_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.STRAP_JTAG_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_EN
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WDT_DELAY_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_FORCE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_TIEH
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_XPD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_EXT_PHY_ENABLE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_EXCHG_PINS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_PAD_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SOFT_DIS_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_APP_CPU
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_TWAI
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_OTG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DCACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_ICACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SOFT_DIS_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_EXCHG_PINS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_CUSTOM_MAC
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_USR_DATA
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_OCODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_TEMP_CALIB
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SYS_DATA_PART1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIG_DBIAS_HVT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_V_DIG_DBIAS20
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_V_RTC_DBIAS20
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_K_DIG_LDO
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_K_RTC_LDO
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PSRAM_VENDOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PSRAM_TEMP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PSRAM_CAP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_VENDOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_TEMP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_CAP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK_VERSION_MINOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PKG_VERSION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_MAC
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_VERSION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FORCE_SEND_RESUME
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_ECC_EN
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_PAGE_SIZE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_TYPE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PIN_POWER_SELECTION
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_UART_PRINT_CONTROL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_ECC_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DIRECT_BOOT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_TPUW
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_EN
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_5
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_4
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_3
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WDT_DELAY_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_FORCE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_TIEH
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_XPD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_PHY_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_STRAP_JTAG_SEL
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_PAD_JTAG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_APP_CPU
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_TWAI
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_OTG
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DCACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_ICACHE
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_RD_DIS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .literal.esp_efuse_rtc_calib_get_ver
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .literal.esp_efuse_rtc_calib_get_init_code
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .literal.esp_efuse_rtc_calib_get_cal_voltage
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .literal.esp_efuse_rtc_calib_get_cal_temp
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text.esp_efuse_rtc_calib_get_ver
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata        0x0000000000000000       0x40 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text.esp_efuse_rtc_calib_get_init_code
                0x0000000000000000       0x96 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text.esp_efuse_rtc_calib_get_cal_voltage
                0x0000000000000000       0xc2 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text.esp_efuse_rtc_calib_get_cal_temp
                0x0000000000000000       0x42 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_info    0x0000000000000000      0x6ff zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_abbrev  0x0000000000000000      0x1d5 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_loc     0x0000000000000000      0x24a zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_line    0x0000000000000000      0x9e3 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_str     0x0000000000000000      0x836 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .literal.esp_efuse_set_timing
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.efuse_read
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_clear_program_registers
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_chip
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_set_timing
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.efuse_read
                0x0000000000000000       0x32 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_clear_program_registers
                0x0000000000000000       0x11 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_chip
                0x0000000000000000       0xb0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000       0x65 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.range_write_addr_blocks
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss.write_mass_blocks
                0x0000000000000000      0x160 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_bit
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_cnt
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_blob
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_cnt
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_bit
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_reg
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_reg
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_begin
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_cancel
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_commit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0xe zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_bit
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_cnt
                0x0000000000000000       0x40 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_blob
                0x0000000000000000       0x70 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_cnt
                0x0000000000000000       0x8c zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_bit
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_reg
                0x0000000000000000       0x52 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_block
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_reg
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_block
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_begin
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_cancel
                0x0000000000000000       0x2a zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_commit
                0x0000000000000000       0x3a zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .bss.s_batch_writing_mode
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 ._k_mutex.static.s_efuse_lock_
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_block_is_empty
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_write_protect
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_read_protect
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_purpose_field
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_key
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_key_dis_read
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_key_dis_read
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_key_dis_write
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_key_dis_write
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_key_purpose
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_key_purpose
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_keypurpose_dis_write
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_keypurpose_dis_write
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_find_purpose
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_key_block_unused
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_find_unused_key_block
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_count_unused_key_blocks
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_digest_revoke
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_digest_revoke
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_get_write_protect_of_digest_revoke
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_set_write_protect_of_digest_revoke
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_write_key
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_efuse_write_keys
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.esp_secure_boot_read_key_digests
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_block_is_empty
                0x0000000000000000       0x36 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_write_protect
                0x0000000000000000       0x52 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_read_protect
                0x0000000000000000       0x2e zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_coding_scheme
                0x0000000000000000        0xa zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_purpose_field
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_key
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_key_dis_read
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_key_dis_read
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_key_dis_write
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_key_dis_write
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_key_purpose
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_key_purpose
                0x0000000000000000       0x2a zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_keypurpose_dis_write
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_keypurpose_dis_write
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_find_purpose
                0x0000000000000000       0x25 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_key_block_unused
                0x0000000000000000       0x48 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_find_unused_key_block
                0x0000000000000000       0x16 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_count_unused_key_blocks
                0x0000000000000000       0x1b zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_digest_revoke
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_digest_revoke
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_get_write_protect_of_digest_revoke
                0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_set_write_protect_of_digest_revoke
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_write_key
                0x0000000000000000       0xae zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_efuse_write_keys
                0x0000000000000000       0x84 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .text.esp_secure_boot_read_key_digests
                0x0000000000000000       0x68 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .rodata.s_revoke_table
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .rodata.s_table
                0x0000000000000000       0x78 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_frame   0x0000000000000000      0x268 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_info    0x0000000000000000     0x126c zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_abbrev  0x0000000000000000      0x317 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_loc     0x0000000000000000      0x8fb zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_aranges
                0x0000000000000000       0xe0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_ranges  0x0000000000000000      0x100 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_line    0x0000000000000000     0x149c zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .debug_str     0x0000000000000000     0x106c zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .literal.write_reg
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_reset
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_efuses
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_cnt
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_reg
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_blob
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_get_read_register_address
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.write_reg
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_reset
                0x0000000000000000       0x47 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_efuses
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_erase_virt_blocks
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_update_virt_blocks.str1.1
                0x0000000000000000       0x26 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_debug_dump_blocks.str1.1
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x56 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_cnt
                0x0000000000000000       0x6f zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_write_reg.str1.1
                0x0000000000000000       0x51 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_reg
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_blob
                0x0000000000000000       0x9e zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_get_read_register_address
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_register_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .literal.esp_unregister_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_register_shutdown_handler
                0x0000000000000000       0x31 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_unregister_shutdown_handler
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss.shutdown_handlers
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_info    0x0000000000000000      0x173 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_abbrev  0x0000000000000000      0x103 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_loc     0x0000000000000000       0xff zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_line    0x0000000000000000      0x2d2 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_str     0x0000000000000000      0x2a4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_system_api.c.obj)
 .literal.__wrap_k_malloc
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps.c.obj)
 .literal.__wrap_k_calloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .text.__wrap_k_malloc
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap_caps.c.obj)
 .text.__wrap_k_calloc
                0x0000000000000000       0x2a zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_info    0x0000000000000000      0x324 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_abbrev  0x0000000000000000      0x197 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_loc     0x0000000000000000      0x1e1 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_line    0x0000000000000000      0x350 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_str     0x0000000000000000      0x2cc zephyr/libzephyr.a(heap_caps.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(heap_caps.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_info    0x0000000000000000       0x6b zephyr/libzephyr.a(stubs.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(stubs.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000       0x76 zephyr/libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x208 zephyr/libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(stubs.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_exccause
                0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.arch_syscall_oops
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.xtensa_exccause.str1.1
                0x0000000000000000       0x11 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.xtensa_exccause
                0x0000000000000000       0x17 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.arch_syscall_oops
                0x0000000000000000        0xd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x0000000000000000      0x1c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.CSWTCH$3
                0x0000000000000000      0x104 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.xtensa_irq_is_enabled
                0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .literal.__stdin_hook_install
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.cbvprintf
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal._exit
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init_recursive
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__chk_fail
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.z_errno_wrap
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbputc   0x0000000000000000       0x11 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__stdin_hook_install
                0x0000000000000000       0x15 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbvprintf
                0x0000000000000000       0x32 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x6 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text._exit    0x0000000000000000        0xf zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init_recursive
                0x0000000000000000       0x16 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire_recursive
                0x0000000000000000       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire_recursive
                0x0000000000000000       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire
                0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.__chk_fail.str1.1
                0x0000000000000000       0x1e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__chk_fail
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.z_errno_wrap
                0x0000000000000000        0xd zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 ._k_mutex.static.__lock___libc_recursive_mutex_
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdin  0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.__stdin   0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.malloc_lock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc_unlock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.aligned_alloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.free  0x0000000000000000       0x10 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.reallocarray
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_lock
                0x0000000000000000       0x12 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_unlock
                0x0000000000000000        0xe zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc   0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.aligned_alloc
                0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.free     0x0000000000000000       0x1c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x33 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000       0x27 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data.z_malloc_heap_mutex
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.rand_get
                0x0000000000000000        0xc zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_rand32_get
                0x0000000000000000        0x8 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_rand_get
                0x0000000000000000        0x4 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.z_impl_sys_csrand_get
                0x0000000000000000        0x4 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.rand_get
                0x0000000000000000       0x4a zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_rand32_get
                0x0000000000000000       0x20 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_rand_get
                0x0000000000000000       0x12 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .text.z_impl_sys_csrand_get
                0x0000000000000000       0x18 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_info    0x0000000000000000      0x630 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_abbrev  0x0000000000000000      0x346 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_loc     0x0000000000000000      0x1e5 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_line    0x0000000000000000      0x705 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .debug_str     0x0000000000000000      0x412 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x24 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6.literal
                0x0000000000000000       0x14 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x44 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3       0x0000000000000000       0x78 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.4       0x0000000000000000       0x70 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xc0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6       0x0000000000000000       0x45 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7       0x0000000000000000       0x2e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled_flag
                0x0000000000000000        0x1 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled
                0x0000000000000000        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xda zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x17c zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x24f zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_z_errno
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .text.z_impl_z_errno
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_info    0x0000000000000000      0x5da zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000000000      0x18d zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_line    0x0000000000000000      0x3a5 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_str     0x0000000000000000      0x639 zephyr/kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_memory_dump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_buffer_output
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_query
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_cmd
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_early_rand_get
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0x8f zephyr/kernel/libkernel.a(init.c.obj)
 .data.state$1  0x0000000000000000        0x8 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_thread_essential_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_thread_essential_clear
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_is_thread_essential
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_start
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_create
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_is_in_isr
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach_unlocked
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_set
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_clear
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_is_thread_essential
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x89 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_start
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_disable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_enable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x4d zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.state_string$0
                0x0000000000000000       0x40 zephyr/kernel/libkernel.a(thread.c.obj)
 ._llext_const_symbol.static.k_is_in_isr_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_sched_time_slice_set
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend_thread_no_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_curr_irqlock
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend1_no_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend_first_thread
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_set_prio
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_thread_priority_set
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_dumb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_add
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_best
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_can_yield
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_wakeup
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wake
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wait
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_prio_cmp
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_thread_no_timeout
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_curr_irqlock
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_first_thread
                0x0000000000000000       0x2e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_set_prio
                0x0000000000000000       0x8e zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_priority_set
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_dumb_remove
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_dumb_best
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_lessthan
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_add
                0x0000000000000000       0x60 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_remove
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_best
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_mq_best
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000        0xf zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_wakeup
                0x0000000000000000       0x42 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pm_save_idle_exit
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.z_pm_save_idle_exit
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(idle.c.obj)
 .literal.adjust_owner_prio$isra$0
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_unlock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_lock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.adjust_owner_prio$isra$0
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_unlock
                0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x0000000000000000       0xcc zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(mutex.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mutex.c.obj)
 ._llext_const_symbol.static.z_impl_k_mutex_unlock_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mutex.c.obj)
 ._llext_const_symbol.static.z_impl_k_mutex_lock_sym_
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x0000000000000000     0x5a13 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000000000      0x46b zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000000000      0x573 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x0000000000000000      0xe4d zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_str     0x0000000000000000      0xbfd zephyr/kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_give
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_take
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_give
                0x0000000000000000       0x44 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_take
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x2f zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x0000000000000000      0xbc4 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x37b zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x3af zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x9d1 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x774 zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x46 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.k_calloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_calloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000       0x18 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
 .text          0x0000000000000000       0x18 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
 .literal       0x0000000000000000       0x10 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x3d c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
 .literal       0x0000000000000000        0xc c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000       0x37 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .debug_frame   0x0000000000000000       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000      0x2ae c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x270 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x25e c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
 .literal       0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
 .text          0x0000000000000000      0x135 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
 .literal       0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0x74 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
 .literal       0x0000000000000000       0x1c c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
 .text          0x0000000000000000      0x123 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
 .literal       0x0000000000000000        0xc c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000       0x63 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .text.memcmp   0x0000000000000000       0x26 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .text.strnlen  0x0000000000000000       0x1a c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .literal.fprintf
                0x0000000000000000        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .text.fprintf  0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .text.fputs    0x0000000000000000       0x33 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .literal.snprintf
                0x0000000000000000        0xc c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .text.snprintf
                0x0000000000000000       0x5e c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .literal.scanf_getc
                0x0000000000000000        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.scanf_ungetc$isra$0
                0x0000000000000000        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.skip_spaces
                0x0000000000000000        0x8 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.__l_vfscanf
                0x0000000000000000       0x50 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_getc
                0x0000000000000000       0x19 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text.putval   0x0000000000000000       0x32 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_ungetc$isra$0
                0x0000000000000000       0x18 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text.skip_spaces
                0x0000000000000000       0x34 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .rodata.__l_vfscanf.str1.1
                0x0000000000000000        0xc c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .text.__l_vfscanf
                0x0000000000000000      0x4a2 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .debug_frame   0x0000000000000000       0x88 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.vprintf
                0x0000000000000000        0x8 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .text.vprintf  0x0000000000000000       0x1a c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .text.strchr   0x0000000000000000       0x1d c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .literal.fgetc
                0x0000000000000000        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .text.fgetc    0x0000000000000000       0x9a c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .text.__file_str_put
                0x0000000000000000       0x16 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .literal.ungetc
                0x0000000000000000        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
 .text          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
 .data          0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
 .bss           0x0000000000000000        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
 .text.ungetc   0x0000000000000000       0x7c c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
 .debug_frame   0x0000000000000000       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)

Memory Configuration

Name             Origin             Length             Attributes
mcuboot_hdr      0x0000000000000000 0x0000000000000020 xr
metadata         0x0000000000000020 0x0000000000000020 xr
ROM              0x0000000000000040 0x00000000007fffc0 xr
iram0_0_seg      0x0000000040374000 0x0000000000046000 xr
dram0_0_seg      0x000000003fc88000 0x0000000000042000 rw
irom0_0_seg      0x0000000042000020 0x00000000007fffe0 xr
drom0_0_seg      0x000000003c000040 0x00000000007fffc0 r
rtc_iram_seg     0x00000000600fe000 0x0000000000002000 xrw
rtc_data_seg     0x00000000600fe000 0x0000000000002000 rw
rtc_slow_seg     0x0000000050000000 0x0000000000002000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x00000000403762cc                vfprintf = __l_vfprintf
                0x0000000000000000                vfscanf = __l_vfscanf
LOAD zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/common/libarch__common.a
LOAD zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD zephyr/lib/libc/picolibc/liblib__libc__picolibc.a
LOAD zephyr/lib/libc/common/liblib__libc__common.a
LOAD zephyr/subsys/random/libsubsys__random.a
LOAD zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD zephyr/drivers/clock_control/libdrivers__clock_control.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/entropy/libdrivers__entropy.a
LOAD zephyr/drivers/gpio/libdrivers__gpio.a
LOAD zephyr/drivers/pinctrl/libdrivers__pinctrl.a
LOAD zephyr/drivers/serial/libdrivers__serial.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a
LOAD c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a
LOAD zephyr/arch/common/libisr_tables.a
LOAD c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a
LOAD c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a
LOAD c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a

.mcuboot_header
                0x0000000000000000       0x20
                0x0000000000000000        0x8 QUAD 0x0
                0x0000000000000008        0x8 QUAD 0x0
                0x0000000000000010        0x8 QUAD 0x0
                0x0000000000000018        0x8 QUAD 0x0

.metadata       0x0000000000000020       0x1c
                0x0000000000000020        0x4 LONG 0xace637d3
 *(SORT_BY_ALIGNMENT(.entry_addr))
                0x0000000000000024        0x4 LONG 0x40374000 ADDR (.iram0.vectors)
                0x0000000000000028        0x4 LONG 0x12b0 LOADADDR (.iram0.vectors)
                0x000000000000002c        0x4 LONG 0x29b4 ((LOADADDR (.iram0.text) + SIZEOF (.iram0.text)) - LOADADDR (.iram0.vectors))
                0x0000000000000030        0x4 LONG 0x3fc8a6a0 ADDR (.dram0.data)
                0x0000000000000034        0x4 LONG 0x3c64 LOADADDR (.dram0.data)
                0x0000000000000038        0x4 LONG 0x254 ((LOADADDR (.dram0.end) + SIZEOF (.dram0.end)) - LOADADDR (.dram0.data))

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))
                0x0000000000000040                _image_drom_start = LOADADDR (rodata)
                0x0000000000001270                _image_drom_size = ((LOADADDR (_RODATA_SECTION_END) + SIZEOF (_RODATA_SECTION_END)) - _image_drom_start)
                0x000000003c000040                _image_drom_vaddr = ADDR (rodata)

rodata          0x000000003c000040     0x11a8 load address 0x0000000000000040
                0x000000003c000040                _rodata_reserved_start = ABSOLUTE (.)
                0x000000003c000040                _rodata_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rodata_desc) SORT_BY_ALIGNMENT(.rodata_desc.*))
 *(SORT_BY_ALIGNMENT(.rodata_custom_desc) SORT_BY_ALIGNMENT(.rodata_custom_desc.*))
                0x000000003c000040                __rodata_region_start = ABSOLUTE (.)
                0x000000003c000040                . = ALIGN (0x4)
                0x000000003c000040                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libdrivers__serial.a:uart_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata))
 .rodata        0x000000003c000040        0x4 zephyr/libzephyr.a(clk.c.obj)
 .rodata        0x000000003c000044        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libdrivers__serial.a:uart_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata.*))
 .rodata.GPIO_PIN_MUX_REG
                0x000000003c00004c       0xc4 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003c00004c                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003c000110      0x4d0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c000110                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003c0005e0       0xc4 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c0005e0                rtc_io_num_map
 .rodata.esp_reset_reason_init
                0x000000003c0006a4       0x20 zephyr/libzephyr.a(reset_reason.c.obj)
 .rodata.periph_ll_get_rst_en_mask
                0x000000003c0006c4       0xa0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$9
                0x000000003c000764       0x90 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$7
                0x000000003c0007f4       0x90 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$4
                0x000000003c000884       0xa0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.interrupt_descriptor_table
                0x000000003c000924      0x200 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .rodata.OCODE  0x000000003c000b24        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.BLK_VERSION_MAJOR
                0x000000003c000b28        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIG_DBIAS_HVT
                0x000000003c000b2c        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.V_DIG_DBIAS20
                0x000000003c000b30        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.V_RTC_DBIAS20
                0x000000003c000b34        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.K_DIG_LDO
                0x000000003c000b38        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.K_RTC_LDO
                0x000000003c000b3c        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.BLK_VERSION_MINOR
                0x000000003c000b40        0x4 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .rodata.range_read_addr_blocks
                0x000000003c000b44       0x58 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                0x000000003c000b44                range_read_addr_blocks
 .rodata.stdout
                0x000000003c000b9c        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x000000003c000b9c                stdout
                0x000000003c000b9c                stderr
 .rodata.CSWTCH$8
                0x000000003c000ba0       0x90 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.CSWTCH$6
                0x000000003c000c30       0xa0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003c000cd0       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.clock_control_esp32_api
                0x000000003c000ce0       0x1c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.entropy_esp32_api_funcs
                0x000000003c000cfc        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .rodata.gpio_esp32_driver_api
                0x000000003c000d04       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.esp32_gpio_ports_addrs
                0x000000003c000d28        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .rodata.__l_vfprintf
                0x000000003c000d30       0x90 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .rodata.main.str1.1
                0x000000003c000dc0       0x16 app/libapp.a(main.c.obj)
 .rodata.rtc_clk_cpu_freq_to_pll_mhz.str1.1
                0x000000003c000dd6       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_xtal_freq_get.str1.1
                0x000000003c000dfc       0x34 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003c000e30       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.get_rtc_dbias_by_efuse$constprop$0.str1.1
                0x000000003c000e60       0x68 zephyr/libzephyr.a(rtc_init.c.obj)
 .rodata.rtc_init.str1.1
                0x000000003c000ec8      0x11a zephyr/libzephyr.a(rtc_init.c.obj)
 .rodata.rtc_clk_init.str1.1
                0x000000003c000fe2       0x35 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.select_rtc_slow_clk.str1.1
                0x000000003c001017       0x4c zephyr/libzephyr.a(clk.c.obj)
                                         0x50 (size before relaxing)
 .rodata.esp_efuse_utility_process.str1.1
                0x000000003c001063       0x41 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.abort.str1.1
                0x000000003c0010a4        0x9 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .rodata.default_intr_handler.str1.1
                0x000000003c0010ad       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.CSWTCH$245
                0x000000003c0010d0        0x6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.str1.1
                0x000000003c0010d6        0xd zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.xtal_freq
                0x000000003c0010e3        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003c0010e7        0xe zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .rodata.str1.1
                0x000000003c0010f5       0x1c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.str1.1
                0x000000003c001111        0xe zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .rodata.boot_banner.str1.1
                0x000000003c00111f       0x3e zephyr/kernel/libkernel.a(banner.c.obj)
 .rodata.__l_vfprintf.str1.1
                0x000000003c00115d        0xf c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 *(SORT_BY_ALIGNMENT(.irom1.text))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003c00116c                __XT_EXCEPTION_TABLE_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
                0x000000003c00116c                . = ((. + 0x3) & 0xfffffffffffffffc)
                0x000000003c00116c                __eh_frame = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.eh_frame))
 .eh_frame      0x000000003c00116c       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .eh_frame      0x000000003c001194       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003c0011bc       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
                0x000000003c0011e8                . = ((. + 0x7) & 0xfffffffffffffffc)
 *fill*         0x000000003c0011e4        0x4 
                0x000000003c0011e8                __XT_EXCEPTION_DESCS_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003c0011e8                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003c0011e8                . = ALIGN (0x4)
                0x000000003c0011e8                __rodata_region_end = ABSOLUTE (.)
                0x000000003c0011e8                _lit4_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(*.lit4))
 *(SORT_BY_ALIGNMENT(.lit4.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.lit4.*))
                0x000000003c0011e8                _lit4_end = ABSOLUTE (.)
                0x000000003c0011e8                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata_wlog))
 *(SORT_BY_ALIGNMENT(.rodata_wlog*))
                0x000000003c0011e8                . = ALIGN (0x4)

initlevel       0x000000003c0011e8       0x50 load address 0x00000000000011e8
                0x000000003c0011e8                __init_start = .
                0x000000003c0011e8                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY??_*)))
                0x000000003c0011e8                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1??_*)))
 .z_init_PRE_KERNEL_130_00027_
                0x000000003c0011e8        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_130_0_
                0x000000003c0011f0        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_140_00011_
                0x000000003c0011f8        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_140_00064_
                0x000000003c001200        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00049_
                0x000000003c001208        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00050_
                0x000000003c001210        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00053_
                0x000000003c001218        0x8 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .z_init_PRE_KERNEL_160_0_
                0x000000003c001220        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                0x000000003c001228                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2?_*)))
 .z_init_PRE_KERNEL_20_0_
                0x000000003c001228        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2??_*)))
                0x000000003c001230                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL??_*)))
 .z_init_POST_KERNEL40_0_
                0x000000003c001230        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                0x000000003c001238                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION??_*)))
                0x000000003c001238                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP??_*)))
                0x000000003c001238                __init_end = .

device_area     0x000000003c001238       0x78 load address 0x0000000000001238
                0x000000003c001238                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 ._device.static.1_30_
                0x000000003c001238       0x14 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003c001238                __device_dts_ord_27
 ._device.static.1_40_
                0x000000003c00124c       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003c00124c                __device_dts_ord_64
                0x000000003c001260                __device_dts_ord_11
 ._device.static.1_50_
                0x000000003c001274       0x14 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                0x000000003c001274                __device_dts_ord_49
 ._device.static.1_50_
                0x000000003c001288       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003c001288                __device_dts_ord_50
 ._device.static.1_50_
                0x000000003c00129c       0x14 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                0x000000003c00129c                __device_dts_ord_53
                0x000000003c0012b0                _device_list_end = .

initlevel_error
                0x000000000000003c        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_[_A-Z0-9]*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003c0012b0                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003c0012b0                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x000000003c0012b0                __static_thread_data_list_end = .

device_deps     0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x000000003c0012b0                __device_deps_end = .

ztest           0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x000000003c0012b0                _ztest_expected_result_entry_list_end = .
                0x000000003c0012b0                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x000000003c0012b0                _ztest_suite_node_list_end = .
                0x000000003c0012b0                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x000000003c0012b0                _ztest_unit_test_list_end = .
                0x000000003c0012b0                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x000000003c0012b0                _ztest_test_rule_list_end = .

bt_l2cap_fixed_chan_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003c0012b0                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003c0012b0                _bt_gatt_service_static_list_end = .

tracing_backend_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003c0012b0                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

symbol_to_keep  0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x000000003c0012b0                __symbol_to_keep_end = .

shell_area      0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003c0012b0                _shell_list_end = .

shell_root_cmds_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x000000003c0012b0                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x000000003c0012b0                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x000000003c0012b0                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x000000003c0012b0                _cfb_font_list_end = .

/DISCARD/
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))

_RODATA_SECTION_END
                0x000000003c0012b0        0x0 load address 0x00000000000012b0
                0x000000003c0012b0                _rodata_reserved_end = ABSOLUTE (.)
                0x000000003c0012b0                . = ALIGN (0x10)
                0x000000003c0012b0                _image_rodata_end = ABSOLUTE (.)

.iram0.vectors  0x0000000040374000      0x400 load address 0x00000000000012b0
                0x0000000040374000                _iram_start = ABSOLUTE (.)
                0x0000000040374000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040374000      0x16a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040374000                _WindowOverflow4
                0x0000000040374040                _WindowUnderflow4
                0x0000000040374050                _xt_alloca_exc
                0x0000000040374080                _WindowOverflow8
                0x00000000403740c0                _WindowUnderflow8
                0x0000000040374100                _WindowOverflow12
                0x0000000040374140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004037416a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040374180       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000403741a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000403741c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403741c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000403741e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040374200       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040374225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040374240       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040374265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040374280       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000403742a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000403742c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403742c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000403742e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040374300        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040374303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040374340       0x16 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040374356       0x6a 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000403743c0        0x6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000403743c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000403743c6       0x3a 
                0x0000000040374400                _invalid_pc_placeholder = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040374400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(.init)
                0x0000000040374400                _init_end = ABSOLUTE (.)

.iram0.text     0x0000000040374400     0x25b4 load address 0x00000000000016b0
                0x0000000040374400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.3.literal
                0x0000000040374400       0x30 zephyr/libzephyr.a(soc.c.obj)
                                         0x40 (size before relaxing)
 .iram1.4.literal
                0x0000000040374430        0x4 zephyr/libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.2.literal
                0x0000000040374434        0x8 zephyr/libzephyr.a(soc_cache.c.obj)
 .iram1.3.literal
                0x000000004037443c       0x1c zephyr/libzephyr.a(soc_cache.c.obj)
 .iram1.1.literal
                0x0000000040374458        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.2.literal
                0x0000000040374460        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .iram1.3.literal
                0x0000000040374464        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .iram1.2.literal
                0x0000000040374468        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3.literal
                0x0000000040374470        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x10 (size before relaxing)
 .iram1.0.literal
                0x0000000040374474        0x4 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .iram1.1.literal
                0x0000000040374478        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.2.literal
                0x000000004037447c        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.5.literal
                0x0000000040374484        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.2.literal
                0x000000004037448c        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .iram1.3.literal
                0x0000000040374490        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_cpu_idle
                0x0000000040374498        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_fatal_error
                0x000000004037449c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0x8 (size before relaxing)
 .literal       0x000000004037449c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                          0x8 (size before relaxing)
 .literal.z_irq_spurious
                0x00000000403744a0        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                          0x4 (size before relaxing)
 .literal.arch_new_thread
                0x00000000403744a0        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .literal.return_to
                0x00000000403744ac        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int2_c
                0x00000000403744ac        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int3_c
                0x00000000403744b0        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_int4_c
                0x00000000403744b4        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int5_c
                0x00000000403744b4        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int6_c
                0x00000000403744b4        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x00000000403744b4        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_excint1_c
                0x00000000403744b4        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_impl_k_busy_wait
                0x00000000403744bc        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x00000000403744bc        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_fatal_error
                0x00000000403744bc        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal.z_sys_init_run_level
                0x00000000403744bc        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.bg_thread_main
                0x00000000403744c0        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x1c (size before relaxing)
 .literal.z_early_memset
                0x00000000403744cc        0x0 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_bss_zero
                0x00000000403744cc        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                          0xc (size before relaxing)
 .literal.z_init_cpu
                0x00000000403744d4       0x14 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x1c (size before relaxing)
 .literal.z_cstart
                0x00000000403744e8        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x44 (size before relaxing)
 .literal.z_setup_new_thread
                0x00000000403744f4        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_init_static_threads
                0x00000000403744f4        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x20 (size before relaxing)
 .literal.sliceable
                0x00000000403744fc        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.slice_timeout
                0x0000000040374504        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.unpend_thread_no_timeout
                0x0000000040374510        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_reset_time_slice
                0x0000000040374510        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_swap_irqlock
                0x0000000040374514        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap
                0x0000000040374514        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.update_cache
                0x0000000040374518        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.ready_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.unready_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.add_to_waitq_locked
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.pend_locked
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_thread_halt
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_time_slice
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_ready_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_thread_suspend
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_wake_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_timeout
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_pend_curr
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_unpend_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_start
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reschedule_irqlock
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_sched_lock
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_unlock
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap_next_thread
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_all
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_yield
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_tick_sleep
                0x000000004037451c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_impl_k_sleep
                0x000000004037451c        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sched_current_thread_query
                0x0000000040374520        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x0000000040374520        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x0000000040374520        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.idle  0x0000000040374520        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.elapsed
                0x0000000040374520        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.next_timeout
                0x0000000040374524        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x10 (size before relaxing)
 .literal.remove_timeout
                0x000000004037452c        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_add_timeout
                0x000000004037452c        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_abort_timeout
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_announce
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_clock_tick_get
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_uptime_ticks
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_calc
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_timeout
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_heap_aligned_alloc
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_free
                0x0000000040374530        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_aligned_alloc
                0x0000000040374530        0x4 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_malloc
                0x0000000040374534        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_thread_system_pool_assign
                0x0000000040374534        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x0000000040374534        0x4 zephyr/kernel/libkernel.a(banner.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_heap_init
                0x0000000040374538        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.statics_init
                0x000000004037453c        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_aligned_alloc
                0x0000000040374544        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_heap_free
                0x0000000040374548        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_timing_config_set_core_clock
                0x000000004037454c        0x8 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .literal.spi_timing_config_set_flash_clock
                0x0000000040374554        0x4 zephyr/libzephyr.a(spi_timing_config.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_timing_config_set_psram_clock
                0x0000000040374558        0x0 zephyr/libzephyr.a(spi_timing_config.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_timing_enter_mspi_low_speed_mode
                0x0000000040374558        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_timing_enter_mspi_high_speed_mode
                0x0000000040374558        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_timing_change_speed_mode_cache_safe
                0x0000000040374558       0x10 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_log_early_timestamp
                0x0000000040374568        0x0 zephyr/libzephyr.a(log_noos.c.obj)
                                          0x4 (size before relaxing)
 .literal.ccompare_isr
                0x0000000040374568        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_clock_set_timeout
                0x0000000040374570        0xc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x000000004037457c        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.systimer_hal_init
                0x000000004037457c       0x10 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_select_alarm_mode
                0x000000004037458c        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_connect_alarm_counter
                0x0000000040374590        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.char_out
                0x0000000040374590        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x0000000040374594        0x4 zephyr/libzephyr.a(printk.c.obj)
                                          0xc (size before relaxing)
 .literal.printk
                0x0000000040374598        0x0 zephyr/libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.console_out
                0x0000000040374598        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.__start
                0x000000004037459c        0x0 zephyr/libzephyr.a(loader.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_zephyr_fputc
                0x000000004037459c        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.picolibc_put
                0x00000000403745a0        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x4 (size before relaxing)
 .literal.__stdout_hook_install
                0x00000000403745a0        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x8 (size before relaxing)
 .literal.printf
                0x00000000403745a4        0x4 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
                                          0x8 (size before relaxing)
 .literal.__l_vfprintf
                0x00000000403745a8       0x14 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
                                         0x18 (size before relaxing)
 .iram1.3       0x00000000403745bc       0x8e zephyr/libzephyr.a(soc.c.obj)
                                         0x9a (size before relaxing)
                0x00000000403745bc                __esp_platform_start
 *fill*         0x000000004037464a        0x2 
 .iram1.4       0x000000004037464c       0x1b zephyr/libzephyr.a(soc.c.obj)
                0x000000004037464c                arch_printk_char_out
 *fill*         0x0000000040374667        0x1 
 .iram1.2       0x0000000040374668       0x1c zephyr/libzephyr.a(soc_cache.c.obj)
                0x0000000040374668                esp_config_instruction_cache_mode
 .iram1.3       0x0000000040374684       0x5e zephyr/libzephyr.a(soc_cache.c.obj)
                0x0000000040374684                esp_config_data_cache_mode
 *fill*         0x00000000403746e2        0x2 
 .iram1.1       0x00000000403746e4       0x2c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x00000000403746e4                regi2c_ctrl_read_reg_mask
 .iram1.2       0x0000000040374710       0x27 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x0000000040374710                regi2c_ctrl_write_reg
 *fill*         0x0000000040374737        0x1 
 .iram1.3       0x0000000040374738       0x2e zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x0000000040374738                regi2c_ctrl_write_reg_mask
 *fill*         0x0000000040374766        0x2 
 .iram1.2       0x0000000040374768       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
                0x0000000040374768                esp_clk_cpu_freq
 *fill*         0x0000000040374779        0x3 
 .iram1.3       0x000000004037477c       0x20 zephyr/libzephyr.a(esp_clk.c.obj)
                0x000000004037477c                esp_clk_apb_freq
 .iram1.0       0x000000004037479c       0x14 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                0x000000004037479c                esp_rom_uart_set_clock_baudrate
 .iram1.1       0x00000000403747b0       0x1c zephyr/libzephyr.a(reset_reason.c.obj)
                0x00000000403747b0                esp_reset_reason_get_hint
 .iram1.2       0x00000000403747cc       0x3a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000040374806        0x2 
 .iram1.5       0x0000000040374808       0xb2 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000040374808                esp_intr_disable
 *fill*         0x00000000403748ba        0x2 
 .iram1.2       0x00000000403748bc       0x6e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004037492a        0x2 
 .iram1.3       0x000000004037492c       0x11 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *fill*         0x000000004037493d        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 *fill*         0x000000004037493d        0x3 
 .iram0.text    0x0000000040374940       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374940                _Level1Vector
 *fill*         0x000000004037496d        0x0 
 *libesp32.a:panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *librtc.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037496d        0x3 
 .text.arch_cpu_idle
                0x0000000040374970        0xe zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                0x0000000040374970                arch_cpu_idle
 *fill*         0x000000004037497e        0x2 
 .text.xtensa_fatal_error
                0x0000000040374980       0x1e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040374980                xtensa_fatal_error
 *fill*         0x000000004037499e        0x2 
 .text          0x00000000403749a0      0x21c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000403749a0                xtensa_spill_reg_windows
                0x00000000403749c0                xtensa_save_high_regs
                0x0000000040374a08                xtensa_restore_high_regs
                0x0000000040374a3d                _restore_context
                0x0000000040374a74                xtensa_arch_except
                0x0000000040374a77                xtensa_arch_except_epc
                0x0000000040374a7c                xtensa_arch_kernel_oops
                0x0000000040374a7f                xtensa_arch_kernel_oops_epc
                0x0000000040374a84                xtensa_switch
 .text.z_irq_spurious
                0x0000000040374bbc       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040374bbc                z_irq_spurious
 *fill*         0x0000000040374bce        0x2 
 .text.arch_new_thread
                0x0000000040374bd0       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                0x0000000040374bd0                arch_new_thread
 .text.return_to
                0x0000000040374c08       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .text.xtensa_int2_c
                0x0000000040374c1c       0x5a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374c1c                xtensa_int2_c
 *fill*         0x0000000040374c76        0x2 
 .text.xtensa_int3_c
                0x0000000040374c78       0x82 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374c78                xtensa_int3_c
 *fill*         0x0000000040374cfa        0x2 
 .text.xtensa_int4_c
                0x0000000040374cfc       0x6a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374cfc                xtensa_int4_c
 *fill*         0x0000000040374d66        0x2 
 .text.xtensa_int5_c
                0x0000000040374d68       0x5e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374d68                xtensa_int5_c
 *fill*         0x0000000040374dc6        0x2 
 .text.xtensa_int6_c
                0x0000000040374dc8       0x15 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374dc8                xtensa_int6_c
 *fill*         0x0000000040374ddd        0x3 
 .text.xtensa_int7_c
                0x0000000040374de0       0x36 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374de0                xtensa_int7_c
 *fill*         0x0000000040374e16        0x2 
 .text.xtensa_excint1_c
                0x0000000040374e18      0x188 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x18c (size before relaxing)
                0x0000000040374e18                xtensa_excint1_c
 *fill*         0x0000000040374fa0        0x0 
 *fill*         0x0000000040374fa0        0x0 
 *fill*         0x0000000040374fa0        0x0 
 *fill*         0x0000000040374fa0        0x0 
 .text.xtensa_dump_stack
                0x0000000040374fa0        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040374fa0                xtensa_dump_stack
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *fill*         0x0000000040374fa5        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040374fa5        0x3 
 .text.z_impl_k_busy_wait
                0x0000000040374fa8       0x1f zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040374fa8                z_impl_k_busy_wait
 *fill*         0x0000000040374fc7        0x1 
 .text.k_sys_fatal_error_handler
                0x0000000040374fc8        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
                0x0000000040374fc8                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x0000000040374fd0       0x22 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040374fd0                z_fatal_error
 *fill*         0x0000000040374ff2        0x2 
 .text.z_sys_init_run_level
                0x0000000040374ff4       0x4b zephyr/kernel/libkernel.a(init.c.obj)
 *fill*         0x000000004037503f        0x1 
 .text.bg_thread_main
                0x0000000040375040       0x32 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x0000000040375072        0x2 
 .text.z_early_memset
                0x0000000040375074       0x12 zephyr/kernel/libkernel.a(init.c.obj)
                0x0000000040375074                z_early_memset
 *fill*         0x0000000040375086        0x2 
 .text.z_bss_zero
                0x0000000040375088       0x13 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040375088                z_bss_zero
 *fill*         0x000000004037509b        0x1 
 .text.z_init_cpu
                0x000000004037509c       0x6d zephyr/kernel/libkernel.a(init.c.obj)
                                         0x71 (size before relaxing)
                0x000000004037509c                z_init_cpu
 *fill*         0x0000000040375109        0x3 
 .text.z_cstart
                0x000000004037510c       0x97 zephyr/kernel/libkernel.a(init.c.obj)
                                         0xbb (size before relaxing)
                0x000000004037510c                z_cstart
 *fill*         0x00000000403751a3        0x1 
 .text.z_setup_new_thread
                0x00000000403751a4       0x51 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x55 (size before relaxing)
                0x00000000403751a4                z_setup_new_thread
 *fill*         0x00000000403751f5        0x3 
 .text.z_init_static_threads
                0x00000000403751f8       0x70 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x7a (size before relaxing)
                0x00000000403751f8                z_init_static_threads
 *fill*         0x0000000040375268        0x0 
 .text.sliceable
                0x0000000040375268       0x45 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000403752ad        0x3 
 .text.slice_timeout
                0x00000000403752b0       0x1e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000403752ce        0x2 
 .text.unpend_thread_no_timeout
                0x00000000403752d0       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x00000000403752e9        0x3 
 .text.z_reset_time_slice
                0x00000000403752ec       0x3f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x47 (size before relaxing)
                0x00000000403752ec                z_reset_time_slice
 *fill*         0x000000004037532b        0x1 
 .text.z_swap_irqlock
                0x000000004037532c       0x35 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x39 (size before relaxing)
 *fill*         0x0000000040375361        0x3 
 .text.z_swap   0x0000000040375364       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x000000004037539e        0x2 
 .text.update_cache
                0x00000000403753a0       0x4a zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000403753ea        0x2 
 .text.move_thread_to_end_of_prio_q
                0x00000000403753ec       0x78 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7c (size before relaxing)
 .text.ready_thread
                0x0000000040375464       0x6e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000403754d2        0x2 
 .text.unready_thread
                0x00000000403754d4       0x2e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x0000000040375502        0x2 
 .text.add_to_waitq_locked
                0x0000000040375504       0x58 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5c (size before relaxing)
 .text.pend_locked
                0x000000004037555c       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x26 (size before relaxing)
 *fill*         0x000000004037557e        0x2 
 .text.z_thread_halt
                0x0000000040375580       0xa0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0xb4 (size before relaxing)
 .text.z_time_slice
                0x0000000040375620       0x3b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x42 (size before relaxing)
                0x0000000040375620                z_time_slice
 *fill*         0x000000004037565b        0x1 
 .text.z_ready_thread
                0x000000004037565c       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x000000004037565c                z_ready_thread
 *fill*         0x000000004037566f        0x1 
 .text.z_impl_k_thread_suspend
                0x0000000040375670       0x29 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040375670                z_impl_k_thread_suspend
 *fill*         0x0000000040375699        0x3 
 .text.z_sched_wake_thread
                0x000000004037569c       0x39 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
                0x000000004037569c                z_sched_wake_thread
 *fill*         0x00000000403756d5        0x3 
 .text.z_thread_timeout
                0x00000000403756d8        0xd zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
                0x00000000403756d8                z_thread_timeout
 *fill*         0x00000000403756e5        0x3 
 .text.z_pend_curr
                0x00000000403756e8       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
                0x00000000403756e8                z_pend_curr
 .text.z_unpend_thread
                0x0000000040375708       0x1e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040375708                z_unpend_thread
 *fill*         0x0000000040375726        0x2 
 .text.z_reschedule
                0x0000000040375728       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040375728                z_reschedule
 .text.z_sched_start
                0x0000000040375754       0x32 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040375754                z_sched_start
 *fill*         0x0000000040375786        0x2 
 .text.z_reschedule_irqlock
                0x0000000040375788       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040375788                z_reschedule_irqlock
 .text.k_sched_lock
                0x00000000403757b4       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                0x00000000403757b4                k_sched_lock
 *fill*         0x00000000403757cf        0x1 
 .text.k_sched_unlock
                0x00000000403757d0       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2e (size before relaxing)
                0x00000000403757d0                k_sched_unlock
 *fill*         0x00000000403757f6        0x2 
 .text.z_swap_next_thread
                0x00000000403757f8        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x00000000403757f8                z_swap_next_thread
 *fill*         0x0000000040375802        0x2 
 .text.z_get_next_switch_handle
                0x0000000040375804       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040375804                z_get_next_switch_handle
 .text.z_unpend_all
                0x0000000040375818       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
                0x0000000040375818                z_unpend_all
 .text.z_sched_init
                0x000000004037583c        0xf zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000004037583c                z_sched_init
 *fill*         0x000000004037584b        0x1 
 .text.z_impl_k_yield
                0x000000004037584c       0x7a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7e (size before relaxing)
                0x000000004037584c                z_impl_k_yield
 *fill*         0x00000000403758c6        0x2 
 .text.z_tick_sleep
                0x00000000403758c8       0x6a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7a (size before relaxing)
 *fill*         0x0000000040375932        0x2 
 .text.z_impl_k_sleep
                0x0000000040375934       0x42 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040375934                z_impl_k_sleep
 *fill*         0x0000000040375976        0x2 
 .text.z_impl_k_sched_current_thread_query
                0x0000000040375978        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040375978                z_impl_k_sched_current_thread_query
 *fill*         0x0000000040375982        0x2 
 .text.z_thread_abort
                0x0000000040375984       0x2f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040375984                z_thread_abort
 *fill*         0x00000000403759b3        0x1 
 .text.z_impl_k_thread_abort
                0x00000000403759b4        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x00000000403759b4                z_impl_k_thread_abort
 *fill*         0x00000000403759be        0x2 
 .text.idle     0x00000000403759c0        0xc zephyr/kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x00000000403759c0                idle
 *fill*         0x00000000403759cc        0x0 
 .text.elapsed  0x00000000403759cc       0x14 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.next_timeout
                0x00000000403759e0       0x4b zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040375a2b        0x1 
 .text.remove_timeout
                0x0000000040375a2c       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040375a66        0x2 
 .text.z_add_timeout
                0x0000000040375a68      0x104 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x10c (size before relaxing)
                0x0000000040375a68                z_add_timeout
 .text.z_abort_timeout
                0x0000000040375b6c       0x1e zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040375b6c                z_abort_timeout
 *fill*         0x0000000040375b8a        0x2 
 .text.sys_clock_announce
                0x0000000040375b8c       0xd5 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0xdd (size before relaxing)
                0x0000000040375b8c                sys_clock_announce
 *fill*         0x0000000040375c61        0x3 
 .text.sys_clock_tick_get
                0x0000000040375c64       0x28 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040375c64                sys_clock_tick_get
 .text.sys_clock_tick_get_32
                0x0000000040375c8c        0xa zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x0000000040375c8c                sys_clock_tick_get_32
 *fill*         0x0000000040375c96        0x2 
 .text.z_impl_k_uptime_ticks
                0x0000000040375c98        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040375c98                z_impl_k_uptime_ticks
 *fill*         0x0000000040375ca7        0x1 
 .text.sys_timepoint_calc
                0x0000000040375ca8       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x4e (size before relaxing)
                0x0000000040375ca8                sys_timepoint_calc
 *fill*         0x0000000040375cf2        0x2 
 .text.sys_timepoint_timeout
                0x0000000040375cf4       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040375cf4                sys_timepoint_timeout
 *fill*         0x0000000040375d3e        0x2 
 .text.z_heap_aligned_alloc
                0x0000000040375d40       0x25 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x29 (size before relaxing)
 *fill*         0x0000000040375d65        0x3 
 .text.k_free   0x0000000040375d68       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040375d68                k_free
 .text.k_aligned_alloc
                0x0000000040375d7c       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040375d7c                k_aligned_alloc
 .text.k_malloc
                0x0000000040375d90       0x11 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040375d90                k_malloc
 *fill*         0x0000000040375da1        0x3 
 .text.k_thread_system_pool_assign
                0x0000000040375da4        0xb zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040375da4                k_thread_system_pool_assign
 *fill*         0x0000000040375daf        0x1 
 .text.boot_banner
                0x0000000040375db0        0xb zephyr/kernel/libkernel.a(banner.c.obj)
                                          0xe (size before relaxing)
                0x0000000040375db0                boot_banner
 *fill*         0x0000000040375dbb        0x1 
 .text.k_heap_init
                0x0000000040375dbc       0x17 zephyr/kernel/libkernel.a(kheap.c.obj)
                0x0000000040375dbc                k_heap_init
 *fill*         0x0000000040375dd3        0x1 
 .text.statics_init
                0x0000000040375dd4       0x22 zephyr/kernel/libkernel.a(kheap.c.obj)
 *fill*         0x0000000040375df6        0x2 
 .text.k_heap_aligned_alloc
                0x0000000040375df8       0x5a zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x62 (size before relaxing)
                0x0000000040375df8                k_heap_aligned_alloc
 *fill*         0x0000000040375e52        0x2 
 .text.k_heap_free
                0x0000000040375e54       0x2c zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040375e54                k_heap_free
 *fill*         0x0000000040375e80        0x0 
 .text.z_device_state_init
                0x0000000040375e80        0x5 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040375e80                z_device_state_init
 *fill*         0x0000000040375e85        0x3 
 .text.z_device_is_ready
                0x0000000040375e88       0x1a zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040375e88                z_device_is_ready
 *fill*         0x0000000040375ea2        0x2 
 .text.arch_system_halt
                0x0000000040375ea4        0x9 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x0000000040375ea4                arch_system_halt
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x0 
 *fill*         0x0000000040375ead        0x3 
 .text.sys_dlist_remove
                0x0000000040375eb0       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *fill*         0x0000000040375ec3        0x0 
 *libsoc.a:rtc_*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsoc.a:cpu_util.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spiram*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_timing*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040375ec3        0x1 
 .text.spi_timing_config_set_core_clock
                0x0000000040375ec4       0x32 zephyr/libzephyr.a(spi_timing_config.c.obj)
                0x0000000040375ec4                spi_timing_config_set_core_clock
 *fill*         0x0000000040375ef6        0x2 
 .text.spi_timing_config_set_flash_clock
                0x0000000040375ef8       0x3a zephyr/libzephyr.a(spi_timing_config.c.obj)
                0x0000000040375ef8                spi_timing_config_set_flash_clock
 *fill*         0x0000000040375f32        0x2 
 .text.spi_timing_config_set_psram_clock
                0x0000000040375f34       0x33 zephyr/libzephyr.a(spi_timing_config.c.obj)
                0x0000000040375f34                spi_timing_config_set_psram_clock
 *fill*         0x0000000040375f67        0x1 
 .text.spi_timing_config_get_core_clock
                0x0000000040375f68        0x7 zephyr/libzephyr.a(spi_timing_config.c.obj)
                0x0000000040375f68                spi_timing_config_get_core_clock
 *fill*         0x0000000040375f6f        0x0 
 *fill*         0x0000000040375f6f        0x0 
 *fill*         0x0000000040375f6f        0x0 
 *libzephyr.a:spi_flash*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040375f6f        0x1 
 .text.spi_timing_enter_mspi_low_speed_mode
                0x0000000040375f70       0x20 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x28 (size before relaxing)
                0x0000000040375f70                spi_timing_enter_mspi_low_speed_mode
 .text.spi_timing_enter_mspi_high_speed_mode
                0x0000000040375f90       0x2e zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x3a (size before relaxing)
                0x0000000040375f90                spi_timing_enter_mspi_high_speed_mode
 *fill*         0x0000000040375fbe        0x2 
 .text.spi_timing_change_speed_mode_cache_safe
                0x0000000040375fc0       0x37 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x3e (size before relaxing)
                0x0000000040375fc0                spi_timing_change_speed_mode_cache_safe
 *fill*         0x0000000040375ff7        0x0 
 *fill*         0x0000000040375ff7        0x0 
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040375ff7        0x1 
 .text.esp_log_early_timestamp
                0x0000000040375ff8       0x1d zephyr/libzephyr.a(log_noos.c.obj)
                0x0000000040375ff8                esp_log_early_timestamp
                0x0000000040375ff8                esp_log_timestamp
 *fill*         0x0000000040376015        0x0 
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040376015        0x3 
 .text.ccompare_isr
                0x0000000040376018       0x32 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x000000004037604a        0x2 
 .text.sys_clock_set_timeout
                0x000000004037604c       0x68 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x000000004037604c                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x00000000403760b4       0x22 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x00000000403760b4                sys_clock_elapsed
 *fill*         0x00000000403760d6        0x0 
 *fill*         0x00000000403760d6        0x2 
 .text.sys_clock_driver_init
                0x00000000403760d8       0x23 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x00000000403760fb        0x0 
 *fill*         0x00000000403760fb        0x1 
 .text.sys_clock_cycle_get_32
                0x00000000403760fc        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x00000000403760fc                sys_clock_cycle_get_32
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.systimer_hal_init
                0x0000000040376104       0x46 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x0000000040376104                systimer_hal_init
 *fill*         0x000000004037614a        0x2 
 .text.systimer_hal_select_alarm_mode
                0x000000004037614c       0x3f zephyr/libzephyr.a(systimer_hal.c.obj)
                0x000000004037614c                systimer_hal_select_alarm_mode
 *fill*         0x000000004037618b        0x1 
 .text.systimer_hal_connect_alarm_counter
                0x000000004037618c       0x22 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x000000004037618c                systimer_hal_connect_alarm_counter
 *fill*         0x00000000403761ae        0x2 
 .text.systimer_hal_enable_counter
                0x00000000403761b0       0x21 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x00000000403761b0                systimer_hal_enable_counter
 *fill*         0x00000000403761d1        0x0 
 *fill*         0x00000000403761d1        0x0 
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 *fill*         0x00000000403761d1        0x3 
 .text.char_out
                0x00000000403761d4       0x11 zephyr/libzephyr.a(printk.c.obj)
 *fill*         0x00000000403761e5        0x3 
 .text.vprintk  0x00000000403761e8       0x28 zephyr/libzephyr.a(printk.c.obj)
                                         0x2c (size before relaxing)
                0x00000000403761e8                vprintk
 .text.printk   0x0000000040376210       0x22 zephyr/libzephyr.a(printk.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040376210                printk
 *fill*         0x0000000040376232        0x0 
 *fill*         0x0000000040376232        0x0 
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x0000000040376232        0x2 
 .text.console_out
                0x0000000040376234       0x22 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x0000000040376256        0x0 
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040376256        0x2 
 .text.__start  0x0000000040376258        0x8 zephyr/libzephyr.a(loader.c.obj)
                                          0xb (size before relaxing)
                0x0000000040376258                __start
 *fill*         0x0000000040376260        0x0 
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__newlib.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libc.a:*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040376260        0x0 
 .text.z_impl_zephyr_fputc
                0x0000000040376260       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040376260                z_impl_zephyr_fputc
 *fill*         0x0000000040376272        0x2 
 .text.picolibc_put
                0x0000000040376274       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 *fill*         0x0000000040376286        0x2 
 .text.__stdout_hook_install
                0x0000000040376288       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040376288                __stdout_hook_install
 .text.printf   0x00000000403762a0       0x2c c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
                0x00000000403762a0                printf
 .text.__l_vfprintf
                0x00000000403762cc      0x5ba c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
                0x00000000403762cc                __l_vfprintf
 *fill*         0x0000000040376886        0x0 
 *fill*         0x0000000040376886        0x0 
 *fill*         0x0000000040376886        0x2 
 .text.__assert_no_args
                0x0000000040376888        0x3 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000040376888                __assert_no_args
 *fill*         0x000000004037688b        0x1 
 .text.__ultoa_invert
                0x000000004037688c      0x116 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 *fill*         0x00000000403769a2        0x0 
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
                0x00000000403769b4                . = (ALIGN (0x4) + 0x10)
 *fill*         0x00000000403769a2       0x12 

.iram0.text_end
                0x00000000403769b4        0xc load address 0x0000000000003c64
                0x00000000403769c0                . = ALIGN (0x10)
 *fill*         0x00000000403769b4        0xc 
                0x00000000403769c0                _iram_text_end = ABSOLUTE (.)

.iram0.data     0x00000000403769c0        0x0 load address 0x0000000000003c64
                0x00000000403769c0                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.iram.data))
 *(SORT_BY_ALIGNMENT(.iram.data*))

.iram0.bss      0x00000000403769c0        0x0 load address 0x0000000000003c64
                0x00000000403769c0                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.iram.bss))
 *(SORT_BY_ALIGNMENT(.iram.bss*))
                0x00000000403769c0                . = ALIGN (0x10)
                0x00000000403769c0                _iram_end = ABSOLUTE (.)

.dram0.dummy    0x000000003fc88000        0x0
                0x000000003fc88000                . = ALIGN (0x8)
                0x000000003fc88000                . = ((ORIGIN (dram0_0_seg) + MAX (_iram_end, 0x40378000)) - 0x40378000)

bss             0x000000003fc88000      0x298
                0x000000003fc88000                . = ALIGN (0x8)
                0x000000003fc88000                _bss_start = ABSOLUTE (.)
                0x000000003fc88000                __bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss.serial_esp32_usb_data_0
                0x000000003fc88000       0x10 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .bss.z_idle_threads
                0x000000003fc88010       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc88010                z_idle_threads
 .bss.z_main_thread
                0x000000003fc88068       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc88068                z_main_thread
 .bss.slice_timeouts
                0x000000003fc880c0       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.curr_tick
                0x000000003fc880d8        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.mux       0x000000003fc880e0        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.s_apb_freq
                0x000000003fc880e4        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_cur_pll_freq
                0x000000003fc880e8        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_reset_reason
                0x000000003fc880ec        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss.periph_spinlock
                0x000000003fc880f0        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.systimer_hal
                0x000000003fc880f4        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_burn_counter
                0x000000003fc880f8        0x4 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .bss._stdout_hook
                0x000000003fc880fc        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.z_malloc_heap
                0x000000003fc88100        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss.non_iram_int_mask
                0x000000003fc8810c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003fc88110        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.intr_alloc_table
                0x000000003fc88114      0x100 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003fc88214        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.last_ccount$0
                0x000000003fc88218        0x4 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .bss.gpio_data_1
                0x000000003fc8821c        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003fc88228        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003fc88234        0x4 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._cpus_active
                0x000000003fc88238        0x4 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc88238                _cpus_active
 .bss._kernel   0x000000003fc8823c       0x20 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc8823c                _kernel
 .bss.slice_max_prio
                0x000000003fc8825c        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.slice_ticks
                0x000000003fc88260        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.announce_remaining
                0x000000003fc88264        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.ref_counts
                0x000000003fc88268       0x2a zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.isr_connected$0
                0x000000003fc88292        0x1 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003fc88293        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc88293                z_sys_post_kernel
 .bss.slice_expired
                0x000000003fc88294        0x1 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.sched_spinlock
                0x000000003fc88295        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003fc88295                sched_spinlock
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003fc88298                . = ALIGN (0x8)
 *fill*         0x000000003fc88295        0x3 
                0x000000003fc88298                __bss_end = ABSOLUTE (.)
                0x0000000000000001                ASSERT (((__bss_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)

noinit          0x000000003fc882a0     0x2400
                0x000000003fc882a0                . = ALIGN (0x8)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003fc882a0      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc882a0                z_interrupt_stacks
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003fc88aa0      0x400 zephyr/kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x000000003fc88ea0      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc88ea0                z_main_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/mempool.c".kheap_buf__system_heap
                0x000000003fc896a0     0x1000 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003fc896a0                kheap__system_heap
                0x000000003fc8a6a0                . = ALIGN (0x8)

.dram0.data     0x000000003fc8a6a0      0x134 load address 0x0000000000003c64
                0x000000003fc8a6a0                . = ALIGN (0x8)
                0x000000003fc8a6a0                __data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data._char_out
                0x000000003fc8a6a0        0x4 zephyr/libzephyr.a(printk.c.obj)
                0x000000003fc8a6a0                _char_out
 .data.g_rtc_dbias_pvt_non_240m
                0x000000003fc8a6a4        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8a6a4                g_rtc_dbias_pvt_non_240m
 .data.g_dig_dbias_pvt_non_240m
                0x000000003fc8a6a8        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8a6a8                g_dig_dbias_pvt_non_240m
 .data.g_rtc_dbias_pvt_240m
                0x000000003fc8a6ac        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8a6ac                g_rtc_dbias_pvt_240m
 .data.g_dig_dbias_pvt_240m
                0x000000003fc8a6b0        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8a6b0                g_dig_dbias_pvt_240m
 .data.esp_log_default_level
                0x000000003fc8a6b4        0x4 zephyr/libzephyr.a(log.c.obj)
                0x000000003fc8a6b4                esp_log_default_level
 .data.ESP_EFUSE_OCODE
                0x000000003fc8a6b8        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6b8                ESP_EFUSE_OCODE
 .data.ESP_EFUSE_BLK_VERSION_MAJOR
                0x000000003fc8a6c0        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6c0                ESP_EFUSE_BLK_VERSION_MAJOR
 .data.ESP_EFUSE_DIG_DBIAS_HVT
                0x000000003fc8a6c8        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6c8                ESP_EFUSE_DIG_DBIAS_HVT
 .data.ESP_EFUSE_V_DIG_DBIAS20
                0x000000003fc8a6d0        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6d0                ESP_EFUSE_V_DIG_DBIAS20
 .data.ESP_EFUSE_V_RTC_DBIAS20
                0x000000003fc8a6d8        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6d8                ESP_EFUSE_V_RTC_DBIAS20
 .data.ESP_EFUSE_K_DIG_LDO
                0x000000003fc8a6e0        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6e0                ESP_EFUSE_K_DIG_LDO
 .data.ESP_EFUSE_K_RTC_LDO
                0x000000003fc8a6e8        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6e8                ESP_EFUSE_K_RTC_LDO
 .data.ESP_EFUSE_BLK_VERSION_MINOR
                0x000000003fc8a6f0        0x8 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8a6f0                ESP_EFUSE_BLK_VERSION_MINOR
 .data.__stdout
                0x000000003fc8a6f8       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data.gpio_config_1
                0x000000003fc8a708       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003fc8a718       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003fc8a728        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.timeout_list
                0x000000003fc8a734        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.levels$0
                0x000000003fc8a73c       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .rodata.z_cstart.str1.1
                0x000000003fc8a754        0x5 zephyr/kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8a759        0x3 
 .rodata.__pinctrl_dev_config__device_dts_ord_50
                0x000000003fc8a75c        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_50
                0x000000003fc8a764        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_50
                0x000000003fc8a76c       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.str1.1
                0x000000003fc8a77c        0xe zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 *fill*         0x000000003fc8a78a        0x2 
 .dram1.3       0x000000003fc8a78c       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.2       0x000000003fc8a7a0       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.3       0x000000003fc8a7b4        0xc zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .dram1.2       0x000000003fc8a7c0       0x14 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                0x000000003fc8a7d4                . = ALIGN (0x4)

sw_isr_table    0x000000003fc8a7d4      0x100 load address 0x0000000000003d98
                0x000000003fc8a7d4                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003fc8a7d4      0x100 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
                0x000000003fc8a7d4                _sw_isr_table

device_states   0x000000003fc8a8d4        0xc load address 0x0000000000003e98
                0x000000003fc8a8d4                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003fc8a8d4        0x2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003fc8a8d6        0x2 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .z_devstate    0x000000003fc8a8d8        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003fc8a8dc        0x2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_devstate    0x000000003fc8a8de        0x2 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003fc8a8e0                __device_states_end = .

log_mpsc_pbuf_area
                0x000000003fc8a8e0        0x0 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
                0x000000003fc8a8e0                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x000000003fc8a8e0        0x0 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
                0x000000003fc8a8e0                _log_msg_ptr_list_end = .

log_dynamic_area
                0x000000003fc8a8e0        0x0 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x000000003fc8a8e0                _log_dynamic_list_end = .

k_timer_area    0x000000003fc8a8e0        0x0 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003fc8a8e0                _k_timer_list_end = .

k_mem_slab_area
                0x000000003fc8a8e0        0x0 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003fc8a8e0                _k_mem_slab_list_end = .

k_heap_area     0x000000003fc8a8e0       0x14 load address 0x0000000000003ea4
                0x000000003fc8a8e0                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._system_heap_
                0x000000003fc8a8e0       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003fc8a8e0                _system_heap
                0x000000003fc8a8f4                _k_heap_list_end = .

k_mutex_area    0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x000000003fc8a8f4                _k_mutex_list_end = .

k_stack_area    0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003fc8a8f4                _k_stack_list_end = .

k_msgq_area     0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x000000003fc8a8f4                _k_msgq_list_end = .

k_mbox_area     0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003fc8a8f4                _k_mbox_list_end = .

k_pipe_area     0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003fc8a8f4                _k_pipe_list_end = .

k_sem_area      0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x000000003fc8a8f4                _k_sem_list_end = .

k_event_area    0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003fc8a8f4                _k_event_list_end = .

k_queue_area    0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003fc8a8f4                _k_queue_list_end = .

k_fifo_area     0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x000000003fc8a8f4                _k_fifo_list_end = .

k_lifo_area     0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x000000003fc8a8f4                _k_lifo_list_end = .

k_condvar_area  0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003fc8a8f4                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x000000003fc8a8f4                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003fc8a8f4                _net_buf_pool_list_end = .

log_strings_area
                0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x000000003fc8a8f4                _log_strings_list_end = .

log_const_area  0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
                0x000000003fc8a8f4                _log_const_list_end = .

log_backend_area
                0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
                0x000000003fc8a8f4                _log_backend_list_end = .

log_link_area   0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x000000003fc8a8f4                _log_link_list_end = .

.dram0.end      0x000000003fc8a8f4        0x0 load address 0x0000000000003eb8
                0x000000003fc8a8f4                . = ALIGN (0x4)
                0x000000003fc8a8f4                . = ALIGN (0x4)
                0x000000003fc8a8f4                _end = ABSOLUTE (.)
                0x000000003fc8a8f4                __data_end = ABSOLUTE (.)
                0x0000000000010000                _image_irom_start = LOADADDR (.flash.text)
                0x00000000000041a7                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x0000000042030000                _image_irom_vaddr = ADDR (.flash.text)

.flash_text_dummy
                0x0000000042010000    0x10020
                0x00000000000011a8                . = SIZEOF (rodata)
 *fill*         0x0000000042010000     0x11a8 
                0x0000000042020020                . = (ALIGN (0x10000) + 0x20)
 *fill*         0x00000000420111a8     0xee78 

.flash.text     0x0000000042030000     0x41a7 load address 0x0000000000010000
                0x0000000042030000                _stext = .
                0x0000000042030000                _text_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiorslpiram) SORT_BY_ALIGNMENT(.wifiorslpiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.stub) SORT_BY_ALIGNMENT(.gnu.warning) SORT_BY_ALIGNMENT(.gnu.linkonce.literal.*) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*.literal) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*))
 *(SORT_BY_ALIGNMENT(.irom0.text))
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
 *(SORT_BY_ALIGNMENT(.gnu.version))
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.main  0x0000000042030000       0x20 app/libapp.a(main.c.obj)
 .literal.chunk_field
                0x0000000042030020        0x4 zephyr/libzephyr.a(heap.c.obj)
 .literal.chunk_set
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.chunk_size
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_used
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_size
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.mem_to_chunkid
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.bucket_idx$isra$0
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.free_list_remove_bidx
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.free_list_remove
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.alloc_chunk
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.split_chunks
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.merge_chunks
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.free_list_add
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x24 (size before relaxing)
 .literal.free_chunk
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.sys_heap_free
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_heap_alloc
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.sys_heap_aligned_alloc
                0x0000000042030024        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x28 (size before relaxing)
 .literal.sys_heap_init
                0x0000000042030024        0x8 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.__printk_hook_install
                0x000000004203002c        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x0000000042030030        0x8 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.uart_hal_set_sclk
                0x0000000042030038        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_baudrate
                0x000000004203003c       0x14 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_baudrate
                0x0000000042030050        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_set_hw_flow_ctrl
                0x0000000042030050        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x000000004203005c        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x0000000042030060        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_rx_timeout
                0x0000000042030064        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_rxfifo_rst
                0x000000004203006c        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.esp_clk_slowclk_cal_set
                0x0000000042030070        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.rtc_clk_bbpll_disable
                0x0000000042030074        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.wait_dig_dbias_valid$constprop$0
                0x000000004203007c        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x0000000042030080       0x2c zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x34 (size before relaxing)
 .literal.rtc_clk_32k_enable_internal
                0x00000000420300ac       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable
                0x00000000420300bc        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x00000000420300c8        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_freq_set
                0x00000000420300d4        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_freq_get
                0x00000000420300dc        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_freq_set
                0x00000000420300dc        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_fast_freq_get
                0x00000000420300e0        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_bbpll_configure
                0x00000000420300e0        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x34 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x00000000420300e8        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x1c (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x00000000420300ec        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x00000000420300f4        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x00000000420300f4        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x20 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x00000000420300f8        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x34 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x00000000420300fc        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x00000000420300fc        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x00000000420300fc        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x00000000420300fc        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_divider_set
                0x00000000420300fc        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_8m_divider_set
                0x0000000042030104        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.get_rtc_dbias_by_efuse$constprop$0
                0x0000000042030108       0x20 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0x3c (size before relaxing)
 .literal.rtc_init
                0x0000000042030128       0xdc zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x1b4 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x0000000042030204       0x28 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x3c (size before relaxing)
 .literal.rtc_clk_cal
                0x000000004203022c        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_time_us_to_slowclk
                0x000000004203022c        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_time_get
                0x000000004203022c        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_init
                0x0000000042030238       0x20 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x6c (size before relaxing)
 .literal.rtc_sleep_pu
                0x0000000042030258       0x1c zephyr/libzephyr.a(rtc_sleep.c.obj)
                                         0x28 (size before relaxing)
 .literal.select_rtc_slow_clk
                0x0000000042030274        0xc zephyr/libzephyr.a(clk.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_clk_init
                0x0000000042030280        0xc zephyr/libzephyr.a(clk.c.obj)
                                         0x30 (size before relaxing)
 .literal.esp_reset_reason_init
                0x000000004203028c       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x14 (size before relaxing)
 .literal.periph_ll_get_rst_en_mask
                0x000000004203029c        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_enable
                0x00000000420302a0       0x1c zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.periph_module_disable
                0x00000000420302bc        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.interrupt_controller_hal_desc_type
                0x00000000420302bc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_level
                0x00000000420302bc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_flags
                0x00000000420302bc        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_table
                0x00000000420302bc        0x4 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.esp_timer_early_init
                0x00000000420302c0        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_timer_impl_early_init
                0x00000000420302c0       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_efuse_read_field_blob
                0x00000000420302d4        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_efuse_utility_process
                0x00000000420302dc       0x10 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_efuse_utility_read_reg
                0x00000000420302ec        0x4 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_efuse_utility_fill_buff
                0x00000000420302f0        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_efuse_utility_count_once
                0x00000000420302fc        0x4 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_isr_install
                0x0000000042030300        0x4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x8 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x0000000042030304        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x4 (size before relaxing)
 .literal.abort
                0x0000000042030304        0xc zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.malloc_prepare
                0x0000000042030310        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_intr_lock
                0x000000004203031c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x0000000042030320        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x0000000042030320        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.default_intr_handler
                0x0000000042030324        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.is_vect_desc_usable
                0x0000000042030328        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.get_desc_for_int
                0x0000000042030330        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.set_interrupt_handler
                0x0000000042030338        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_intr_initialize
                0x0000000042030338        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x0000000042030338       0x20 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x84 (size before relaxing)
 .literal.esp_intr_alloc
                0x0000000042030358        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_get_status
                0x0000000042030358        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x0000000042030360        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_off
                0x0000000042030360        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_on
                0x0000000042030360        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_init
                0x0000000042030360       0x3c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x7c (size before relaxing)
 .literal.uart_console_init
                0x000000004203039c        0xc zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x14 (size before relaxing)
 .literal.entropy_esp32_get_entropy
                0x00000000420303a8       0x14 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.gpio_esp32_port_get_raw
                0x00000000420303bc        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_port_set_masked_raw
                0x00000000420303c0        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_set_bits_raw
                0x00000000420303c0        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_clear_bits_raw
                0x00000000420303c0        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_toggle_bits
                0x00000000420303c0        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_pin_interrupt_configure
                0x00000000420303c0        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_get_pending_int
                0x00000000420303c8        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_init
                0x00000000420303c8        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_config
                0x00000000420303d0       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x3c (size before relaxing)
 .literal.pinctrl_configure_pins
                0x00000000420303f4       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                         0x4c (size before relaxing)
 .literal.uart_esp32_config_get
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x3c (size before relaxing)
 .literal.uart_esp32_init
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.serial_esp32_usb_init
                0x0000000042030404        0x0 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                                          0x4 (size before relaxing)
 .literal.serial_esp32_usb_poll_in
                0x0000000042030404        0x4 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .literal.serial_esp32_usb_poll_out
                0x0000000042030408        0x4 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                                         0x14 (size before relaxing)
 .text.main     0x000000004203040c       0x74 app/libapp.a(main.c.obj)
                0x000000004203040c                main
 .text.chunk_field
                0x0000000042030480       0x20 zephyr/libzephyr.a(heap.c.obj)
 .text.chunk_set
                0x00000000420304a0       0x20 zephyr/libzephyr.a(heap.c.obj)
 .text.chunk_size
                0x00000000420304c0       0x11 zephyr/libzephyr.a(heap.c.obj)
                                         0x15 (size before relaxing)
 *fill*         0x00000000420304d1        0x3 
 .text.set_chunk_used
                0x00000000420304d4       0x3b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x000000004203050f        0x1 
 .text.set_chunk_size
                0x0000000042030510       0x13 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x0000000042030523        0x1 
 .text.mem_to_chunkid
                0x0000000042030524       0x1b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x000000004203053f        0x1 
 .text.bucket_idx$isra$0
                0x0000000042030540       0x21 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x0000000042030561        0x3 
 .text.free_list_remove_bidx
                0x0000000042030564       0x56 zephyr/libzephyr.a(heap.c.obj)
                                         0x62 (size before relaxing)
 *fill*         0x00000000420305ba        0x2 
 .text.free_list_remove
                0x00000000420305bc       0x28 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .text.alloc_chunk
                0x00000000420305e4       0x74 zephyr/libzephyr.a(heap.c.obj)
                                         0x7c (size before relaxing)
 .text.split_chunks
                0x0000000042030658       0x46 zephyr/libzephyr.a(heap.c.obj)
                                         0x56 (size before relaxing)
 *fill*         0x000000004203069e        0x2 
 .text.merge_chunks
                0x00000000420306a0       0x32 zephyr/libzephyr.a(heap.c.obj)
                                         0x42 (size before relaxing)
 *fill*         0x00000000420306d2        0x2 
 .text.free_list_add
                0x00000000420306d4       0x88 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.free_chunk
                0x000000004203075c       0x78 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.sys_heap_free
                0x00000000420307d4       0x24 zephyr/libzephyr.a(heap.c.obj)
                                         0x2c (size before relaxing)
                0x00000000420307d4                sys_heap_free
 .text.sys_heap_alloc
                0x00000000420307f8       0x72 zephyr/libzephyr.a(heap.c.obj)
                                         0x7e (size before relaxing)
                0x00000000420307f8                sys_heap_alloc
 *fill*         0x000000004203086a        0x2 
 .text.sys_heap_aligned_alloc
                0x000000004203086c       0xe6 zephyr/libzephyr.a(heap.c.obj)
                                         0xfe (size before relaxing)
                0x000000004203086c                sys_heap_aligned_alloc
 *fill*         0x0000000042030952        0x2 
 .text.sys_heap_init
                0x0000000042030954       0xac zephyr/libzephyr.a(heap.c.obj)
                                         0xc8 (size before relaxing)
                0x0000000042030954                sys_heap_init
 .text.__printk_hook_install
                0x0000000042030a00        0xa zephyr/libzephyr.a(printk.c.obj)
                0x0000000042030a00                __printk_hook_install
 *fill*         0x0000000042030a0a        0x2 
 .text.z_thread_entry
                0x0000000042030a0c       0x18 zephyr/libzephyr.a(thread_entry.c.obj)
                0x0000000042030a0c                z_thread_entry
 .text.uart_hal_set_sclk
                0x0000000042030a24       0x4e zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030a24                uart_hal_set_sclk
 *fill*         0x0000000042030a72        0x2 
 .text.uart_hal_set_baudrate
                0x0000000042030a74       0x97 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030a74                uart_hal_set_baudrate
 *fill*         0x0000000042030b0b        0x1 
 .text.uart_hal_get_baudrate
                0x0000000042030b0c       0x50 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030b0c                uart_hal_get_baudrate
 .text.uart_hal_set_hw_flow_ctrl
                0x0000000042030b5c       0x65 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030b5c                uart_hal_set_hw_flow_ctrl
 *fill*         0x0000000042030bc1        0x3 
 .text.uart_hal_set_txfifo_empty_thr
                0x0000000042030bc4       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030bc4                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_mode
                0x0000000042030be4      0x19b zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042030be4                uart_hal_set_mode
 *fill*         0x0000000042030d7f        0x1 
 .text.uart_hal_set_rx_timeout
                0x0000000042030d80       0x52 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x56 (size before relaxing)
                0x0000000042030d80                uart_hal_set_rx_timeout
 *fill*         0x0000000042030dd2        0x2 
 .text.uart_hal_rxfifo_rst
                0x0000000042030dd4       0x29 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042030dd4                uart_hal_rxfifo_rst
 *fill*         0x0000000042030dfd        0x3 
 .text.esp_clk_slowclk_cal_set
                0x0000000042030e00        0xd zephyr/libzephyr.a(esp_clk.c.obj)
                0x0000000042030e00                esp_clk_slowclk_cal_set
 *fill*         0x0000000042030e0d        0x3 
 .text.rtc_clk_bbpll_disable
                0x0000000042030e10       0x1f zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x0000000042030e2f        0x1 
 .text.wait_dig_dbias_valid$constprop$0
                0x0000000042030e30       0x24 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x27 (size before relaxing)
 *fill*         0x0000000042030e54        0x0 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x0000000042030e54       0x9f zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x0000000042030ef3        0x1 
 .text.rtc_clk_32k_enable_internal
                0x0000000042030ef4       0x83 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042030ef4                rtc_clk_32k_enable_internal
 *fill*         0x0000000042030f77        0x1 
 .text.rtc_clk_32k_enable
                0x0000000042030f78       0x61 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042030f78                rtc_clk_32k_enable
 *fill*         0x0000000042030fd9        0x3 
 .text.rtc_clk_8m_enable
                0x0000000042030fdc       0x84 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042030fdc                rtc_clk_8m_enable
 .text.rtc_clk_slow_freq_set
                0x0000000042031060       0x76 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031060                rtc_clk_slow_freq_set
 *fill*         0x00000000420310d6        0x2 
 .text.rtc_clk_slow_freq_get
                0x00000000420310d8       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000420310d8                rtc_clk_slow_freq_get
 .text.rtc_clk_fast_freq_set
                0x00000000420310e8       0x2e zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000420310e8                rtc_clk_fast_freq_set
 *fill*         0x0000000042031116        0x2 
 .text.rtc_clk_fast_freq_get
                0x0000000042031118       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031118                rtc_clk_fast_freq_get
 .text.rtc_clk_bbpll_configure
                0x0000000042031128      0x143 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031128                rtc_clk_bbpll_configure
 *fill*         0x000000004203126b        0x1 
 .text.rtc_clk_cpu_freq_to_xtal
                0x000000004203126c       0x70 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004203126c                rtc_clk_cpu_freq_to_xtal
 .text.rtc_clk_xtal_freq_get
                0x00000000420312dc       0x3e zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000420312dc                rtc_clk_xtal_freq_get
                0x00000000420312dc                rtc_get_xtal
 *fill*         0x000000004203131a        0x2 
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x000000004203131c       0x52 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x56 (size before relaxing)
                0x000000004203131c                rtc_clk_cpu_freq_mhz_to_config
 *fill*         0x000000004203136e        0x2 
 .text.rtc_clk_cpu_freq_get_config
                0x0000000042031370       0xae zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031370                rtc_clk_cpu_freq_get_config
 *fill*         0x000000004203141e        0x2 
 .text.rtc_clk_cpu_freq_set_config
                0x0000000042031420       0xab zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xbb (size before relaxing)
                0x0000000042031420                rtc_clk_cpu_freq_set_config
 *fill*         0x00000000420314cb        0x1 
 .text.rtc_clk_cpu_freq_set_xtal
                0x00000000420314cc       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x19 (size before relaxing)
                0x00000000420314cc                rtc_clk_cpu_freq_set_xtal
 *fill*         0x00000000420314dd        0x3 
 .text.rtc_clk_xtal_freq_update
                0x00000000420314e0       0x16 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000420314e0                rtc_clk_xtal_freq_update
 *fill*         0x00000000420314f6        0x2 
 .text.rtc_clk_apb_freq_update
                0x00000000420314f8        0xa zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000420314f8                rtc_clk_apb_freq_update
 *fill*         0x0000000042031502        0x2 
 .text.rtc_clk_apb_freq_get
                0x0000000042031504        0xa zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031504                rtc_clk_apb_freq_get
 *fill*         0x000000004203150e        0x2 
 .text.rtc_clk_divider_set
                0x0000000042031510       0x49 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x0000000042031510                rtc_clk_divider_set
 *fill*         0x0000000042031559        0x3 
 .text.rtc_clk_8m_divider_set
                0x000000004203155c       0x44 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004203155c                rtc_clk_8m_divider_set
 .text.get_rtc_dbias_by_efuse$constprop$0
                0x00000000420315a0      0x118 zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x124 (size before relaxing)
 .text.rtc_init
                0x00000000420316b8      0x7bc zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x7e8 (size before relaxing)
                0x00000000420316b8                rtc_init
 .text.rtc_clk_cal_internal
                0x0000000042031e74      0x1de zephyr/libzephyr.a(rtc_time.c.obj)
                0x0000000042031e74                rtc_clk_cal_internal
 *fill*         0x0000000042032052        0x2 
 .text.rtc_clk_cal
                0x0000000042032054       0x4c zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x54 (size before relaxing)
                0x0000000042032054                rtc_clk_cal
 .text.rtc_time_us_to_slowclk
                0x00000000420320a0       0x1f zephyr/libzephyr.a(rtc_time.c.obj)
                0x00000000420320a0                rtc_time_us_to_slowclk
 *fill*         0x00000000420320bf        0x1 
 .text.rtc_time_get
                0x00000000420320c0       0x2a zephyr/libzephyr.a(rtc_time.c.obj)
                0x00000000420320c0                rtc_time_get
 *fill*         0x00000000420320ea        0x2 
 .text.rtc_clk_init
                0x00000000420320ec      0x132 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0x14e (size before relaxing)
                0x00000000420320ec                rtc_clk_init
 *fill*         0x000000004203221e        0x2 
 .text.rtc_sleep_pu
                0x0000000042032220      0x19d zephyr/libzephyr.a(rtc_sleep.c.obj)
                0x0000000042032220                rtc_sleep_pu
 *fill*         0x00000000420323bd        0x3 
 .text.select_rtc_slow_clk
                0x00000000420323c0       0x6b zephyr/libzephyr.a(clk.c.obj)
                                         0x7b (size before relaxing)
 *fill*         0x000000004203242b        0x1 
 .text.esp_clk_init
                0x000000004203242c       0x79 zephyr/libzephyr.a(clk.c.obj)
                                         0x8d (size before relaxing)
                0x000000004203242c                esp_clk_init
 *fill*         0x00000000420324a5        0x3 
 .text.esp_reset_reason_init
                0x00000000420324a8       0x9a zephyr/libzephyr.a(reset_reason.c.obj)
                0x00000000420324a8                esp_reset_reason_init
 *fill*         0x0000000042032542        0x2 
 .text.periph_ll_get_rst_en_mask
                0x0000000042032544       0xcb zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x000000004203260f        0x1 
 .text.periph_module_enable
                0x0000000042032610       0x9b zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9f (size before relaxing)
                0x0000000042032610                periph_module_enable
 *fill*         0x00000000420326ab        0x1 
 .text.periph_module_disable
                0x00000000420326ac       0xa9 zephyr/libzephyr.a(periph_ctrl.c.obj)
                0x00000000420326ac                periph_module_disable
 *fill*         0x0000000042032755        0x3 
 .text.interrupt_controller_hal_desc_type
                0x0000000042032758       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x0000000042032758                interrupt_controller_hal_desc_type
 *fill*         0x000000004203276a        0x2 
 .text.interrupt_controller_hal_desc_level
                0x000000004203276c       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x000000004203276c                interrupt_controller_hal_desc_level
 *fill*         0x000000004203277e        0x2 
 .text.interrupt_controller_hal_desc_flags
                0x0000000042032780       0x15 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x0000000042032780                interrupt_controller_hal_desc_flags
 *fill*         0x0000000042032795        0x3 
 .text.interrupt_controller_hal_desc_table
                0x0000000042032798        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                0x0000000042032798                interrupt_controller_hal_desc_table
 .text.esp_timer_early_init
                0x00000000420327a0        0xa zephyr/libzephyr.a(esp_timer.c.obj)
                                          0xd (size before relaxing)
                0x00000000420327a0                esp_timer_early_init
 *fill*         0x00000000420327aa        0x2 
 .text.esp_timer_impl_early_init
                0x00000000420327ac       0x34 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                0x00000000420327ac                esp_timer_impl_early_init
 .text.esp_efuse_read_field_blob
                0x00000000420327e0       0x54 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                         0x5c (size before relaxing)
                0x00000000420327e0                esp_efuse_read_field_blob
 .text.esp_efuse_utility_process
                0x0000000042032834      0x144 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                0x0000000042032834                esp_efuse_utility_process
 .text.esp_efuse_utility_read_reg
                0x0000000042032978       0x2b zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                0x0000000042032978                esp_efuse_utility_read_reg
 *fill*         0x00000000420329a3        0x1 
 .text.esp_efuse_utility_fill_buff
                0x00000000420329a4       0xb1 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                0x00000000420329a4                esp_efuse_utility_fill_buff
 *fill*         0x0000000042032a55        0x3 
 .text.esp_efuse_utility_count_once
                0x0000000042032a58       0x38 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x3c (size before relaxing)
                0x0000000042032a58                esp_efuse_utility_count_once
 .text.z_isr_install
                0x0000000042032a90       0x14 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x18 (size before relaxing)
                0x0000000042032a90                z_isr_install
 .text.arch_irq_connect_dynamic
                0x0000000042032aa4        0xe zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x12 (size before relaxing)
                0x0000000042032aa4                arch_irq_connect_dynamic
 *fill*         0x0000000042032ab2        0x2 
 .text.abort    0x0000000042032ab4       0x14 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                0x0000000042032ab4                abort
 .text.malloc_prepare
                0x0000000042032ac8       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x0000000042032ae9        0x3 
 .text.esp_intr_lock
                0x0000000042032aec        0xd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000042032af9        0x3 
 .text.esp_intr_unlock
                0x0000000042032afc       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x0000000042032b0c       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000042032b2f        0x1 
 .text.default_intr_handler
                0x0000000042032b30       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000042032b30                default_intr_handler
 *fill*         0x0000000042032b46        0x2 
 .text.is_vect_desc_usable
                0x0000000042032b48       0xa6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0xae (size before relaxing)
 *fill*         0x0000000042032bee        0x2 
 .text.get_desc_for_int
                0x0000000042032bf0       0x94 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.set_interrupt_handler
                0x0000000042032c84       0x2e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x0000000042032cb2        0x2 
 .text.esp_intr_initialize
                0x0000000042032cb4       0x1a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000042032cb4                esp_intr_initialize
 *fill*         0x0000000042032cce        0x2 
 .text.esp_intr_alloc_intrstatus
                0x0000000042032cd0      0x373 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x38b (size before relaxing)
                0x0000000042032cd0                esp_intr_alloc_intrstatus
 *fill*         0x0000000042033043        0x1 
 .text.esp_intr_alloc
                0x0000000042033044       0x18 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x0000000042033044                esp_intr_alloc
 .text.clock_control_esp32_get_status
                0x000000004203305c       0x41 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x000000004203309d        0x3 
 .text.clock_control_esp32_get_rate
                0x00000000420330a0       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .text.clock_control_esp32_off
                0x00000000420330b0        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_on
                0x00000000420330bc        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_init
                0x00000000420330c8      0x1f2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x20e (size before relaxing)
 *fill*         0x00000000420332ba        0x2 
 .text.uart_console_init
                0x00000000420332bc       0x28 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.entropy_esp32_get_entropy
                0x00000000420332e4       0x5d zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 *fill*         0x0000000042033341        0x3 
 .text.gpio_esp32_port_get_raw
                0x0000000042033344       0x26 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004203336a        0x2 
 .text.gpio_esp32_port_set_masked_raw
                0x000000004203336c       0x5a zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420333c6        0x2 
 .text.gpio_esp32_port_set_bits_raw
                0x00000000420333c8       0x33 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420333fb        0x1 
 .text.gpio_esp32_port_clear_bits_raw
                0x00000000420333fc       0x33 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004203342f        0x1 
 .text.gpio_esp32_port_toggle_bits
                0x0000000042033430       0x50 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_pin_interrupt_configure
                0x0000000042033480       0xfc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_get_pending_int
                0x000000004203357c       0x26 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420335a2        0x2 
 .text.gpio_esp32_init
                0x00000000420335a4       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x25 (size before relaxing)
 *fill*         0x00000000420335c5        0x3 
 .text.gpio_esp32_config
                0x00000000420335c8      0x29c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.pinctrl_configure_pins
                0x0000000042033864      0x386 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                0x0000000042033864                pinctrl_configure_pins
 *fill*         0x0000000042033bea        0x2 
 .text.uart_esp32_config_get
                0x0000000042033bec       0x9a zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0xa6 (size before relaxing)
 *fill*         0x0000000042033c86        0x2 
 .text.uart_esp32_poll_out
                0x0000000042033c88       0x28 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.uart_esp32_poll_in
                0x0000000042033cb0       0x24 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .text.uart_esp32_configure
                0x0000000042033cd4       0xe2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x10a (size before relaxing)
 *fill*         0x0000000042033db6        0x2 
 .text.uart_esp32_init
                0x0000000042033db8       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.serial_esp32_usb_init
                0x0000000042033dcc       0x20 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .text.serial_esp32_usb_poll_in
                0x0000000042033dec       0x24 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .text.serial_esp32_usb_poll_out
                0x0000000042033e10       0x7f zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 *fill*         0x0000000042033e8f        0x1 
 .text._OffsetAbsSyms
                0x0000000042033e90        0x5 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                0x0000000042033e90                _OffsetAbsSyms
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x0 
 *fill*         0x0000000042033e95        0x3 
 .text._ConfigAbsSyms
                0x0000000042033e98        0x5 zephyr/libzephyr.a(configs.c.obj)
                0x0000000042033e98                _ConfigAbsSyms
 *fill*         0x0000000042033e9d        0x3 
 .text.sys_trace_idle
                0x0000000042033ea0        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
                0x0000000042033ea0                sys_trace_idle
 *fill*         0x0000000042033ea5        0x0 
 *fill*         0x0000000042033ea5        0x0 
 *fill*         0x0000000042033ea5        0x3 
 .text.uart_hal_set_stop_bits
                0x0000000042033ea8       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033ea8                uart_hal_set_stop_bits
 .text.uart_hal_get_stop_bits
                0x0000000042033ec8       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033ec8                uart_hal_get_stop_bits
 *fill*         0x0000000042033ed9        0x3 
 .text.uart_hal_set_data_bit_num
                0x0000000042033edc       0x1f zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033edc                uart_hal_set_data_bit_num
 *fill*         0x0000000042033efb        0x1 
 .text.uart_hal_get_data_bit_num
                0x0000000042033efc       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033efc                uart_hal_get_data_bit_num
 *fill*         0x0000000042033f0d        0x3 
 .text.uart_hal_set_parity
                0x0000000042033f10       0x35 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033f10                uart_hal_set_parity
 *fill*         0x0000000042033f45        0x3 
 .text.uart_hal_get_parity
                0x0000000042033f48       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033f48                uart_hal_get_parity
 *fill*         0x0000000042033f68        0x0 
 .text.uart_hal_get_hw_flow_ctrl
                0x0000000042033f68       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033f68                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x0000000042033f8c       0x1d zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033f8c                uart_hal_set_rxfifo_full_thr
 *fill*         0x0000000042033fa9        0x0 
 *fill*         0x0000000042033fa9        0x3 
 .text.uart_hal_is_mode_rs485_half_duplex
                0x0000000042033fac       0x1b zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033fac                uart_hal_is_mode_rs485_half_duplex
 *fill*         0x0000000042033fc7        0x1 
 .text.uart_hal_get_symb_len
                0x0000000042033fc8       0x46 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042033fc8                uart_hal_get_symb_len
 *fill*         0x000000004203400e        0x0 
 *fill*         0x000000004203400e        0x0 
 *fill*         0x000000004203400e        0x2 
 .text.uart_hal_write_txfifo
                0x0000000042034010       0x3a zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042034010                uart_hal_write_txfifo
 *fill*         0x000000004203404a        0x2 
 .text.uart_hal_read_rxfifo
                0x000000004203404c       0x2e zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x000000004203404c                uart_hal_read_rxfifo
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x0 
 *fill*         0x000000004203407a        0x2 
 .text.esp_efuse_get_field_size
                0x000000004203407c       0x1e zephyr/libzephyr.a(esp_efuse_api.c.obj)
                0x000000004203407c                esp_efuse_get_field_size
 *fill*         0x000000004203409a        0x2 
 .text.esp_efuse_utility_get_number_of_items
                0x000000004203409c       0x16 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                0x000000004203409c                esp_efuse_utility_get_number_of_items
 *fill*         0x00000000420340b2        0x0 
 *fill*         0x00000000420340b2        0x0 
 *fill*         0x00000000420340b2        0x2 
 .text.z_get_sw_isr_table_idx
                0x00000000420340b4        0x5 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x00000000420340b4                z_get_sw_isr_table_idx
 *fill*         0x00000000420340b9        0x0 
 *fill*         0x00000000420340b9        0x0 
 *fill*         0x00000000420340b9        0x3 
 .text.z_xt_ints_on
                0x00000000420340bc       0x11 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000420340cd        0x3 
 .text.z_xt_ints_off
                0x00000000420340d0       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x0 
 *fill*         0x00000000420340e6        0x2 
 .text.clock_control_esp32_async_on
                0x00000000420340e8        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000420340f0        0x0 
 *fill*         0x00000000420340f0        0x0 
 .text.entropy_esp32_init
                0x00000000420340f0        0x7 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 *fill*         0x00000000420340f7        0x0 
 *fill*         0x00000000420340f7        0x0 
 *fill*         0x00000000420340f7        0x0 
 *fill*         0x00000000420340f7        0x0 
 *fill*         0x00000000420340f7        0x0 
 *fill*         0x00000000420340f7        0x1 
 .text.gpio_esp32_manage_callback
                0x00000000420340f8       0x56 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004203414e        0x0 
 *fill*         0x000000004203414e        0x0 
 *fill*         0x000000004203414e        0x2 
 .text.pinctrl_lookup_state
                0x0000000042034150       0x2a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                0x0000000042034150                pinctrl_lookup_state
 *fill*         0x000000004203417a        0x0 
 *fill*         0x000000004203417a        0x2 
 .text.uart_esp32_err_check
                0x000000004203417c       0x13 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x000000004203418f        0x0 
 *fill*         0x000000004203418f        0x0 
 *fill*         0x000000004203418f        0x1 
 .text.serial_esp32_usb_err_check
                0x0000000042034190        0x7 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 *fill*         0x0000000042034197        0x0 
                0x00000000420341a7                . = (. + 0x10)
 *fill*         0x0000000042034197       0x10 
                0x00000000420341a7                _text_end = ABSOLUTE (.)
                0x00000000420341a7                _etext = .
                0x0000000000000000                _flash_cache_start = ABSOLUTE (0x0)

.rtc.text       0x00000000600fe000        0x0 load address 0x00000000000141a7
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.text))
 *(SORT_BY_ALIGNMENT(.rtc.entry.text))
 *rtc_wake_stub*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
                0x00000000600fe000                _rtc_text_end = ABSOLUTE (.)

.rtc.dummy      0x00000000600fe000        0x0 load address 0x00000000000141a7
                0x00000000600fe000                _rtc_dummy_start = ABSOLUTE (.)
                0x00000000600fe000                _rtc_fast_start = ABSOLUTE (.)
                0x0000000000000000                . = SIZEOF (.rtc.text)
                0x00000000600fe000                _rtc_dummy_end = ABSOLUTE (.)

.rtc.force_fast
                0x00000000600fe000        0x0 load address 0x00000000000141a7
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_force_fast_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_fast) SORT_BY_ALIGNMENT(.rtc.force_fast.*))
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_force_fast_end = ABSOLUTE (.)

.rtc.data       0x0000000050000000        0x0 load address 0x00000000000141a7
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.data.*) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x00000000000141a7
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *rtc_wake_stub*.*(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
 *rtc_wake_stub*.*(SORT_BY_ALIGNMENT(COMMON))
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x00000000000141a7
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *rtc_wake_stub*.*(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
 *rtc_wake_stub*.*(SORT_BY_ALIGNMENT(COMMON))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc_noinit     0x0000000050000000        0x0 load address 0x00000000000141a7
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_noinit_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc_noinit) SORT_BY_ALIGNMENT(.rtc_noinit.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_noinit_end = ABSOLUTE (.)

.rtc.force_slow
                0x0000000050000000        0x0 load address 0x00000000000141a7
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_slow) SORT_BY_ALIGNMENT(.rtc.force_slow.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_end = ABSOLUTE (.)
                0x0000000000000000                _rtc_slow_length = (_rtc_force_slow_end - _rtc_data_start)
                0x0000000000000000                _rtc_fast_length = (_rtc_force_fast_end - _rtc_fast_start)
                0x0000000000000001                ASSERT ((_rtc_slow_length <= LENGTH (rtc_slow_seg)), RTC_SLOW segment data does not fit.)
                0x0000000000000001                ASSERT ((_rtc_fast_length <= LENGTH (rtc_data_seg)), RTC_FAST segment data does not fit.)

/DISCARD/
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))
                0x000000003fceb910                _heap_sentry = 0x3fceb910

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x20
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x20 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
                                         0x21 (size before relaxing)
 .comment       0x0000000000000020       0x21 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .comment       0x0000000000000020       0x21 app/libapp.a(main.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_cache.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(loader.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(reset_reason.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(systimer_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x1740
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000020       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_aranges
                0x0000000000000090       0x18 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .debug_aranges
                0x00000000000000a8       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x00000000000000c8       0x20 app/libapp.a(main.c.obj)
 .debug_aranges
                0x00000000000000e8       0xb8 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x00000000000001a0       0x50 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x00000000000001f0       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x0000000000000210       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000230       0x38 zephyr/libzephyr.a(soc.c.obj)
 .debug_aranges
                0x0000000000000268       0x28 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_aranges
                0x0000000000000290       0x20 zephyr/libzephyr.a(loader.c.obj)
 .debug_aranges
                0x00000000000002b0       0x38 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x00000000000002e8      0x100 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x00000000000003e8       0x40 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000428       0x58 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_aranges
                0x0000000000000480       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000000498       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x00000000000004b0       0x58 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_aranges
                0x0000000000000508       0x48 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_aranges
                0x0000000000000550       0x58 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_aranges
                0x00000000000005a8      0x110 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x00000000000006b8       0x38 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x00000000000006f0       0x68 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x0000000000000758       0x20 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x0000000000000778       0x48 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_aranges
                0x00000000000007c0       0x20 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_aranges
                0x00000000000007e0       0x38 zephyr/libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000818       0x38 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_aranges
                0x0000000000000850       0x38 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000888       0x30 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_aranges
                0x00000000000008b8       0x20 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_aranges
                0x00000000000008d8       0x98 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x0000000000000970       0x88 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_aranges
                0x00000000000009f8       0x78 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_aranges
                0x0000000000000a70       0x38 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x0000000000000aa8       0x50 zephyr/libzephyr.a(log.c.obj)
 .debug_aranges
                0x0000000000000af8       0x18 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_aranges
                0x0000000000000b10       0x40 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x0000000000000b50       0x90 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_aranges
                0x0000000000000be0       0x90 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x0000000000000c70       0x20 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x0000000000000c90       0x28 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_aranges
                0x0000000000000cb8       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x0000000000000ce0       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000000d10       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000000d48       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000000d68       0x60 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_aranges
                0x0000000000000dc8       0xb8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_aranges
                0x0000000000000e80       0x20 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_aranges
                0x0000000000000ea0       0x60 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_aranges
                0x0000000000000f00       0xd0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000000fd0       0x48 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x0000000000001018       0x30 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x0000000000001048       0x28 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_aranges
                0x0000000000001070       0x78 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x00000000000010e8       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_aranges
                0x0000000000001108       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_aranges
                0x0000000000001128       0x48 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x0000000000001170       0x38 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_aranges
                0x00000000000011a8       0x40 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x00000000000011e8       0x20 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_aranges
                0x0000000000001208       0x38 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x0000000000001240       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x00000000000012a0       0x58 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x00000000000012f8       0xb8 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x00000000000013b0      0x220 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x00000000000015d0       0x30 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000001600       0x90 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000001690       0x50 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x00000000000016e0       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000001700       0x40 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0x50614
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000      0x10c zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .debug_info    0x000000000000010c       0xe2 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x00000000000001ee      0xaa2 app/libapp.a(main.c.obj)
 .debug_info    0x0000000000000c90     0x2935 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x00000000000035c5      0x599 zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000003b5e      0x5a7 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x0000000000004105       0x38 zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x000000000000413d     0x53fd zephyr/libzephyr.a(soc.c.obj)
 .debug_info    0x000000000000953a      0x2a2 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_info    0x00000000000097dc       0xa5 zephyr/libzephyr.a(loader.c.obj)
 .debug_info    0x0000000000009881       0x56 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x00000000000098d7     0x3245 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_info    0x000000000000cb1c     0x1ca4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x000000000000e7c0      0x6ca zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_info    0x000000000000ee8a       0xca zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x000000000000ef54      0x1af zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x000000000000f103      0x64c zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_info    0x000000000000f74f      0x2b8 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_info    0x000000000000fa07      0x5d0 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_info    0x000000000000ffd7     0x12a5 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x000000000001127c     0x1424 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_info    0x00000000000126a0      0x573 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_info    0x0000000000012c13      0x7fd zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x0000000000013410      0x5b9 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_info    0x00000000000139c9      0x132 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_info    0x0000000000013afb      0xa4f zephyr/libzephyr.a(clk.c.obj)
 .debug_info    0x000000000001454a      0x42c zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_info    0x0000000000014976      0x692 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x0000000000015008      0x233 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_info    0x000000000001523b      0x1f2 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_info    0x000000000001542d     0x24f1 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_info    0x000000000001791e     0x1700 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_info    0x000000000001901e     0x19b3 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_info    0x000000000001a9d1      0x216 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_info    0x000000000001abe7      0x9e2 zephyr/libzephyr.a(log.c.obj)
 .debug_info    0x000000000001b5c9     0x2dee zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_info    0x000000000001e3b7      0x551 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x000000000001e908     0x12c6 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_info    0x000000000001fbce     0x124e zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x0000000000020e1c       0xba zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x0000000000020ed6      0x1e4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_info    0x00000000000210ba       0xd4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x000000000002118e      0x338 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x00000000000214c6       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x00000000000214ea       0x22 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_info    0x000000000002150c      0xd57 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x0000000000022263      0x8d2 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_info    0x0000000000022b35     0x866c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_info    0x000000000002b1a1      0xe87 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_info    0x000000000002c028      0x121 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_info    0x000000000002c149      0xd95 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_info    0x000000000002cede     0x272a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x000000000002f608      0xf75 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x000000000003057d      0x826 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x0000000000030da3      0x549 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_info    0x00000000000312ec     0x677c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x0000000000037a68      0x1b2 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_info    0x0000000000037c1a     0x3438 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_info    0x000000000003b052     0x354b zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x000000000003e59d     0x174a zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_info    0x000000000003fce7      0x88b zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x0000000000040572      0x1b1 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_info    0x0000000000040723      0x33f zephyr/kernel/libkernel.a(device.c.obj)
 .debug_info    0x0000000000040a62     0x2178 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x0000000000042bda     0x16dd zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x00000000000442b7     0x2610 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x00000000000468c7     0x6f65 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x000000000004d82c      0x26d zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x000000000004da99     0x15c0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x000000000004f059      0xa60 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x000000000004fab9       0xc5 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x000000000004fb7e      0xa96 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_abbrev   0x0000000000000000     0xc3ae
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0xc3 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .debug_abbrev  0x00000000000000c3       0x62 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000125      0x2e8 app/libapp.a(main.c.obj)
 .debug_abbrev  0x000000000000040d      0x436 zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x0000000000000843      0x2f7 zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x0000000000000b3a      0x234 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000000d6e       0x2e zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x0000000000000d9c      0x48e zephyr/libzephyr.a(soc.c.obj)
 .debug_abbrev  0x000000000000122a      0x133 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_abbrev  0x000000000000135d       0x62 zephyr/libzephyr.a(loader.c.obj)
 .debug_abbrev  0x00000000000013bf       0x48 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x0000000000001407      0x3f2 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x00000000000017f9      0x2b4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x0000000000001aad      0x231 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_abbrev  0x0000000000001cde       0x70 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x0000000000001d4e       0xa1 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x0000000000001def      0x2f5 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_abbrev  0x00000000000020e4      0x19e zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_abbrev  0x0000000000002282      0x236 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_abbrev  0x00000000000024b8      0x584 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x0000000000002a3c      0x3fc zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x0000000000002e38      0x1a0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x0000000000002fd8      0x29b zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x0000000000003273      0x247 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_abbrev  0x00000000000034ba       0x97 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_abbrev  0x0000000000003551      0x318 zephyr/libzephyr.a(clk.c.obj)
 .debug_abbrev  0x0000000000003869      0x1c2 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_abbrev  0x0000000000003a2b      0x222 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x0000000000003c4d      0x119 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_abbrev  0x0000000000003d66       0xd9 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_abbrev  0x0000000000003e3f      0x636 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x0000000000004475      0x3d9 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_abbrev  0x000000000000484e      0x31e zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_abbrev  0x0000000000004b6c      0x11e zephyr/libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x0000000000004c8a      0x43a zephyr/libzephyr.a(log.c.obj)
 .debug_abbrev  0x00000000000050c4      0x119 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_abbrev  0x00000000000051dd      0x250 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x000000000000542d      0x47b zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_abbrev  0x00000000000058a8      0x40d zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x0000000000005cb5       0x6b zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x0000000000005d20      0x136 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_abbrev  0x0000000000005e56       0x8f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x0000000000005ee5      0x1f6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x00000000000060db       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x00000000000060ef       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_abbrev  0x0000000000006101      0x223 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x0000000000006324      0x260 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_abbrev  0x0000000000006584      0x45c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_abbrev  0x00000000000069e0      0x4a9 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_abbrev  0x0000000000006e89       0xba zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_abbrev  0x0000000000006f43      0x45e zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_abbrev  0x00000000000073a1      0x5bd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x000000000000795e      0x451 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x0000000000007daf      0x38c zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x000000000000813b      0x2c6 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_abbrev  0x0000000000008401      0x638 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x0000000000008a39       0xd0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_abbrev  0x0000000000008b09      0x429 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_abbrev  0x0000000000008f32      0x526 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x0000000000009458      0x41d zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_abbrev  0x0000000000009875      0x365 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x0000000000009bda      0x122 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_abbrev  0x0000000000009cfc      0x1c7 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x0000000000009ec3      0x3df zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x000000000000a2a2      0x671 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x000000000000a913      0x5d5 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x000000000000aee8      0x720 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x000000000000b608      0x16e zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x000000000000b776      0x484 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x000000000000bbfa      0x334 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x000000000000bf2e       0x8c zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x000000000000bfba      0x3f4 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_line     0x0000000000000000    0x2d359
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000       0xab zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .debug_line    0x00000000000000ab      0x292 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x000000000000033d      0x653 app/libapp.a(main.c.obj)
 .debug_line    0x0000000000000990     0x1d18 zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x00000000000026a8      0x534 zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000002bdc      0x43c zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x0000000000003018      0x6ac zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x00000000000036c4      0xb91 zephyr/libzephyr.a(soc.c.obj)
 .debug_line    0x0000000000004255      0x2be zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_line    0x0000000000004513       0xa5 zephyr/libzephyr.a(loader.c.obj)
 .debug_line    0x00000000000045b8       0xb8 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000004670     0x1846 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_line    0x0000000000005eb6      0x613 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x00000000000064c9      0x715 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_line    0x0000000000006bde      0x1bf zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x0000000000006d9d      0x1c3 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x0000000000006f60      0x742 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_line    0x00000000000076a2      0x4d3 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_line    0x0000000000007b75      0x5cd zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_line    0x0000000000008142     0x1378 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x00000000000094ba     0x15bb zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_line    0x000000000000aa75      0x9a5 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_line    0x000000000000b41a      0x5e7 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x000000000000ba01      0x979 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_line    0x000000000000c37a      0x19f zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_line    0x000000000000c519      0x97d zephyr/libzephyr.a(clk.c.obj)
 .debug_line    0x000000000000ce96      0x5a6 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_line    0x000000000000d43c      0x950 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x000000000000dd8c      0x1f9 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_line    0x000000000000df85      0x16e zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_line    0x000000000000e0f3     0x1da8 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_line    0x000000000000fe9b      0x967 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_line    0x0000000000010802      0xc5d zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_line    0x000000000001145f      0x361 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_line    0x00000000000117c0      0xb52 zephyr/libzephyr.a(log.c.obj)
 .debug_line    0x0000000000012312      0x240 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .debug_line    0x0000000000012552      0x8ef zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x0000000000012e41     0x1266 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_line    0x00000000000140a7     0x1507 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x00000000000155ae       0xa9 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x0000000000015657      0x28d zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_line    0x00000000000158e4      0x111 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x00000000000159f5      0x3a0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x0000000000015d95      0x22e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x0000000000015fc3      0x3a0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_line    0x0000000000016363      0x49e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x0000000000016801      0x60f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_line    0x0000000000016e10     0x1327 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_line    0x0000000000018137      0xab2 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_line    0x0000000000018be9      0x1e5 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_line    0x0000000000018dce      0x96d zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_line    0x000000000001973b     0x25ac zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x000000000001bce7      0xaab zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x000000000001c792      0x516 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x000000000001cca8      0x5a8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_line    0x000000000001d250     0x1d10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x000000000001ef60      0x29d zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_line    0x000000000001f1fd      0xdd3 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_line    0x000000000001ffd0      0xb79 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x0000000000020b49      0x72d zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_line    0x0000000000021276      0x8aa zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x0000000000021b20      0x33f zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_line    0x0000000000021e5f      0x538 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_line    0x0000000000022397      0x793 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x0000000000022b2a     0x10ca zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x0000000000023bf4     0x1314 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x0000000000024f08     0x576d zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x000000000002a675      0x3d3 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x000000000002aa48     0x1807 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x000000000002c24f      0x7db zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x000000000002ca2a       0xc9 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x000000000002caf3      0x866 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_frame    0x0000000000000000     0x3560
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x28 app/libapp.a(main.c.obj)
 .debug_frame   0x0000000000000050      0x1f0 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x0000000000000240       0xb8 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x00000000000002f8       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x0000000000000320       0x28 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x0000000000000348       0x70 zephyr/libzephyr.a(soc.c.obj)
 .debug_frame   0x00000000000003b8       0x40 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_frame   0x00000000000003f8       0x28 zephyr/libzephyr.a(loader.c.obj)
 .debug_frame   0x0000000000000420       0x70 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000490      0x2c8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x0000000000000758       0x88 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x00000000000007e0       0xd0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_frame   0x00000000000008b0       0xd0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_frame   0x0000000000000980       0xa0 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_frame   0x0000000000000a20       0xd0 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_frame   0x0000000000000af0      0x2f8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x0000000000000de8       0x70 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x0000000000000e58      0x100 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000000f58       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x0000000000000f80       0xa0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_frame   0x0000000000001020       0x28 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_frame   0x0000000000001048       0x70 zephyr/libzephyr.a(clk.c.obj)
 .debug_frame   0x00000000000010b8       0x70 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_frame   0x0000000000001128       0x70 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x0000000000001198       0x58 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_frame   0x00000000000011f0       0x28 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_frame   0x0000000000001218      0x190 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x00000000000013a8      0x160 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_frame   0x0000000000001508      0x130 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_frame   0x0000000000001638       0x70 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_frame   0x00000000000016a8       0xb8 zephyr/libzephyr.a(log.c.obj)
 .debug_frame   0x0000000000001760       0x88 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x00000000000017e8      0x178 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_frame   0x0000000000001960      0x178 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x0000000000001ad8       0x28 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x0000000000001b00       0x40 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_frame   0x0000000000001b40       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000001b80       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x0000000000001bd8       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x0000000000001c48       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_frame   0x0000000000001c70       0xe8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_frame   0x0000000000001d58      0x1f0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_frame   0x0000000000001f48       0x28 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_frame   0x0000000000001f70       0xe8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_frame   0x0000000000002058      0x238 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x0000000000002290       0xa0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x0000000000002330       0x58 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x0000000000002388       0x40 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_frame   0x00000000000023c8      0x130 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x00000000000024f8       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_frame   0x0000000000002520       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_frame   0x0000000000002548       0xa0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x00000000000025e8       0x70 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_frame   0x0000000000002658       0x88 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x00000000000026e0       0x28 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_frame   0x0000000000002708       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_frame   0x0000000000002778       0xe8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000002860       0xd0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000002930      0x1f0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000002b20      0x628 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x0000000000003148       0x58 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x00000000000031a0      0x178 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000003318       0xb8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x00000000000033d0       0x28 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x00000000000033f8       0x88 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x0000000000003480       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .debug_frame   0x00000000000034a8       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .debug_frame   0x00000000000034d0       0x28 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
 .debug_frame   0x00000000000034f8       0x28 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .debug_frame   0x0000000000003520       0x40 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)

.debug_str      0x0000000000000000    0x12d54
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x1f1 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
                                        0x22a (size before relaxing)
 .debug_str     0x00000000000001f1      0x26f zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                        0x334 (size before relaxing)
 .debug_str     0x0000000000000460      0x499 app/libapp.a(main.c.obj)
                                        0x7ea (size before relaxing)
 .debug_str     0x00000000000008f9      0x3f8 zephyr/libzephyr.a(heap.c.obj)
                                        0x69a (size before relaxing)
 .debug_str     0x0000000000000cf1      0x161 zephyr/libzephyr.a(printk.c.obj)
                                        0x54a (size before relaxing)
 .debug_str     0x0000000000000e52      0x1df zephyr/libzephyr.a(thread_entry.c.obj)
                                        0x4d7 (size before relaxing)
 .debug_str     0x0000000000001031       0x59 zephyr/libzephyr.a(configs.c.obj)
                                        0x17c (size before relaxing)
 .debug_str     0x000000000000108a     0x2f41 zephyr/libzephyr.a(soc.c.obj)
                                       0x3568 (size before relaxing)
 .debug_str     0x0000000000003fcb      0x195 zephyr/libzephyr.a(soc_cache.c.obj)
                                        0x3b6 (size before relaxing)
 .debug_str     0x0000000000004160       0x5f zephyr/libzephyr.a(loader.c.obj)
                                        0x232 (size before relaxing)
 .debug_str     0x00000000000041bf       0x9f zephyr/libzephyr.a(tracing_none.c.obj)
                                        0x1c2 (size before relaxing)
 .debug_str     0x000000000000425e     0x1793 zephyr/libzephyr.a(uart_hal.c.obj)
                                       0x1b75 (size before relaxing)
 .debug_str     0x00000000000059f1      0x188 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                       0x123e (size before relaxing)
 .debug_str     0x0000000000005b79      0x1a0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x518 (size before relaxing)
 .debug_str     0x0000000000005d19       0x7f zephyr/libzephyr.a(gpio_periph.c.obj)
                                        0x23a (size before relaxing)
 .debug_str     0x0000000000005d98       0xbc zephyr/libzephyr.a(rtc_io_periph.c.obj)
                                        0x291 (size before relaxing)
 .debug_str     0x0000000000005e54      0x476 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                        0x6cb (size before relaxing)
 .debug_str     0x00000000000062ca      0x11b zephyr/libzephyr.a(spi_timing_config.c.obj)
                                        0x444 (size before relaxing)
 .debug_str     0x00000000000063e5      0x684 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0xa2a (size before relaxing)
 .debug_str     0x0000000000006a69      0x6d3 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0xe94 (size before relaxing)
 .debug_str     0x000000000000713c      0x83d zephyr/libzephyr.a(rtc_init.c.obj)
                                        0xd82 (size before relaxing)
 .debug_str     0x0000000000007979      0x1ae zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x51e (size before relaxing)
 .debug_str     0x0000000000007b27      0x119 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0xaf6 (size before relaxing)
 .debug_str     0x0000000000007c40      0x231 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                        0x539 (size before relaxing)
 .debug_str     0x0000000000007e71       0xa5 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                        0x282 (size before relaxing)
 .debug_str     0x0000000000007f16      0x5d4 zephyr/libzephyr.a(clk.c.obj)
                                        0xf2c (size before relaxing)
 .debug_str     0x00000000000084ea      0x1b8 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x853 (size before relaxing)
 .debug_str     0x00000000000086a2      0x159 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x868 (size before relaxing)
 .debug_str     0x00000000000087fb      0x189 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                        0x35d (size before relaxing)
 .debug_str     0x0000000000008984       0x89 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                                        0x481 (size before relaxing)
 .debug_str     0x0000000000008a0d      0x8e6 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0xf37 (size before relaxing)
 .debug_str     0x00000000000092f3     0x132d zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                       0x1893 (size before relaxing)
 .debug_str     0x000000000000a620      0x2ed zephyr/libzephyr.a(systimer_hal.c.obj)
                                       0x10ce (size before relaxing)
 .debug_str     0x000000000000a90d       0xb3 zephyr/libzephyr.a(log_noos.c.obj)
                                        0x459 (size before relaxing)
 .debug_str     0x000000000000a9c0      0x278 zephyr/libzephyr.a(log.c.obj)
                                        0x5cb (size before relaxing)
 .debug_str     0x000000000000ac38     0x1a25 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                                       0x2fd2 (size before relaxing)
 .debug_str     0x000000000000c65d      0x266 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x61b (size before relaxing)
 .debug_str     0x000000000000c8c3      0x380 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                        0xbc8 (size before relaxing)
 .debug_str     0x000000000000cc43      0x302 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x9ac (size before relaxing)
 .debug_str     0x000000000000cf45       0x5e zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0x226 (size before relaxing)
 .debug_str     0x000000000000cfa3       0x65 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                        0x2a5 (size before relaxing)
 .debug_str     0x000000000000d008       0x6a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                        0x237 (size before relaxing)
 .debug_str     0x000000000000d072      0x150 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                        0x3da (size before relaxing)
 .debug_str     0x000000000000d1c2       0x59 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x83 (size before relaxing)
 .debug_str     0x000000000000d21b       0x4f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x85 (size before relaxing)
 .debug_str     0x000000000000d26a       0x92 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                        0x7a1 (size before relaxing)
 .debug_str     0x000000000000d2fc      0x154 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                                        0x659 (size before relaxing)
 .debug_str     0x000000000000d450      0x2a9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0xcdc (size before relaxing)
 .debug_str     0x000000000000d6f9      0x26c zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x9fd (size before relaxing)
 .debug_str     0x000000000000d965      0x15e zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                        0x2ca (size before relaxing)
 .debug_str     0x000000000000dac3      0x164 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x782 (size before relaxing)
 .debug_str     0x000000000000dc27      0x543 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xe30 (size before relaxing)
 .debug_str     0x000000000000e16a      0x358 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x11ed (size before relaxing)
 .debug_str     0x000000000000e4c2      0x184 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                        0x563 (size before relaxing)
 .debug_str     0x000000000000e646      0x14b zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
                                        0x453 (size before relaxing)
 .debug_str     0x000000000000e791     0x197d zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x2ad1 (size before relaxing)
 .debug_str     0x000000000001010e       0xc3 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                                        0x2b9 (size before relaxing)
 .debug_str     0x00000000000101d1      0x130 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                       0x1c83 (size before relaxing)
 .debug_str     0x0000000000010301      0x5d6 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x226f (size before relaxing)
 .debug_str     0x00000000000108d7      0xa3e zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                                       0x1227 (size before relaxing)
 .debug_str     0x0000000000011315      0x16e zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x47d (size before relaxing)
 .debug_str     0x0000000000011483       0x7d zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                        0x2a9 (size before relaxing)
 .debug_str     0x0000000000011500       0xbb zephyr/kernel/libkernel.a(device.c.obj)
                                        0x301 (size before relaxing)
 .debug_str     0x00000000000115bb      0x21a zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0xb3a (size before relaxing)
 .debug_str     0x00000000000117d5      0x4b7 zephyr/kernel/libkernel.a(init.c.obj)
                                        0xc3e (size before relaxing)
 .debug_str     0x0000000000011c8c      0x41b zephyr/kernel/libkernel.a(thread.c.obj)
                                        0xf15 (size before relaxing)
 .debug_str     0x00000000000120a7      0x930 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x1669 (size before relaxing)
 .debug_str     0x00000000000129d7       0x85 zephyr/kernel/libkernel.a(idle.c.obj)
                                        0x323 (size before relaxing)
 .debug_str     0x0000000000012a5c      0x13d zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x775 (size before relaxing)
 .debug_str     0x0000000000012b99       0xd6 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x76b (size before relaxing)
 .debug_str     0x0000000000012c6f       0x3b zephyr/kernel/libkernel.a(banner.c.obj)
                                        0x20c (size before relaxing)
 .debug_str     0x0000000000012caa       0xaa zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x6b1 (size before relaxing)

.debug_loc      0x0000000000000000    0x116b1
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x19a app/libapp.a(main.c.obj)
 .debug_loc     0x000000000000019a     0x1a58 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000001bf2       0xe4 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x0000000000001cd6       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x0000000000001ceb      0x15a zephyr/libzephyr.a(soc.c.obj)
 .debug_loc     0x0000000000001e45       0x61 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_loc     0x0000000000001ea6     0x104f zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x0000000000002ef5      0x2ba zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x00000000000031af      0x23e zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_loc     0x00000000000033ed       0x4e zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_loc     0x000000000000343b      0x122 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_loc     0x000000000000355d       0x6b zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_loc     0x00000000000035c8      0x839 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x0000000000003e01      0x807 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x0000000000004608      0x3e8 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x00000000000049f0       0x90 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x0000000000004a80      0x131 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_loc     0x0000000000004bb1      0x2d5 zephyr/libzephyr.a(clk.c.obj)
 .debug_loc     0x0000000000004e86      0x12e zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_loc     0x0000000000004fb4      0x1d9 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x000000000000518d       0xd3 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_loc     0x0000000000005260      0xc6b zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x0000000000005ecb      0x1ee zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_loc     0x00000000000060b9      0xa67 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_loc     0x0000000000006b20       0x15 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_loc     0x0000000000006b35      0x52c zephyr/libzephyr.a(log.c.obj)
 .debug_loc     0x0000000000007061      0x178 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x00000000000071d9      0x58d zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_loc     0x0000000000007766      0xddb zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x0000000000008541       0x15 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x0000000000008556       0x15 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_loc     0x000000000000856b       0x71 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x00000000000085dc       0x3a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_loc     0x0000000000008616      0x10d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_loc     0x0000000000008723      0x727 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_loc     0x0000000000008e4a      0x195 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_loc     0x0000000000008fdf      0x360 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_loc     0x000000000000933f     0x1315 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x000000000000a654      0x341 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x000000000000a995       0x56 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x000000000000a9eb      0x187 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_loc     0x000000000000ab72     0x10c5 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x000000000000bc37       0x42 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_loc     0x000000000000bc79      0x74a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_loc     0x000000000000c3c3      0x37e zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x000000000000c741      0x1e8 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_loc     0x000000000000c929      0x285 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x000000000000cbae       0x64 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_loc     0x000000000000cc12       0x96 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_loc     0x000000000000cca8       0x8e zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x000000000000cd36      0x302 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x000000000000d038      0x76f zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x000000000000d7a7     0x2e0d zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x00000000000105b4       0x3f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x00000000000105f3      0xb42 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x0000000000011135      0x31c zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_loc     0x0000000000011451      0x260 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x2cd8
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078       0x10 app/libapp.a(main.c.obj)
 .debug_ranges  0x0000000000000088      0x2b0 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000338       0x40 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x0000000000000378       0x10 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x0000000000000388       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x0000000000000398       0x40 zephyr/libzephyr.a(soc.c.obj)
 .debug_ranges  0x00000000000003d8       0x18 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_ranges  0x00000000000003f0       0x10 zephyr/libzephyr.a(loader.c.obj)
 .debug_ranges  0x0000000000000400       0x28 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x0000000000000428      0x1a8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x00000000000005d0       0x60 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x0000000000000630       0xc0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_ranges  0x00000000000006f0       0x48 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .debug_ranges  0x0000000000000738       0x50 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .debug_ranges  0x0000000000000788       0x48 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_ranges  0x00000000000007d0      0x148 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000000918       0x98 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x00000000000009b0       0x90 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x0000000000000a40       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x0000000000000a68       0x38 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_ranges  0x0000000000000aa0       0x10 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_ranges  0x0000000000000ab0       0x40 zephyr/libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000000af0       0x40 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_ranges  0x0000000000000b30       0xd8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x0000000000000c08       0x20 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_ranges  0x0000000000000c28       0x10 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_ranges  0x0000000000000c38      0x1b8 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x0000000000000df0       0xc0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_ranges  0x0000000000000eb0      0x150 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_ranges  0x0000000000001000       0x28 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000001028       0x98 zephyr/libzephyr.a(log.c.obj)
 .debug_ranges  0x00000000000010c0       0x80 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x0000000000001140       0x98 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .debug_ranges  0x00000000000011d8      0x1f8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x00000000000013d0       0x10 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x00000000000013e0       0x18 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_ranges  0x00000000000013f8       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000001410       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000001430       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000001458       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_ranges  0x0000000000001468      0x130 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_ranges  0x0000000000001598       0xc0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_ranges  0x0000000000001658       0x10 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_ranges  0x0000000000001668       0x68 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_ranges  0x00000000000016d0      0x230 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x0000000000001900       0x68 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x0000000000001968       0x50 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x00000000000019b8       0x68 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .debug_ranges  0x0000000000001a20      0x198 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x0000000000001bb8       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_ranges  0x0000000000001bc8      0x120 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_ranges  0x0000000000001ce8       0x88 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x0000000000001d70       0x58 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .debug_ranges  0x0000000000001dc8       0x48 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x0000000000001e10       0x28 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .debug_ranges  0x0000000000001e38       0x70 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x0000000000001ea8       0x68 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x0000000000001f10       0xf0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000002000      0x1a0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x00000000000021a0      0x7f8 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x0000000000002998       0x20 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x00000000000029b8      0x240 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000002bf8       0x40 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x0000000000002c38       0x10 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_ranges  0x0000000000002c48       0x90 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 zephyr/CMakeFiles/zephyr_final.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/zephyr_final.dir/isr_tables.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_timing_config.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
 .xtensa.info   0x0000000000000038        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)

.xt.insn
 *(SORT_BY_ALIGNMENT(.xt.insn))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.x.*))

.xt.prop        0x0000000000000000     0x6120
 *(SORT_BY_ALIGNMENT(.xt.prop))
 .xt.prop       0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000024       0x54 app/libapp.a(main.c.obj)
 .xt.prop       0x0000000000000078      0x408 zephyr/libzephyr.a(heap.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000480        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0x750 (size before relaxing)
 .xt.prop       0x0000000000000480       0xc0 zephyr/libzephyr.a(printk.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000000540       0x24 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0xa08 (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(dec.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(hex.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(rb.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000000564        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                        0x5a0 (size before relaxing)
 .xt.prop       0x0000000000000564       0x24 zephyr/libzephyr.a(configs.c.obj)
 .xt.prop       0x0000000000000588       0x60 zephyr/libzephyr.a(soc.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000005e8       0x60 zephyr/libzephyr.a(soc_cache.c.obj)
 .xt.prop       0x0000000000000648       0x24 zephyr/libzephyr.a(loader.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000066c        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x000000000000066c       0x24 zephyr/libzephyr.a(tracing_none.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000000690      0x3b4 zephyr/libzephyr.a(uart_hal.c.obj)
                                        0x5dc (size before relaxing)
 .xt.prop       0x0000000000000a44       0xb4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000000af8       0x9c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x1a4 (size before relaxing)
 .xt.prop       0x0000000000000b94        0x0 zephyr/libzephyr.a(adc_periph.c.obj)
                                          0xc (size before relaxing)
 .xt.prop       0x0000000000000b94        0xc zephyr/libzephyr.a(gpio_periph.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x0000000000000ba0       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x0000000000000bb8       0x9c zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000000c54       0xf0 zephyr/libzephyr.a(spi_timing_config.c.obj)
                                        0x174 (size before relaxing)
 .xt.prop       0x0000000000000d44        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000000d44        0x0 zephyr/libzephyr.a(dport_access.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000000d44       0x9c zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x0000000000000de0      0x618 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x858 (size before relaxing)
 .xt.prop       0x00000000000013f8      0x234 zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x2ac (size before relaxing)
 .xt.prop       0x000000000000162c      0x1a4 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x30c (size before relaxing)
 .xt.prop       0x00000000000017d0       0x54 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x0000000000001824       0x60 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                        0x2c4 (size before relaxing)
 .xt.prop       0x0000000000001884        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                        0x1f8 (size before relaxing)
 .xt.prop       0x0000000000001884       0x30 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xt.prop       0x00000000000018b4       0xf0 zephyr/libzephyr.a(clk.c.obj)
                                        0x174 (size before relaxing)
 .xt.prop       0x00000000000019a4      0x180 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000001b24      0x390 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x3cc (size before relaxing)
 .xt.prop       0x0000000000001eb4        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000001eb4       0x6c zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000001f20       0x3c zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.prop       0x0000000000001f5c        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000001f5c       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0x618 (size before relaxing)
 .xt.prop       0x0000000000001f80       0x3c zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                        0x2dc (size before relaxing)
 .xt.prop       0x0000000000001fbc       0xd8 zephyr/libzephyr.a(systimer_hal.c.obj)
                                        0x288 (size before relaxing)
 .xt.prop       0x0000000000002094       0x24 zephyr/libzephyr.a(log_noos.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000020b8        0xc zephyr/libzephyr.a(log.c.obj)
                                        0x378 (size before relaxing)
 .xt.prop       0x00000000000020c4        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x00000000000020c4       0xc0 zephyr/libzephyr.a(esp_efuse_table.c.obj)
                                       0x1530 (size before relaxing)
 .xt.prop       0x0000000000002184        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                        0x174 (size before relaxing)
 .xt.prop       0x0000000000002184        0xc zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x0000000000002190       0x90 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                        0x4d4 (size before relaxing)
 .xt.prop       0x0000000000002220        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
                                        0x798 (size before relaxing)
 .xt.prop       0x0000000000002220      0x1f8 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                        0x4c8 (size before relaxing)
 .xt.prop       0x0000000000002418        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
                                         0xb4 (size before relaxing)
 .xt.prop       0x0000000000002418        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000002418       0x24 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x000000000000243c       0x54 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000002490       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x00000000000024c0       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x00000000000024e4       0xa8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x000000000000258c      0x330 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.prop       0x00000000000028bc       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x00000000000028e0       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.prop       0x0000000000002910      0x5ac zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x5e8 (size before relaxing)
 .xt.prop       0x0000000000002ebc       0xc0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x3d8 (size before relaxing)
 .xt.prop       0x0000000000002f7c       0x24 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.prop       0x0000000000002fa0       0x48 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x0000000000002fe8        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000002fe8      0x6d8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa44 (size before relaxing)
 .xt.prop       0x00000000000036c0      0x1e0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x00000000000038a0       0x78 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000003918       0x9c zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xt.prop       0x00000000000039b4      0x5ac zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x5f4 (size before relaxing)
 .xt.prop       0x0000000000003f60       0x54 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xt.prop       0x0000000000003fb4      0x2ac zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.prop       0x0000000000004260      0x2ac zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x2e8 (size before relaxing)
 .xt.prop       0x000000000000450c      0x138 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000004644        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000004644      0x114 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000004758       0x30 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000004788       0x54 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x108 (size before relaxing)
 .xt.prop       0x00000000000047dc        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x00000000000047dc       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0x150 (size before relaxing)
 .xt.prop       0x000000000000483c      0x1b0 zephyr/kernel/libkernel.a(init.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x00000000000049ec       0x9c zephyr/kernel/libkernel.a(thread.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x0000000000004a88      0x828 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x1050 (size before relaxing)
 .xt.prop       0x00000000000052b0       0x24 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x00000000000052d4        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                        0x1e0 (size before relaxing)
 .xt.prop       0x00000000000052d4        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x00000000000052d4      0x3f0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x564 (size before relaxing)
 .xt.prop       0x00000000000056c4      0x108 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x1e0 (size before relaxing)
 .xt.prop       0x00000000000057cc       0x30 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x00000000000057fc      0x114 zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_ashldi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_lshrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
                                        0x420 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatsidf.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_floatdidf.o)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
                                         0xb4 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdi3.o)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_udivdi3.o)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_umoddi3.o)
                                        0x138 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memcpy.S.o)
                                        0x15c (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_memset.S.o)
                                         0xd8 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
                                         0xc0 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_memcmp.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strnlen.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000005910        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fputs.c.o)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000005910       0x30 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .xt.prop       0x0000000000005940        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x0000000000005940      0x7e0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
                                        0x7ec (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
                                        0x5f4 (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_string_strchr.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_filestrput.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000006120        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
                                         0x6c (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.prop.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.prop.*))

.xt.lit         0x0000000000000000      0x3d0
 *(SORT_BY_ALIGNMENT(.xt.lit))
 .xt.lit        0x0000000000000000        0x8 app/libapp.a(main.c.obj)
 .xt.lit        0x0000000000000008       0x10 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .xt.lit        0x0000000000000018        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000018       0x18 zephyr/libzephyr.a(printk.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000030        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000030        0x8 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000038       0x10 zephyr/libzephyr.a(soc.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000048       0x10 zephyr/libzephyr.a(soc_cache.c.obj)
 .xt.lit        0x0000000000000058        0x0 zephyr/libzephyr.a(loader.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000058        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000058       0x30 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000088        0x8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000090       0x18 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000000a8        0x8 zephyr/libzephyr.a(spi_flash_timing_tuning.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000b0       0x10 zephyr/libzephyr.a(spi_timing_config.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000c0        0x0 zephyr/libzephyr.a(cpu_util.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x00000000000000c0       0x18 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x00000000000000d8       0x78 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xf8 (size before relaxing)
 .xt.lit        0x0000000000000150       0x10 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000160       0x10 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000170        0x8 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000178        0x8 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000180        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000180        0x8 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xt.lit        0x0000000000000188       0x10 zephyr/libzephyr.a(clk.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000198       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001a8       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001b8        0x0 zephyr/libzephyr.a(cpu_hal.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000001b8        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000001b8        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.lit        0x00000000000001c0        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000001c0        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x00000000000001c0        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x00000000000001c8       0x10 zephyr/libzephyr.a(systimer_hal.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x0 zephyr/libzephyr.a(log_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x0 zephyr/libzephyr.a(log.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x0 zephyr/libzephyr.a(esp_efuse_fields.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x0 zephyr/libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x0 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000001d8        0x8 zephyr/libzephyr.a(esp_efuse_api.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x00000000000001e0        0x0 zephyr/libzephyr.a(esp_efuse_api_key_esp32xx.c.obj)
                                         0xc0 (size before relaxing)
 .xt.lit        0x00000000000001e0       0x20 zephyr/libzephyr.a(esp_efuse_utility.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000200        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000200        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000200        0x8 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000208        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000210        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000210        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.lit        0x0000000000000218        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000218        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.lit        0x0000000000000220       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000238       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x0000000000000248        0x8 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.lit        0x0000000000000250        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/subsys/random/libsubsys__random.a(rand32_entropy_device.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000258       0x40 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x0000000000000298       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002a8       0x10 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x00000000000002b8        0x8 zephyr/drivers/entropy/libdrivers__entropy.a(entropy_esp32.c.obj)
 .xt.lit        0x00000000000002c0       0x30 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x00000000000002f0        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.lit        0x00000000000002f8        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002f8       0x10 zephyr/drivers/serial/libdrivers__serial.a(serial_esp32_usb.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000308       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000318        0x0 zephyr/kernel/libkernel.a(busy_wait.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000318        0x0 zephyr/kernel/libkernel.a(device.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000318        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000318        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000318       0x28 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000340        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000348       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.lit        0x0000000000000378        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000378        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000378        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000378       0x18 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000390        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000398        0x8 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x00000000000003a0       0x20 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_addsubdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_muldf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_divdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_fixdfdi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_truncdfsf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_extendsfdf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:/users/jcook/zephyr-sdk-0.16.5/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0\libgcc.a(_popcountsi2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strcmp.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_machine_xtensa_strlen.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c0        0x8 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_printf.c.o)
 .xt.lit        0x00000000000003c8        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_snprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003c8        0x8 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflprintf.c.o)
 .xt.lit        0x00000000000003d0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vflscanf.c.o)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000003d0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_vprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003d0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_fgetc.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003d0        0x0 c:\users\jcook\zephyr-sdk-0.16.5\xtensa-espressif_esp32s3_zephyr-elf\bin\../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib\libc.a(libc_tinystdio_ungetc.c.o)
                                          0x8 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.lit.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.p.*))

.xt.profile_range
 *(SORT_BY_ALIGNMENT(.xt.profile_range))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.profile_range.*))

.xt.profile_ranges
 *(SORT_BY_ALIGNMENT(.xt.profile_ranges))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_ranges.*))

.xt.profile_files
 *(SORT_BY_ALIGNMENT(.xt.profile_files))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_files.*))
                0x0000000000000001                ASSERT (((_iram_end - ORIGIN (iram0_0_seg)) <= LENGTH (iram0_0_seg)), IRAM0 segment data does not fit.)
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040001a94                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040001aa0                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                0x0000000040000720                PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_ICache = Cache_Disable_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_DCache = Cache_Disable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Allocate_SRAM = Cache_Allocate_SRAM)
                [!provide]                        PROVIDE (esp_rom_Cache_Suspend_ICache = Cache_Suspend_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Dbus_MMU_Set = Cache_Dbus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Ibus_MMU_Set = Cache_Ibus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_ICache_Mode = Cache_Set_ICache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_ICache_All = Cache_Invalidate_ICache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Resume_ICache = Cache_Resume_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_Addr = Cache_Invalidate_Addr)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_DCache_All = Cache_Invalidate_DCache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Enable_DCache = Cache_Enable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                0x000000004000057c                rtc_get_reset_reason = 0x4000057c
                0x0000000040000588                analog_super_wdt_reset_happened = 0x40000588
                0x0000000040000594                jtag_cpu_reset_happened = 0x40000594
                0x00000000400005a0                rtc_get_wakeup_cause = 0x400005a0
                0x00000000400005ac                rtc_select_apb_bridge = 0x400005ac
                0x00000000400005b8                rtc_unhold_all_pads = 0x400005b8
                0x00000000400005c4                ets_is_print_boot = 0x400005c4
                0x00000000400005d0                ets_printf = 0x400005d0
                0x00000000400005dc                ets_install_putc1 = 0x400005dc
                0x00000000400005e8                ets_install_uart_printf = 0x400005e8
                0x00000000400005f4                ets_install_putc2 = 0x400005f4
                0x0000000040000600                PROVIDE (ets_delay_us = 0x40000600)
                0x000000004000060c                ets_get_stack_info = 0x4000060c
                0x0000000040000618                ets_install_lock = 0x40000618
                0x0000000040000624                ets_backup_dma_copy = 0x40000624
                0x0000000040000630                ets_apb_backup_init_lock_func = 0x40000630
                0x000000004000063c                UartRxString = 0x4000063c
                0x0000000040000648                uart_tx_one_char = 0x40000648
                0x0000000040000654                uart_tx_one_char2 = 0x40000654
                0x0000000040000660                uart_rx_one_char = 0x40000660
                0x000000004000066c                uart_rx_one_char_block = 0x4000066c
                0x0000000040000678                uart_rx_readbuff = 0x40000678
                0x0000000040000684                uartAttach = 0x40000684
                0x0000000040000690                uart_tx_flush = 0x40000690
                0x000000004000069c                uart_tx_wait_idle = 0x4000069c
                0x00000000400006a8                uart_div_modify = 0x400006a8
                0x00000000400006b4                ets_write_char_uart = 0x400006b4
                0x00000000400006c0                uart_tx_switch = 0x400006c0
                0x00000000400006cc                multofup = 0x400006cc
                0x00000000400006d8                software_reset = 0x400006d8
                0x00000000400006e4                software_reset_cpu = 0x400006e4
                0x00000000400006f0                assist_debug_clock_enable = 0x400006f0
                0x00000000400006fc                assist_debug_record_enable = 0x400006fc
                0x0000000040000708                clear_super_wdt_reset_flag = 0x40000708
                0x0000000040000714                disable_default_watchdog = 0x40000714
                0x0000000040000720                ets_set_appcpu_boot_addr = 0x40000720
                0x000000004000072c                esp_rom_set_rtc_wake_addr = 0x4000072c
                0x0000000040000738                esp_rom_get_rtc_wake_addr = 0x40000738
                0x0000000040000744                send_packet = 0x40000744
                0x0000000040000750                recv_packet = 0x40000750
                0x000000004000075c                GetUartDevice = 0x4000075c
                0x0000000040000768                UartDwnLdProc = 0x40000768
                0x0000000040000774                Uart_Init = 0x40000774
                0x0000000040000780                ets_set_user_start = 0x40000780
                0x000000003ff1fffc                ets_rom_layout_p = 0x3ff1fffc
                0x000000003fcefffc                ets_ops_table_ptr = 0x3fcefffc
                0x000000004000078c                mz_adler32 = 0x4000078c
                0x0000000040000798                mz_crc32 = 0x40000798
                0x00000000400007a4                mz_free = 0x400007a4
                0x00000000400007b0                tdefl_compress = 0x400007b0
                0x00000000400007bc                tdefl_compress_buffer = 0x400007bc
                0x00000000400007c8                tdefl_compress_mem_to_heap = 0x400007c8
                0x00000000400007d4                tdefl_compress_mem_to_mem = 0x400007d4
                0x00000000400007e0                tdefl_compress_mem_to_output = 0x400007e0
                0x00000000400007ec                tdefl_get_adler32 = 0x400007ec
                0x00000000400007f8                tdefl_get_prev_return_status = 0x400007f8
                0x0000000040000804                tdefl_init = 0x40000804
                0x0000000040000810                tdefl_write_image_to_png_file_in_memory = 0x40000810
                0x000000004000081c                tdefl_write_image_to_png_file_in_memory_ex = 0x4000081c
                0x0000000040000828                tinfl_decompress = 0x40000828
                0x0000000040000834                tinfl_decompress_mem_to_callback = 0x40000834
                0x0000000040000840                tinfl_decompress_mem_to_heap = 0x40000840
                0x000000004000084c                tinfl_decompress_mem_to_mem = 0x4000084c
                [!provide]                        PROVIDE (jd_prepare = 0x40000858)
                [!provide]                        PROVIDE (jd_decomp = 0x40000864)
                0x000000003fcefff8                dsps_fft2r_w_table_fc32_1024 = 0x3fcefff8
                [!provide]                        PROVIDE (opi_flash_set_lock_func = 0x40000870)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_config = 0x4000087c)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_start = 0x40000888)
                [!provide]                        PROVIDE (esp_rom_opiflash_pin_config = 0x40000894)
                [!provide]                        PROVIDE (esp_rom_spi_set_op_mode = 0x400008a0)
                [!provide]                        PROVIDE (esp_rom_opiflash_mode_reset = 0x400008ac)
                [!provide]                        PROVIDE (esp_rom_opiflash_exec_cmd = 0x400008b8)
                [!provide]                        PROVIDE (esp_rom_opiflash_soft_reset = 0x400008c4)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_id = 0x400008d0)
                [!provide]                        PROVIDE (esp_rom_opiflash_rdsr = 0x400008dc)
                [!provide]                        PROVIDE (esp_rom_opiflash_wait_idle = 0x400008e8)
                [!provide]                        PROVIDE (esp_rom_opiflash_wren = 0x400008f4)
                [!provide]                        PROVIDE (esp_rom_opiflash_erase_sector = 0x40000900)
                [!provide]                        PROVIDE (esp_rom_opiflash_erase_block_64k = 0x4000090c)
                [!provide]                        PROVIDE (esp_rom_opiflash_erase_area = 0x40000918)
                [!provide]                        PROVIDE (esp_rom_opiflash_read = 0x40000924)
                [!provide]                        PROVIDE (esp_rom_opiflash_write = 0x40000930)
                [!provide]                        PROVIDE (esp_rom_spi_set_dtr_swap_mode = 0x4000093c)
                [!provide]                        PROVIDE (esp_rom_opiflash_exit_continuous_read_mode = 0x40000948)
                [!provide]                        PROVIDE (esp_rom_opiflash_legacy_driver_init = 0x40000954)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_raw = 0x4004d9d4)
                [!provide]                        PROVIDE (rom_opiflash_cmd_def = 0x3fcefff4)
                [!provide]                        PROVIDE (rom_spi_usr_cmd_legacy_funcs = 0x3fcefff0)
                [!provide]                        PROVIDE (esp_rom_spiflash_wait_idle = 0x40000960)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted = 0x4000096c)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_dest = 0x40000978)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40000984)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40000990)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_chip = 0x4000099c)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_sector = 0x400009a8)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_block = 0x400009b4)
                [!provide]                        PROVIDE (_esp_rom_spiflash_write = 0x400009c0)
                [!provide]                        PROVIDE (_esp_rom_spiflash_read = 0x400009cc)
                [!provide]                        PROVIDE (_esp_rom_spiflash_unlock = 0x400009d8)
                [!provide]                        PROVIDE (_SPIEraseArea = 0x400009e4)
                [!provide]                        PROVIDE (_SPI_write_enable = 0x400009f0)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_sector = 0x400009fc)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_block = 0x40000a08)
                [!provide]                        PROVIDE (esp_rom_spiflash_write = 0x40000a14)
                [!provide]                        PROVIDE (esp_rom_spiflash_read = 0x40000a20)
                [!provide]                        PROVIDE (esp_rom_spiflash_unlock = 0x40000a2c)
                [!provide]                        PROVIDE (SPIEraseArea = 0x40000a38)
                [!provide]                        PROVIDE (SPI_write_enable = 0x40000a44)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_param = 0x40000a50)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_user_cmd = 0x40000a5c)
                [!provide]                        PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40000a68)
                [!provide]                        PROVIDE (esp_rom_spi_flash_auto_sus_res = 0x40000a74)
                [!provide]                        PROVIDE (esp_rom_spi_flash_send_resume = 0x40000a80)
                [!provide]                        PROVIDE (esp_rom_spi_flash_update_id = 0x40000a8c)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_clk = 0x40000a98)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_readmode = 0x40000aa4)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_status = 0x40000ab0)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_statushigh = 0x40000abc)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_status = 0x40000ac8)
                [!provide]                        PROVIDE (esp_rom_opiflash_cache_mode_config = 0x40000ad4)
                [!provide]                        PROVIDE (esp_rom_spiflash_auto_wait_idle = 0x40000ae0)
                [!provide]                        PROVIDE (spi_flash_attach = 0x40000aec)
                [!provide]                        PROVIDE (spi_flash_get_chip_size = 0x40000af8)
                [!provide]                        PROVIDE (spi_flash_guard_set = 0x40000b04)
                [!provide]                        PROVIDE (spi_flash_guard_get = 0x40000b10)
                [!provide]                        PROVIDE (spi_flash_write_config_set = 0x40000b1c)
                [!provide]                        PROVIDE (spi_flash_write_config_get = 0x40000b28)
                [!provide]                        PROVIDE (spi_flash_safe_write_address_func_set = 0x40000b34)
                [!provide]                        PROVIDE (spi_flash_unlock = 0x40000b40)
                [!provide]                        PROVIDE (spi_flash_erase_range = 0x40000b4c)
                [!provide]                        PROVIDE (spi_flash_erase_sector = 0x40000b58)
                [!provide]                        PROVIDE (spi_flash_write = 0x40000b64)
                [!provide]                        PROVIDE (spi_flash_read = 0x40000b70)
                [!provide]                        PROVIDE (spi_flash_write_encrypted = 0x40000b7c)
                [!provide]                        PROVIDE (spi_flash_read_encrypted = 0x40000b88)
                [!provide]                        PROVIDE (spi_flash_mmap_os_func_set = 0x40000b94)
                [!provide]                        PROVIDE (spi_flash_mmap_page_num_init = 0x40000ba0)
                [!provide]                        PROVIDE (spi_flash_mmap = 0x40000bac)
                [!provide]                        PROVIDE (spi_flash_mmap_pages = 0x40000bb8)
                [!provide]                        PROVIDE (spi_flash_munmap = 0x40000bc4)
                [!provide]                        PROVIDE (spi_flash_mmap_dump = 0x40000bd0)
                [!provide]                        PROVIDE (spi_flash_check_and_flush_cache = 0x40000bdc)
                [!provide]                        PROVIDE (spi_flash_mmap_get_free_pages = 0x40000be8)
                [!provide]                        PROVIDE (spi_flash_cache2phys = 0x40000bf4)
                [!provide]                        PROVIDE (spi_flash_phys2cache = 0x40000c00)
                [!provide]                        PROVIDE (spi_flash_disable_cache = 0x40000c0c)
                [!provide]                        PROVIDE (spi_flash_restore_cache = 0x40000c18)
                [!provide]                        PROVIDE (spi_flash_cache_enabled = 0x40000c24)
                [!provide]                        PROVIDE (spi_flash_enable_cache = 0x40000c30)
                [!provide]                        PROVIDE (spi_cache_mode_switch = 0x40000c3c)
                [!provide]                        PROVIDE (spi_common_set_dummy_output = 0x40000c48)
                [!provide]                        PROVIDE (spi_common_set_flash_cs_timing = 0x40000c54)
                [!provide]                        PROVIDE (esp_rom_spi_set_address_bit_len = 0x40000c60)
                [!provide]                        PROVIDE (esp_enable_cache_flash_wrap = 0x40000c6c)
                [!provide]                        PROVIDE (SPILock = 0x40000c78)
                [!provide]                        PROVIDE (SPIMasterReadModeCnfig = 0x40000c84)
                [!provide]                        PROVIDE (SPI_Common_Command = 0x40000c90)
                [!provide]                        PROVIDE (SPI_WakeUp = 0x40000c9c)
                [!provide]                        PROVIDE (SPI_block_erase = 0x40000ca8)
                [!provide]                        PROVIDE (SPI_chip_erase = 0x40000cb4)
                [!provide]                        PROVIDE (SPI_init = 0x40000cc0)
                [!provide]                        PROVIDE (SPI_page_program = 0x40000ccc)
                [!provide]                        PROVIDE (SPI_read_data = 0x40000cd8)
                [!provide]                        PROVIDE (SPI_sector_erase = 0x40000ce4)
                [!provide]                        PROVIDE (SelectSpiFunction = 0x40000cf0)
                [!provide]                        PROVIDE (SetSpiDrvs = 0x40000cfc)
                [!provide]                        PROVIDE (Wait_SPI_Idle = 0x40000d08)
                [!provide]                        PROVIDE (spi_dummy_len_fix = 0x40000d14)
                [!provide]                        PROVIDE (Disable_QMode = 0x40000d20)
                [!provide]                        PROVIDE (Enable_QMode = 0x40000d2c)
                [!provide]                        PROVIDE (rom_spiflash_legacy_funcs = 0x3fceffe8)
                [!provide]                        PROVIDE (rom_spiflash_legacy_data = 0x3fceffe4)
                [!provide]                        PROVIDE (g_flash_guard_ops = 0x3fceffec)
                [!provide]                        PROVIDE (spi_flash_hal_poll_cmd_done = 0x40000d38)
                [!provide]                        PROVIDE (spi_flash_hal_device_config = 0x40000d44)
                [!provide]                        PROVIDE (spi_flash_hal_configure_host_io_mode = 0x40000d50)
                [!provide]                        PROVIDE (spi_flash_hal_common_command = 0x40000d5c)
                [!provide]                        PROVIDE (spi_flash_hal_read = 0x40000d68)
                [!provide]                        PROVIDE (spi_flash_hal_erase_chip = 0x40000d74)
                [!provide]                        PROVIDE (spi_flash_hal_erase_sector = 0x40000d80)
                [!provide]                        PROVIDE (spi_flash_hal_erase_block = 0x40000d8c)
                [!provide]                        PROVIDE (spi_flash_hal_program_page = 0x40000d98)
                [!provide]                        PROVIDE (spi_flash_hal_set_write_protect = 0x40000da4)
                [!provide]                        PROVIDE (spi_flash_hal_host_idle = 0x40000db0)
                0x0000000040000dbc                PROVIDE (wdt_hal_init = 0x40000dbc)
                [!provide]                        PROVIDE (wdt_hal_deinit = 0x40000dc8)
                0x0000000040000dd4                PROVIDE (wdt_hal_config_stage = 0x40000dd4)
                0x0000000040000de0                PROVIDE (wdt_hal_write_protect_disable = 0x40000de0)
                0x0000000040000dec                PROVIDE (wdt_hal_write_protect_enable = 0x40000dec)
                [!provide]                        PROVIDE (wdt_hal_enable = 0x40000df8)
                0x0000000040000e04                PROVIDE (wdt_hal_disable = 0x40000e04)
                [!provide]                        PROVIDE (wdt_hal_handle_intr = 0x40000e10)
                [!provide]                        PROVIDE (wdt_hal_feed = 0x40000e1c)
                0x0000000040000e28                PROVIDE (wdt_hal_set_flashboot_en = 0x40000e28)
                [!provide]                        PROVIDE (wdt_hal_is_enabled = 0x40000e34)
                [!provide]                        PROVIDE (systimer_hal_get_counter_value = 0x40000e40)
                [!provide]                        PROVIDE (systimer_hal_get_time = 0x40000e4c)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_target = 0x40000e58)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_period = 0x40000e64)
                [!provide]                        PROVIDE (systimer_hal_get_alarm_value = 0x40000e70)
                [!provide]                        PROVIDE (systimer_hal_enable_alarm_int = 0x40000e7c)
                [!provide]                        PROVIDE (systimer_hal_on_apb_freq_update = 0x40000e88)
                [!provide]                        PROVIDE (systimer_hal_counter_value_advance = 0x40000e94)
                [!provide]                        PROVIDE (systimer_hal_enable_counter = 0x40000ea0)
                [!provide]                        PROVIDE (systimer_hal_init = 0x40000eac)
                [!provide]                        PROVIDE (systimer_hal_select_alarm_mode = 0x40000eb8)
                [!provide]                        PROVIDE (systimer_hal_connect_alarm_counter = 0x40000ec4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_probe = 0x40000ed0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_detect_size = 0x40000edc)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write = 0x40000ee8)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write_encrypted = 0x40000ef4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_write_protect = 0x40000f00)
                [!provide]                        PROVIDE (spi_flash_common_write_status_16b_wrsr = 0x40000f0c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_reset = 0x40000f18)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_chip = 0x40000f24)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_sector = 0x40000f30)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_block = 0x40000f3c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_page_program = 0x40000f48)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_write_protect = 0x40000f54)
                [!provide]                        PROVIDE (spi_flash_common_read_status_16b_rdsr_rdsr2 = 0x40000f60)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read_reg = 0x40000f6c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_yield = 0x40000f78)
                [!provide]                        PROVIDE (spi_flash_generic_wait_host_idle = 0x40000f84)
                [!provide]                        PROVIDE (spi_flash_chip_generic_wait_idle = 0x40000f90)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_host_io_mode = 0x40000f9c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read = 0x40000fa8)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr2 = 0x40000fb4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_io_mode = 0x40000fc0)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr = 0x40000fcc)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr = 0x40000fd8)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr2 = 0x40000fe4)
                [!provide]                        PROVIDE (spi_flash_common_set_io_mode = 0x40000ff0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_io_mode = 0x40000ffc)
                [!provide]                        PROVIDE (spi_flash_chip_gd_get_io_mode = 0x40001008)
                [!provide]                        PROVIDE (spi_flash_chip_gd_probe = 0x40001014)
                [!provide]                        PROVIDE (spi_flash_chip_gd_set_io_mode = 0x40001020)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_data = 0x3fceffe0)
                [!provide]                        PROVIDE (memspi_host_read_id_hs = 0x4000102c)
                [!provide]                        PROVIDE (memspi_host_read_status_hs = 0x40001038)
                [!provide]                        PROVIDE (memspi_host_flush_cache = 0x40001044)
                [!provide]                        PROVIDE (memspi_host_erase_chip = 0x40001050)
                [!provide]                        PROVIDE (memspi_host_erase_sector = 0x4000105c)
                [!provide]                        PROVIDE (memspi_host_erase_block = 0x40001068)
                [!provide]                        PROVIDE (memspi_host_program_page = 0x40001074)
                [!provide]                        PROVIDE (memspi_host_read = 0x40001080)
                [!provide]                        PROVIDE (memspi_host_set_write_protect = 0x4000108c)
                [!provide]                        PROVIDE (memspi_host_set_max_read_len = 0x40001098)
                [!provide]                        PROVIDE (memspi_host_read_data_slicer = 0x400010a4)
                [!provide]                        PROVIDE (memspi_host_write_data_slicer = 0x400010b0)
                [!provide]                        PROVIDE (esp_flash_chip_driver_initialized = 0x400010bc)
                [!provide]                        PROVIDE (esp_flash_read_id = 0x400010c8)
                [!provide]                        PROVIDE (esp_flash_get_size = 0x400010d4)
                [!provide]                        PROVIDE (esp_flash_erase_chip = 0x400010e0)
                [!provide]                        PROVIDE (rom_esp_flash_erase_region = 0x400010ec)
                [!provide]                        PROVIDE (esp_flash_get_chip_write_protect = 0x400010f8)
                [!provide]                        PROVIDE (esp_flash_set_chip_write_protect = 0x40001104)
                [!provide]                        PROVIDE (esp_flash_get_protectable_regions = 0x40001110)
                [!provide]                        PROVIDE (esp_flash_get_protected_region = 0x4000111c)
                [!provide]                        PROVIDE (esp_flash_set_protected_region = 0x40001128)
                [!provide]                        PROVIDE (esp_flash_read = 0x40001134)
                [!provide]                        PROVIDE (esp_flash_write = 0x40001140)
                [!provide]                        PROVIDE (esp_flash_write_encrypted = 0x4000114c)
                [!provide]                        PROVIDE (esp_flash_read_encrypted = 0x40001158)
                [!provide]                        PROVIDE (esp_flash_get_io_mode = 0x40001164)
                [!provide]                        PROVIDE (esp_flash_set_io_mode = 0x40001170)
                [!provide]                        PROVIDE (spi_flash_boot_attach = 0x4000117c)
                [!provide]                        PROVIDE (spi_flash_dump_counters = 0x40001188)
                [!provide]                        PROVIDE (spi_flash_get_counters = 0x40001194)
                [!provide]                        PROVIDE (spi_flash_op_counters_config = 0x400011a0)
                [!provide]                        PROVIDE (spi_flash_reset_counters = 0x400011ac)
                [!provide]                        PROVIDE (esp_flash_read_chip_id = 0x400011b8)
                [!provide]                        PROVIDE (detect_spi_flash_chip = 0x400011c4)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_disable = 0x400011d0)
                [!provide]                        PROVIDE (esp_flash_default_chip = 0x3fceffdc)
                [!provide]                        PROVIDE (esp_flash_api_funcs = 0x3fceffd8)
                [!provide]                        PROVIDE (Cache_Get_ICache_Line_Size = 0x400015fc)
                [!provide]                        PROVIDE (Cache_Get_DCache_Line_Size = 0x40001608)
                [!provide]                        PROVIDE (Cache_Get_Mode = 0x40001614)
                [!provide]                        PROVIDE (Cache_Set_ICache_Mode = 0x40001620)
                [!provide]                        PROVIDE (Cache_Set_DCache_Mode = 0x4000162c)
                [!provide]                        PROVIDE (Cache_Address_Through_ICache = 0x40001638)
                [!provide]                        PROVIDE (Cache_Address_Through_DCache = 0x40001644)
                [!provide]                        PROVIDE (Cache_Set_Default_Mode = 0x40001650)
                [!provide]                        PROVIDE (Cache_Enable_Defalut_ICache_Mode = 0x4000165c)
                [!provide]                        PROVIDE (ROM_Boot_Cache_Init = 0x40001668)
                [!provide]                        PROVIDE (Cache_Invalidate_ICache_Items = 0x40001674)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_Items = 0x40001680)
                [!provide]                        PROVIDE (Cache_Clean_Items = 0x4000168c)
                [!provide]                        PROVIDE (Cache_WriteBack_Items = 0x40001698)
                [!provide]                        PROVIDE (Cache_Op_Addr = 0x400016a4)
                [!provide]                        PROVIDE (Cache_Invalidate_Addr = 0x400016b0)
                [!provide]                        PROVIDE (Cache_Clean_Addr = 0x400016bc)
                [!provide]                        PROVIDE (Cache_WriteBack_Addr = 0x400016c8)
                [!provide]                        PROVIDE (Cache_Invalidate_ICache_All = 0x400016d4)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_All = 0x400016e0)
                [!provide]                        PROVIDE (Cache_Clean_All = 0x400016ec)
                [!provide]                        PROVIDE (Cache_WriteBack_All = 0x400016f8)
                [!provide]                        PROVIDE (Cache_Mask_All = 0x40001704)
                [!provide]                        PROVIDE (Cache_UnMask_Dram0 = 0x40001710)
                [!provide]                        PROVIDE (Cache_Suspend_ICache_Autoload = 0x4000171c)
                [!provide]                        PROVIDE (Cache_Resume_ICache_Autoload = 0x40001728)
                [!provide]                        PROVIDE (Cache_Suspend_DCache_Autoload = 0x40001734)
                [!provide]                        PROVIDE (Cache_Resume_DCache_Autoload = 0x40001740)
                [!provide]                        PROVIDE (Cache_Start_ICache_Preload = 0x4000174c)
                [!provide]                        PROVIDE (Cache_ICache_Preload_Done = 0x40001758)
                [!provide]                        PROVIDE (Cache_End_ICache_Preload = 0x40001764)
                [!provide]                        PROVIDE (Cache_Start_DCache_Preload = 0x40001770)
                [!provide]                        PROVIDE (Cache_DCache_Preload_Done = 0x4000177c)
                [!provide]                        PROVIDE (Cache_End_DCache_Preload = 0x40001788)
                [!provide]                        PROVIDE (Cache_Config_ICache_Autoload = 0x40001794)
                [!provide]                        PROVIDE (Cache_Config_ICache_Region_Autoload = 0x400017a0)
                [!provide]                        PROVIDE (Cache_Enable_ICache_Autoload = 0x400017ac)
                [!provide]                        PROVIDE (Cache_Disable_ICache_Autoload = 0x400017b8)
                [!provide]                        PROVIDE (Cache_Config_DCache_Autoload = 0x400017c4)
                [!provide]                        PROVIDE (Cache_Config_DCache_Region_Autoload = 0x400017d0)
                [!provide]                        PROVIDE (Cache_Enable_DCache_Autoload = 0x400017dc)
                [!provide]                        PROVIDE (Cache_Disable_DCache_Autoload = 0x400017e8)
                [!provide]                        PROVIDE (Cache_Enable_ICache_PreLock = 0x400017f4)
                [!provide]                        PROVIDE (Cache_Disable_ICache_PreLock = 0x40001800)
                [!provide]                        PROVIDE (Cache_Lock_ICache_Items = 0x4000180c)
                [!provide]                        PROVIDE (Cache_Unlock_ICache_Items = 0x40001818)
                [!provide]                        PROVIDE (Cache_Enable_DCache_PreLock = 0x40001824)
                [!provide]                        PROVIDE (Cache_Disable_DCache_PreLock = 0x40001830)
                [!provide]                        PROVIDE (Cache_Lock_DCache_Items = 0x4000183c)
                [!provide]                        PROVIDE (Cache_Unlock_DCache_Items = 0x40001848)
                [!provide]                        PROVIDE (Cache_Lock_Addr = 0x40001854)
                [!provide]                        PROVIDE (Cache_Unlock_Addr = 0x40001860)
                0x000000004000186c                PROVIDE (Cache_Disable_ICache = 0x4000186c)
                [!provide]                        PROVIDE (Cache_Enable_ICache = 0x40001878)
                0x0000000040001884                PROVIDE (Cache_Disable_DCache = 0x40001884)
                [!provide]                        PROVIDE (Cache_Enable_DCache = 0x40001890)
                [!provide]                        PROVIDE (Cache_Suspend_ICache = 0x4000189c)
                [!provide]                        PROVIDE (Cache_Resume_ICache = 0x400018a8)
                0x00000000400018b4                PROVIDE (Cache_Suspend_DCache = 0x400018b4)
                0x00000000400018c0                PROVIDE (Cache_Resume_DCache = 0x400018c0)
                [!provide]                        PROVIDE (Cache_Occupy_Items = 0x400018cc)
                [!provide]                        PROVIDE (Cache_Occupy_Addr = 0x400018d8)
                0x00000000400018e4                PROVIDE (Cache_Freeze_ICache_Enable = 0x400018e4)
                0x00000000400018f0                PROVIDE (Cache_Freeze_ICache_Disable = 0x400018f0)
                0x00000000400018fc                PROVIDE (Cache_Freeze_DCache_Enable = 0x400018fc)
                0x0000000040001908                PROVIDE (Cache_Freeze_DCache_Disable = 0x40001908)
                0x0000000040001914                PROVIDE (Cache_Set_IDROM_MMU_Size = 0x40001914)
                [!provide]                        PROVIDE (flash2spiram_instruction_offset = 0x40001920)
                [!provide]                        PROVIDE (flash2spiram_rodata_offset = 0x4000192c)
                [!provide]                        PROVIDE (flash_instr_rodata_start_page = 0x40001938)
                [!provide]                        PROVIDE (flash_instr_rodata_end_page = 0x40001944)
                0x0000000040001950                PROVIDE (Cache_Set_IDROM_MMU_Info = 0x40001950)
                [!provide]                        PROVIDE (Cache_Get_IROM_MMU_End = 0x4000195c)
                [!provide]                        PROVIDE (Cache_Get_DROM_MMU_End = 0x40001968)
                [!provide]                        PROVIDE (Cache_Owner_Init = 0x40001974)
                [!provide]                        PROVIDE (Cache_Occupy_ICache_MEMORY = 0x40001980)
                [!provide]                        PROVIDE (Cache_Occupy_DCache_MEMORY = 0x4000198c)
                [!provide]                        PROVIDE (Cache_MMU_Init = 0x40001998)
                [!provide]                        PROVIDE (Cache_Ibus_MMU_Set = 0x400019a4)
                [!provide]                        PROVIDE (Cache_Dbus_MMU_Set = 0x400019b0)
                [!provide]                        PROVIDE (Cache_Count_Flash_Pages = 0x400019bc)
                [!provide]                        PROVIDE (Cache_Flash_To_SPIRAM_Copy = 0x400019c8)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory = 0x400019d4)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory2 = 0x400019e0)
                [!provide]                        PROVIDE (Cache_Get_Virtual_Addr = 0x400019ec)
                [!provide]                        PROVIDE (Cache_Get_Memory_BaseAddr = 0x400019f8)
                [!provide]                        PROVIDE (Cache_Get_Memory_Addr = 0x40001a04)
                [!provide]                        PROVIDE (Cache_Get_Memory_value = 0x40001a10)
                0x0000000040001a1c                PROVIDE (rom_config_instruction_cache_mode = 0x40001a1c)
                0x0000000040001a28                PROVIDE (rom_config_data_cache_mode = 0x40001a28)
                [!provide]                        PROVIDE (rom_cache_op_cb = 0x3fceffc8)
                [!provide]                        PROVIDE (rom_cache_internal_table_ptr = 0x3fceffc4)
                0x0000000040001a34                ets_get_apb_freq = 0x40001a34
                0x0000000040001a40                ets_get_cpu_frequency = 0x40001a40
                0x0000000040001a4c                ets_update_cpu_frequency = 0x40001a4c
                0x0000000040001a58                ets_get_printf_channel = 0x40001a58
                0x0000000040001a64                ets_get_xtal_div = 0x40001a64
                0x0000000040001a70                ets_set_xtal_div = 0x40001a70
                0x0000000040001a7c                ets_get_xtal_freq = 0x40001a7c
                0x0000000040001a88                gpio_input_get = 0x40001a88
                0x0000000040001a94                gpio_matrix_in = 0x40001a94
                0x0000000040001aa0                gpio_matrix_out = 0x40001aa0
                0x0000000040001aac                gpio_output_disable = 0x40001aac
                0x0000000040001ab8                gpio_output_enable = 0x40001ab8
                0x0000000040001ac4                gpio_output_set = 0x40001ac4
                0x0000000040001ad0                gpio_pad_hold = 0x40001ad0
                0x0000000040001adc                gpio_pad_input_disable = 0x40001adc
                0x0000000040001ae8                gpio_pad_input_enable = 0x40001ae8
                0x0000000040001af4                gpio_pad_pulldown = 0x40001af4
                0x0000000040001b00                gpio_pad_pullup = 0x40001b00
                0x0000000040001b0c                gpio_pad_select_gpio = 0x40001b0c
                0x0000000040001b18                gpio_pad_set_drv = 0x40001b18
                0x0000000040001b24                gpio_pad_unhold = 0x40001b24
                0x0000000040001b30                gpio_pin_wakeup_disable = 0x40001b30
                0x0000000040001b3c                gpio_pin_wakeup_enable = 0x40001b3c
                0x0000000040001b48                gpio_bypass_matrix_in = 0x40001b48
                0x0000000040001b54                intr_matrix_set = 0x40001b54
                0x0000000040001b60                ets_intr_lock = 0x40001b60
                0x0000000040001b6c                ets_intr_unlock = 0x40001b6c
                0x0000000040001b78                ets_isr_attach = 0x40001b78
                0x0000000040001b84                ets_isr_mask = 0x40001b84
                0x0000000040001b90                ets_isr_unmask = 0x40001b90
                0x0000000040001b9c                xthal_bcopy = 0x40001b9c
                0x0000000040001ba8                xthal_memcpy = 0x40001ba8
                0x0000000040001bb4                xthal_get_ccompare = 0x40001bb4
                0x0000000040001bc0                xthal_set_ccompare = 0x40001bc0
                0x0000000040001bcc                xthal_get_ccount = 0x40001bcc
                0x0000000040001bd8                xthal_get_interrupt = 0x40001bd8
                0x0000000040001be4                xthal_set_intclear = 0x40001be4
                0x0000000040001bf0                _xtos_ints_off = 0x40001bf0
                0x0000000040001bfc                _xtos_ints_on = 0x40001bfc
                0x0000000040001c08                _xtos_restore_intlevel = 0x40001c08
                0x0000000040001c14                _xtos_set_exception_handler = 0x40001c14
                0x0000000040001c20                _xtos_set_interrupt_handler = 0x40001c20
                0x0000000040001c2c                _xtos_set_interrupt_handler_arg = 0x40001c2c
                0x0000000040001c38                _xtos_set_intlevel = 0x40001c38
                0x0000000040001c44                _xtos_set_vpri = 0x40001c44
                0x0000000040001c50                md5_vector = 0x40001c50
                0x0000000040001c5c                MD5Init = 0x40001c5c
                0x0000000040001c68                MD5Update = 0x40001c68
                0x0000000040001c74                MD5Final = 0x40001c74
                0x0000000040001c80                hmac_md5_vector = 0x40001c80
                0x0000000040001c8c                hmac_md5 = 0x40001c8c
                0x0000000040001c98                crc32_le = 0x40001c98
                0x0000000040001ca4                crc32_be = 0x40001ca4
                0x0000000040001cb0                crc16_le = 0x40001cb0
                0x0000000040001cbc                crc16_be = 0x40001cbc
                0x0000000040001cc8                crc8_le = 0x40001cc8
                0x0000000040001cd4                crc8_be = 0x40001cd4
                0x0000000040001ce0                esp_crc8 = 0x40001ce0
                0x0000000040001cec                ets_sha_enable = 0x40001cec
                0x0000000040001cf8                ets_sha_disable = 0x40001cf8
                0x0000000040001d04                ets_sha_get_state = 0x40001d04
                0x0000000040001d10                ets_sha_init = 0x40001d10
                0x0000000040001d1c                ets_sha_process = 0x40001d1c
                0x0000000040001d28                ets_sha_starts = 0x40001d28
                0x0000000040001d34                ets_sha_update = 0x40001d34
                0x0000000040001d40                ets_sha_finish = 0x40001d40
                0x0000000040001d4c                ets_sha_clone = 0x40001d4c
                0x0000000040001d58                ets_hmac_enable = 0x40001d58
                0x0000000040001d64                ets_hmac_disable = 0x40001d64
                0x0000000040001d70                ets_hmac_calculate_message = 0x40001d70
                0x0000000040001d7c                ets_hmac_calculate_downstream = 0x40001d7c
                0x0000000040001d88                ets_hmac_invalidate_downstream = 0x40001d88
                0x0000000040001d94                ets_jtag_enable_temporarily = 0x40001d94
                0x0000000040001da0                ets_aes_enable = 0x40001da0
                0x0000000040001dac                ets_aes_disable = 0x40001dac
                0x0000000040001db8                ets_aes_setkey = 0x40001db8
                0x0000000040001dc4                ets_aes_block = 0x40001dc4
                0x0000000040001dd0                ets_bigint_enable = 0x40001dd0
                0x0000000040001ddc                ets_bigint_disable = 0x40001ddc
                0x0000000040001de8                ets_bigint_multiply = 0x40001de8
                0x0000000040001df4                ets_bigint_modmult = 0x40001df4
                0x0000000040001e00                ets_bigint_modexp = 0x40001e00
                0x0000000040001e0c                ets_bigint_wait_finish = 0x40001e0c
                0x0000000040001e18                ets_bigint_getz = 0x40001e18
                0x0000000040001e24                ets_ds_enable = 0x40001e24
                0x0000000040001e30                ets_ds_disable = 0x40001e30
                0x0000000040001e3c                ets_ds_start_sign = 0x40001e3c
                0x0000000040001e48                ets_ds_is_busy = 0x40001e48
                0x0000000040001e54                ets_ds_finish_sign = 0x40001e54
                0x0000000040001e60                ets_ds_encrypt_params = 0x40001e60
                0x0000000040001e6c                ets_aes_setkey_dec = 0x40001e6c
                0x0000000040001e78                ets_aes_setkey_enc = 0x40001e78
                0x0000000040001e84                ets_mgf1_sha256 = 0x40001e84
                0x0000000040001e90                ets_efuse_read = 0x40001e90
                0x0000000040001e9c                ets_efuse_program = 0x40001e9c
                0x0000000040001ea8                ets_efuse_clear_program_registers = 0x40001ea8
                0x0000000040001eb4                ets_efuse_write_key = 0x40001eb4
                0x0000000040001ec0                ets_efuse_get_read_register_address = 0x40001ec0
                0x0000000040001ecc                ets_efuse_get_key_purpose = 0x40001ecc
                0x0000000040001ed8                ets_efuse_key_block_unused = 0x40001ed8
                0x0000000040001ee4                ets_efuse_find_unused_key_block = 0x40001ee4
                0x0000000040001ef0                ets_efuse_rs_calculate = 0x40001ef0
                0x0000000040001efc                ets_efuse_count_unused_key_blocks = 0x40001efc
                0x0000000040001f08                ets_efuse_secure_boot_enabled = 0x40001f08
                0x0000000040001f14                ets_efuse_secure_boot_aggressive_revoke_enabled = 0x40001f14
                0x0000000040001f20                ets_efuse_cache_encryption_enabled = 0x40001f20
                0x0000000040001f2c                ets_efuse_download_modes_disabled = 0x40001f2c
                0x0000000040001f38                ets_efuse_find_purpose = 0x40001f38
                0x0000000040001f44                ets_efuse_flash_opi_5pads_power_sel_vddspi = 0x40001f44
                0x0000000040001f50                ets_efuse_force_send_resume = 0x40001f50
                0x0000000040001f5c                ets_efuse_get_flash_delay_us = 0x40001f5c
                0x0000000040001f68                ets_efuse_get_mac = 0x40001f68
                0x0000000040001f74                ets_efuse_get_spiconfig = 0x40001f74
                0x0000000040001f80                ets_efuse_usb_print_is_disabled = 0x40001f80
                0x0000000040001f8c                ets_efuse_get_uart_print_channel = 0x40001f8c
                0x0000000040001f98                ets_efuse_get_uart_print_control = 0x40001f98
                0x0000000040001fa4                ets_efuse_get_wp_pad = 0x40001fa4
                0x0000000040001fb0                ets_efuse_legacy_spi_boot_mode_disabled = 0x40001fb0
                0x0000000040001fbc                ets_efuse_security_download_modes_enabled = 0x40001fbc
                0x0000000040001fc8                ets_efuse_set_timing = 0x40001fc8
                0x0000000040001fd4                ets_efuse_jtag_disabled = 0x40001fd4
                0x0000000040001fe0                ets_efuse_usb_download_mode_disabled = 0x40001fe0
                0x0000000040001fec                ets_efuse_usb_module_disabled = 0x40001fec
                0x0000000040001ff8                ets_efuse_usb_device_disabled = 0x40001ff8
                0x0000000040002004                ets_efuse_flash_octal_mode = 0x40002004
                0x0000000040002010                ets_efuse_ecc_en = 0x40002010
                0x000000004000201c                ets_efuse_ecc_flash_page_size = 0x4000201c
                0x0000000040002028                ets_efuse_ecc_16to17_mode = 0x40002028
                0x0000000040002034                ets_ecc_flash_enable = 0x40002034
                0x0000000040002040                ets_ecc_flash_enable_all = 0x40002040
                0x000000004000204c                ets_ecc_flash_disable = 0x4000204c
                0x0000000040002058                ets_ecc_flash_disable_all = 0x40002058
                0x0000000040002064                ets_ecc_get_flash_page_size = 0x40002064
                0x0000000040002070                ets_ecc_set_flash_page_size = 0x40002070
                0x000000004000207c                ets_ecc_set_flash_byte_mode = 0x4000207c
                0x0000000040002088                ets_ecc_get_flash_byte_mode = 0x40002088
                0x0000000040002094                ets_ecc_set_flash_range = 0x40002094
                0x00000000400020a0                ets_ecc_get_flash_range = 0x400020a0
                0x00000000400020ac                ets_ecc_sram_enable = 0x400020ac
                0x00000000400020b8                ets_ecc_sram_disable = 0x400020b8
                0x00000000400020c4                ets_ecc_sram_enable_all = 0x400020c4
                0x00000000400020d0                ets_ecc_sram_disable_all = 0x400020d0
                0x00000000400020dc                ets_ecc_get_sram_page_size = 0x400020dc
                0x00000000400020e8                ets_ecc_set_sram_page_size = 0x400020e8
                0x00000000400020f4                ets_ecc_get_sram_byte_mode = 0x400020f4
                0x0000000040002100                ets_ecc_set_sram_byte_mode = 0x40002100
                0x000000004000210c                ets_ecc_set_sram_range = 0x4000210c
                0x0000000040002118                ets_ecc_get_sram_range = 0x40002118
                0x000000003fceffc0                ets_ecc_table_ptr = 0x3fceffc0
                0x0000000040002124                ets_emsa_pss_verify = 0x40002124
                0x0000000040002130                ets_rsa_pss_verify = 0x40002130
                0x000000004000213c                ets_secure_boot_verify_bootloader_with_keys = 0x4000213c
                0x0000000040002148                ets_secure_boot_verify_signature = 0x40002148
                0x0000000040002154                ets_secure_boot_read_key_digests = 0x40002154
                0x0000000040002160                ets_secure_boot_revoke_public_key_digest = 0x40002160
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char = 0x400025a4)
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char_block = 0x400025b0)
                [!provide]                        PROVIDE (usb_uart_otg_tx_flush = 0x400025bc)
                [!provide]                        PROVIDE (usb_uart_otg_tx_one_char = 0x400025c8)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char = 0x400025d4)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char_block = 0x400025e0)
                [!provide]                        PROVIDE (usb_uart_device_tx_flush = 0x400025ec)
                [!provide]                        PROVIDE (usb_uart_device_tx_one_char = 0x400025f8)
                [!provide]                        PROVIDE (Uart_Init_USB = 0x40002604)
                [!provide]                        PROVIDE (uart_acm_dev = 0x3fceffbc)
                [!provide]                        PROVIDE (g_uart_print = 0x3fceffb9)
                [!provide]                        PROVIDE (g_usb_print = 0x3fceffb8)
                0x0000000040002610                cdc_acm_class_handle_req = 0x40002610
                0x000000004000261c                cdc_acm_init = 0x4000261c
                0x0000000040002628                cdc_acm_fifo_fill = 0x40002628
                0x0000000040002634                cdc_acm_rx_fifo_cnt = 0x40002634
                0x0000000040002640                cdc_acm_fifo_read = 0x40002640
                0x000000004000264c                cdc_acm_irq_tx_enable = 0x4000264c
                0x0000000040002658                cdc_acm_irq_tx_disable = 0x40002658
                0x0000000040002664                cdc_acm_irq_state_enable = 0x40002664
                0x0000000040002670                cdc_acm_irq_state_disable = 0x40002670
                0x000000004000267c                cdc_acm_irq_tx_ready = 0x4000267c
                0x0000000040002688                cdc_acm_irq_rx_enable = 0x40002688
                0x0000000040002694                cdc_acm_irq_rx_disable = 0x40002694
                0x00000000400026a0                cdc_acm_irq_rx_ready = 0x400026a0
                0x00000000400026ac                cdc_acm_irq_is_pending = 0x400026ac
                0x00000000400026b8                cdc_acm_irq_callback_set = 0x400026b8
                0x00000000400026c4                cdc_acm_line_ctrl_set = 0x400026c4
                0x00000000400026d0                cdc_acm_line_ctrl_get = 0x400026d0
                0x00000000400026dc                cdc_acm_poll_out = 0x400026dc
                0x00000000400026e8                chip_usb_dw_did_persist = 0x400026e8
                0x00000000400026f4                chip_usb_dw_init = 0x400026f4
                0x0000000040002700                chip_usb_detach = 0x40002700
                0x000000004000270c                chip_usb_dw_prepare_persist = 0x4000270c
                0x0000000040002718                chip_usb_get_persist_flags = 0x40002718
                0x0000000040002724                chip_usb_set_persist_flags = 0x40002724
                0x0000000040002730                cpio_start = 0x40002730
                0x000000004000273c                cpio_feed = 0x4000273c
                0x0000000040002748                cpio_done = 0x40002748
                0x0000000040002754                cpio_destroy = 0x40002754
                0x0000000040002760                dfu_flash_init = 0x40002760
                0x000000004000276c                dfu_flash_erase = 0x4000276c
                0x0000000040002778                dfu_flash_program = 0x40002778
                0x0000000040002784                dfu_flash_read = 0x40002784
                0x0000000040002790                dfu_flash_attach = 0x40002790
                0x000000004000279c                dfu_cpio_callback = 0x4000279c
                0x00000000400027a8                dfu_updater_get_err = 0x400027a8
                0x00000000400027b4                dfu_updater_clear_err = 0x400027b4
                0x00000000400027c0                dfu_updater_enable = 0x400027c0
                0x00000000400027cc                dfu_updater_begin = 0x400027cc
                0x00000000400027d8                dfu_updater_feed = 0x400027d8
                0x00000000400027e4                dfu_updater_end = 0x400027e4
                0x00000000400027f0                dfu_updater_set_raw_addr = 0x400027f0
                0x00000000400027fc                dfu_updater_flash_read = 0x400027fc
                0x0000000040002808                usb_dc_prepare_persist = 0x40002808
                0x0000000040002814                usb_dw_isr_handler = 0x40002814
                0x0000000040002820                usb_dc_attach = 0x40002820
                0x000000004000282c                usb_dc_detach = 0x4000282c
                0x0000000040002838                usb_dc_reset = 0x40002838
                0x0000000040002844                usb_dc_set_address = 0x40002844
                0x0000000040002850                usb_dc_ep_check_cap = 0x40002850
                0x000000004000285c                usb_dc_ep_configure = 0x4000285c
                0x0000000040002868                usb_dc_ep_set_stall = 0x40002868
                0x0000000040002874                usb_dc_ep_clear_stall = 0x40002874
                0x0000000040002880                usb_dc_ep_halt = 0x40002880
                0x000000004000288c                usb_dc_ep_is_stalled = 0x4000288c
                0x0000000040002898                usb_dc_ep_enable = 0x40002898
                0x00000000400028a4                usb_dc_ep_disable = 0x400028a4
                0x00000000400028b0                usb_dc_ep_flush = 0x400028b0
                0x00000000400028bc                usb_dc_ep_write_would_block = 0x400028bc
                0x00000000400028c8                usb_dc_ep_write = 0x400028c8
                0x00000000400028d4                usb_dc_ep_read_wait = 0x400028d4
                0x00000000400028e0                usb_dc_ep_read_continue = 0x400028e0
                0x00000000400028ec                usb_dc_ep_read = 0x400028ec
                0x00000000400028f8                usb_dc_ep_set_callback = 0x400028f8
                0x0000000040002904                usb_dc_set_status_callback = 0x40002904
                0x0000000040002910                usb_dc_ep_mps = 0x40002910
                0x000000004000291c                usb_dc_check_poll_for_interrupts = 0x4000291c
                0x0000000040002928                mac_addr_to_serial_str_desc = 0x40002928
                0x0000000040002934                usb_set_current_descriptor = 0x40002934
                0x0000000040002940                usb_get_descriptor = 0x40002940
                0x000000004000294c                usb_dev_resume = 0x4000294c
                0x0000000040002958                usb_dev_get_configuration = 0x40002958
                0x0000000040002964                usb_set_config = 0x40002964
                0x0000000040002970                usb_deconfig = 0x40002970
                0x000000004000297c                usb_enable = 0x4000297c
                0x0000000040002988                usb_disable = 0x40002988
                0x0000000040002994                usb_write_would_block = 0x40002994
                0x00000000400029a0                usb_write = 0x400029a0
                0x00000000400029ac                usb_read = 0x400029ac
                0x00000000400029b8                usb_ep_set_stall = 0x400029b8
                0x00000000400029c4                usb_ep_clear_stall = 0x400029c4
                0x00000000400029d0                usb_ep_read_wait = 0x400029d0
                0x00000000400029dc                usb_ep_read_continue = 0x400029dc
                0x00000000400029e8                usb_transfer_ep_callback = 0x400029e8
                0x00000000400029f4                usb_transfer = 0x400029f4
                0x0000000040002a00                usb_cancel_transfer = 0x40002a00
                0x0000000040002a0c                usb_transfer_sync = 0x40002a0c
                0x0000000040002a18                usb_dfu_set_detach_cb = 0x40002a18
                0x0000000040002a24                dfu_class_handle_req = 0x40002a24
                0x0000000040002a30                dfu_status_cb = 0x40002a30
                0x0000000040002a3c                dfu_custom_handle_req = 0x40002a3c
                0x0000000040002a48                usb_dfu_init = 0x40002a48
                0x0000000040002a54                usb_dfu_force_detach = 0x40002a54
                0x0000000040002a60                usb_dev_deinit = 0x40002a60
                0x0000000040002a6c                usb_dw_ctrl_deinit = 0x40002a6c
                0x000000003fceffac                s_usb_osglue = 0x3fceffac
                0x0000000040002a78                bt_rf_coex_get_dft_cfg = 0x40002a78
                0x0000000040002a84                bt_rf_coex_hooks_p_set = 0x40002a84
                0x0000000040002a90                btdm_con_maxevtime_cal_impl = 0x40002a90
                0x0000000040002a9c                btdm_controller_get_compile_version_impl = 0x40002a9c
                0x0000000040002aa8                btdm_controller_rom_data_init = 0x40002aa8
                0x0000000040002ab4                btdm_dis_privacy_err_report_impl = 0x40002ab4
                0x0000000040002ac0                btdm_disable_adv_delay_impl = 0x40002ac0
                0x0000000040002acc                btdm_enable_scan_continue_impl = 0x40002acc
                0x0000000040002ad8                btdm_enable_scan_forever_impl = 0x40002ad8
                0x0000000040002ae4                btdm_get_power_state_impl = 0x40002ae4
                0x0000000040002af0                btdm_get_prevent_sleep_flag_impl = 0x40002af0
                0x0000000040002afc                btdm_power_state_active_impl = 0x40002afc
                0x0000000040002b08                btdm_switch_phy_coded_impl = 0x40002b08
                0x0000000040002b14                hci_acl_data_handler = 0x40002b14
                0x0000000040002b20                hci_disconnect_cmd_handler = 0x40002b20
                0x0000000040002b2c                hci_le_con_upd_cmd_handler = 0x40002b2c
                0x0000000040002b38                hci_le_ltk_req_neg_reply_cmd_handler = 0x40002b38
                0x0000000040002b44                hci_le_ltk_req_reply_cmd_handler = 0x40002b44
                0x0000000040002b50                hci_le_rd_chnl_map_cmd_handler = 0x40002b50
                0x0000000040002b5c                hci_le_rd_phy_cmd_handler = 0x40002b5c
                0x0000000040002b68                hci_le_rd_rem_feats_cmd_handler = 0x40002b68
                0x0000000040002b74                hci_le_rem_con_param_req_neg_reply_cmd_handler = 0x40002b74
                0x0000000040002b80                hci_le_rem_con_param_req_reply_cmd_handler = 0x40002b80
                0x0000000040002b8c                hci_le_set_data_len_cmd_handler = 0x40002b8c
                0x0000000040002b98                hci_le_set_phy_cmd_handler = 0x40002b98
                0x0000000040002ba4                hci_le_start_enc_cmd_handler = 0x40002ba4
                0x0000000040002bb0                hci_rd_auth_payl_to_cmd_handler = 0x40002bb0
                0x0000000040002bbc                hci_rd_rem_ver_info_cmd_handler = 0x40002bbc
                0x0000000040002bc8                hci_rd_rssi_cmd_handler = 0x40002bc8
                0x0000000040002bd4                hci_rd_tx_pwr_lvl_cmd_handler = 0x40002bd4
                0x0000000040002be0                hci_vs_set_pref_slave_evt_dur_cmd_handler = 0x40002be0
                0x0000000040002bec                hci_vs_set_pref_slave_latency_cmd_handler = 0x40002bec
                0x0000000040002bf8                hci_wr_auth_payl_to_cmd_handler = 0x40002bf8
                0x0000000040002c04                ll_channel_map_ind_handler = 0x40002c04
                0x0000000040002c10                ll_connection_param_req_handler = 0x40002c10
                0x0000000040002c1c                ll_connection_param_rsp_handler = 0x40002c1c
                0x0000000040002c28                ll_connection_update_ind_handler = 0x40002c28
                0x0000000040002c34                ll_enc_req_handler = 0x40002c34
                0x0000000040002c40                ll_enc_rsp_handler = 0x40002c40
                0x0000000040002c4c                ll_feature_req_handler = 0x40002c4c
                0x0000000040002c58                ll_feature_rsp_handler = 0x40002c58
                0x0000000040002c64                ll_length_req_handler = 0x40002c64
                0x0000000040002c70                ll_length_rsp_handler = 0x40002c70
                0x0000000040002c7c                ll_min_used_channels_ind_handler = 0x40002c7c
                0x0000000040002c88                ll_pause_enc_req_handler = 0x40002c88
                0x0000000040002c94                ll_pause_enc_rsp_handler = 0x40002c94
                0x0000000040002ca0                ll_phy_req_handler = 0x40002ca0
                0x0000000040002cac                ll_phy_rsp_handler = 0x40002cac
                0x0000000040002cb8                ll_phy_update_ind_handler = 0x40002cb8
                0x0000000040002cc4                ll_ping_req_handler = 0x40002cc4
                0x0000000040002cd0                ll_ping_rsp_handler = 0x40002cd0
                0x0000000040002cdc                ll_slave_feature_req_handler = 0x40002cdc
                0x0000000040002ce8                ll_start_enc_req_handler = 0x40002ce8
                0x0000000040002cf4                ll_start_enc_rsp_handler = 0x40002cf4
                0x0000000040002d00                ll_terminate_ind_handler = 0x40002d00
                0x0000000040002d0c                ll_version_ind_handler = 0x40002d0c
                0x0000000040002d18                llc_auth_payl_nearly_to_handler = 0x40002d18
                0x0000000040002d24                llc_auth_payl_real_to_handler = 0x40002d24
                0x0000000040002d30                llc_encrypt_ind_handler = 0x40002d30
                0x0000000040002d3c                llc_hci_command_handler_wrapper = 0x40002d3c
                0x0000000040002d48                llc_ll_connection_param_req_pdu_send = 0x40002d48
                0x0000000040002d54                llc_ll_connection_param_rsp_pdu_send = 0x40002d54
                0x0000000040002d60                llc_ll_connection_update_ind_pdu_send = 0x40002d60
                0x0000000040002d6c                llc_ll_enc_req_pdu_send = 0x40002d6c
                0x0000000040002d78                llc_ll_enc_rsp_pdu_send = 0x40002d78
                0x0000000040002d84                llc_ll_feature_req_pdu_send = 0x40002d84
                0x0000000040002d90                llc_ll_feature_rsp_pdu_send = 0x40002d90
                0x0000000040002d9c                llc_ll_length_req_pdu_send = 0x40002d9c
                0x0000000040002da8                llc_ll_length_rsp_pdu_send = 0x40002da8
                0x0000000040002db4                llc_ll_pause_enc_req_pdu_send = 0x40002db4
                0x0000000040002dc0                llc_ll_pause_enc_rsp_pdu_send = 0x40002dc0
                0x0000000040002dcc                llc_ll_phy_req_pdu_send = 0x40002dcc
                0x0000000040002dd8                llc_ll_phy_rsp_pdu_send = 0x40002dd8
                0x0000000040002de4                llc_ll_ping_req_pdu_send = 0x40002de4
                0x0000000040002df0                llc_ll_ping_rsp_pdu_send = 0x40002df0
                0x0000000040002dfc                llc_ll_start_enc_req_pdu_send = 0x40002dfc
                0x0000000040002e08                llc_ll_start_enc_rsp_pdu_send = 0x40002e08
                0x0000000040002e14                llc_ll_terminate_ind_pdu_send = 0x40002e14
                0x0000000040002e20                llc_ll_unknown_rsp_pdu_send = 0x40002e20
                0x0000000040002e2c                llc_llcp_ch_map_update_ind_pdu_send = 0x40002e2c
                0x0000000040002e38                llc_llcp_phy_upd_ind_pdu_send = 0x40002e38
                0x0000000040002e44                llc_llcp_version_ind_pdu_send = 0x40002e44
                0x0000000040002e50                llc_op_ch_map_upd_ind_handler = 0x40002e50
                0x0000000040002e5c                llc_op_con_upd_ind_handler = 0x40002e5c
                0x0000000040002e68                llc_op_disconnect_ind_handler = 0x40002e68
                0x0000000040002e74                llc_op_dl_upd_ind_handler = 0x40002e74
                0x0000000040002e80                llc_op_encrypt_ind_handler = 0x40002e80
                0x0000000040002e8c                llc_op_feats_exch_ind_handler = 0x40002e8c
                0x0000000040002e98                llc_op_le_ping_ind_handler = 0x40002e98
                0x0000000040002ea4                llc_op_phy_upd_ind_handler = 0x40002ea4
                0x0000000040002eb0                llc_op_ver_exch_ind_handler = 0x40002eb0
                0x0000000040002ebc                llc_stopped_ind_handler = 0x40002ebc
                0x0000000040002ec8                lld_acl_rx_ind_handler = 0x40002ec8
                0x0000000040002ed4                lld_acl_tx_cfm_handler = 0x40002ed4
                0x0000000040002ee0                lld_adv_end_ind_handler = 0x40002ee0
                0x0000000040002eec                lld_adv_rep_ind_handler = 0x40002eec
                0x0000000040002ef8                lld_ch_map_upd_cfm_handler = 0x40002ef8
                0x0000000040002f04                lld_con_estab_ind_handler = 0x40002f04
                0x0000000040002f10                lld_con_evt_sd_evt_time_set = 0x40002f10
                0x0000000040002f1c                lld_con_offset_upd_ind_handler = 0x40002f1c
                0x0000000040002f28                lld_con_param_upd_cfm_handler = 0x40002f28
                0x0000000040002f34                lld_disc_ind_handler = 0x40002f34
                0x0000000040002f40                lld_init_end_ind_handler = 0x40002f40
                0x0000000040002f4c                lld_llcp_rx_ind_handler_wrapper = 0x40002f4c
                0x0000000040002f58                lld_llcp_tx_cfm_handler = 0x40002f58
                0x0000000040002f64                lld_per_adv_end_ind_handler = 0x40002f64
                0x0000000040002f70                lld_per_adv_rep_ind_handler = 0x40002f70
                0x0000000040002f7c                lld_per_adv_rx_end_ind_handler = 0x40002f7c
                0x0000000040002f88                lld_phy_coded_500k_get = 0x40002f88
                0x0000000040002f94                lld_phy_upd_cfm_handler = 0x40002f94
                0x0000000040002fa0                lld_scan_end_ind_handler = 0x40002fa0
                0x0000000040002fac                lld_scan_req_ind_handler = 0x40002fac
                0x0000000040002fb8                lld_sync_start_req_handler = 0x40002fb8
                0x0000000040002fc4                lld_test_end_ind_handler = 0x40002fc4
                0x0000000040002fd0                lld_update_rxbuf_handler = 0x40002fd0
                0x0000000040002fdc                llm_ch_map_update_ind_handler = 0x40002fdc
                0x0000000040002fe8                llm_hci_command_handler_wrapper = 0x40002fe8
                0x0000000040002ff4                llm_scan_period_to_handler = 0x40002ff4
                0x0000000040003000                r_Add2SelfBigHex256 = 0x40003000
                0x000000004000300c                r_AddBigHex256 = 0x4000300c
                0x0000000040003018                r_AddBigHexModP256 = 0x40003018
                0x0000000040003024                r_AddP256 = 0x40003024
                0x0000000040003030                r_AddPdiv2_256 = 0x40003030
                0x000000004000303c                r_GF_Jacobian_Point_Addition256 = 0x4000303c
                0x0000000040003048                r_GF_Jacobian_Point_Double256 = 0x40003048
                0x0000000040003054                r_GF_Point_Jacobian_To_Affine256 = 0x40003054
                0x0000000040003060                r_MultiplyBigHexByUint32_256 = 0x40003060
                0x000000004000306c                r_MultiplyBigHexModP256 = 0x4000306c
                0x0000000040003078                r_MultiplyByU16ModP256 = 0x40003078
                0x0000000040003084                r_SubtractBigHex256 = 0x40003084
                0x0000000040003090                r_SubtractBigHexMod256 = 0x40003090
                0x000000004000309c                r_SubtractBigHexUint32_256 = 0x4000309c
                0x00000000400030a8                r_SubtractFromSelfBigHex256 = 0x400030a8
                0x00000000400030b4                r_SubtractFromSelfBigHexSign256 = 0x400030b4
                0x00000000400030c0                r_aes_alloc = 0x400030c0
                0x00000000400030cc                r_aes_ccm_continue = 0x400030cc
                0x00000000400030d8                r_aes_ccm_process_e = 0x400030d8
                0x00000000400030e4                r_aes_ccm_xor_128_lsb = 0x400030e4
                0x00000000400030f0                r_aes_ccm_xor_128_msb = 0x400030f0
                0x00000000400030fc                r_aes_cmac_continue = 0x400030fc
                0x0000000040003108                r_aes_cmac_start = 0x40003108
                0x0000000040003114                r_aes_k1_continue = 0x40003114
                0x0000000040003120                r_aes_k2_continue = 0x40003120
                0x000000004000312c                r_aes_k3_continue = 0x4000312c
                0x0000000040003138                r_aes_k4_continue = 0x40003138
                0x0000000040003144                r_aes_shift_left_128 = 0x40003144
                0x0000000040003150                r_aes_start = 0x40003150
                0x000000004000315c                r_aes_xor_128 = 0x4000315c
                0x0000000040003168                r_assert_err = 0x40003168
                0x0000000040003174                r_assert_param = 0x40003174
                0x0000000040003180                r_assert_warn = 0x40003180
                0x000000004000318c                r_bigHexInversion256 = 0x4000318c
                0x0000000040003198                r_ble_sw_cca_check_isr = 0x40003198
                0x00000000400031a4                r_ble_util_buf_acl_tx_alloc = 0x400031a4
                0x00000000400031b0                r_ble_util_buf_acl_tx_elt_get = 0x400031b0
                0x00000000400031bc                r_ble_util_buf_acl_tx_free = 0x400031bc
                0x00000000400031c8                r_ble_util_buf_acl_tx_free_in_isr = 0x400031c8
                0x00000000400031d4                r_ble_util_buf_adv_tx_alloc = 0x400031d4
                0x00000000400031e0                r_ble_util_buf_adv_tx_free = 0x400031e0
                0x00000000400031ec                r_ble_util_buf_adv_tx_free_in_isr = 0x400031ec
                0x00000000400031f8                r_ble_util_buf_env_deinit = 0x400031f8
                0x0000000040003204                r_ble_util_buf_env_init = 0x40003204
                0x0000000040003210                r_ble_util_buf_get_rx_buf_nb = 0x40003210
                0x000000004000321c                r_ble_util_buf_get_rx_buf_size = 0x4000321c
                0x0000000040003228                r_ble_util_buf_llcp_tx_alloc = 0x40003228
                0x0000000040003234                r_ble_util_buf_llcp_tx_free = 0x40003234
                0x0000000040003240                r_ble_util_buf_rx_alloc = 0x40003240
                0x000000004000324c                r_ble_util_buf_rx_alloc_in_isr = 0x4000324c
                0x0000000040003258                r_ble_util_buf_rx_free = 0x40003258
                0x0000000040003264                r_ble_util_buf_rx_free_in_isr = 0x40003264
                0x0000000040003270                r_ble_util_buf_set_rx_buf_nb = 0x40003270
                0x000000004000327c                r_ble_util_buf_set_rx_buf_size = 0x4000327c
                0x0000000040003288                r_ble_util_data_rx_buf_reset = 0x40003288
                0x0000000040003294                r_bt_bb_get_intr_mask = 0x40003294
                0x00000000400032a0                r_bt_bb_intr_clear = 0x400032a0
                0x00000000400032ac                r_bt_bb_intr_mask_set = 0x400032ac
                0x00000000400032b8                r_bt_bb_isr = 0x400032b8
                0x00000000400032c4                r_bt_rf_coex_cfg_set = 0x400032c4
                0x00000000400032d0                r_bt_rf_coex_conn_dynamic_pti_en_get = 0x400032d0
                0x00000000400032dc                r_bt_rf_coex_conn_phy_coded_data_time_limit_en_get = 0x400032dc
                0x00000000400032e8                r_bt_rf_coex_ext_adv_dynamic_pti_en_get = 0x400032e8
                0x00000000400032f4                r_bt_rf_coex_ext_scan_dynamic_pti_en_get = 0x400032f4
                0x0000000040003300                r_bt_rf_coex_legacy_adv_dynamic_pti_en_get = 0x40003300
                0x000000004000330c                r_bt_rf_coex_per_adv_dynamic_pti_en_get = 0x4000330c
                0x0000000040003318                r_bt_rf_coex_pti_table_get = 0x40003318
                0x0000000040003324                r_bt_rf_coex_st_param_get = 0x40003324
                0x0000000040003330                r_bt_rf_coex_st_param_set = 0x40003330
                0x000000004000333c                r_bt_rf_coex_sync_scan_dynamic_pti_en_get = 0x4000333c
                0x0000000040003348                r_bt_rma_apply_rule_cs_fmt = 0x40003348
                0x0000000040003354                r_bt_rma_apply_rule_cs_idx = 0x40003354
                0x0000000040003360                r_bt_rma_configure = 0x40003360
                0x000000004000336c                r_bt_rma_deregister_rule_cs_fmt = 0x4000336c
                0x0000000040003378                r_bt_rma_deregister_rule_cs_idx = 0x40003378
                0x0000000040003384                r_bt_rma_get_ant_by_act = 0x40003384
                0x0000000040003390                r_bt_rma_init = 0x40003390
                0x000000004000339c                r_bt_rma_register_rule_cs_fmt = 0x4000339c
                0x00000000400033a8                r_bt_rma_register_rule_cs_idx = 0x400033a8
                0x00000000400033b4                r_bt_rtp_apply_rule_cs_fmt = 0x400033b4
                0x00000000400033c0                r_bt_rtp_apply_rule_cs_idx = 0x400033c0
                0x00000000400033cc                r_bt_rtp_deregister_rule_cs_fmt = 0x400033cc
                0x00000000400033d8                r_bt_rtp_deregister_rule_cs_idx = 0x400033d8
                0x00000000400033e4                r_bt_rtp_get_txpwr_idx_by_act = 0x400033e4
                0x00000000400033f0                r_bt_rtp_init = 0x400033f0
                0x00000000400033fc                r_bt_rtp_register_rule_cs_fmt = 0x400033fc
                0x0000000040003408                r_bt_rtp_register_rule_cs_idx = 0x40003408
                0x0000000040003414                r_btdm_isr = 0x40003414
                0x0000000040003420                r_btdm_task_post = 0x40003420
                0x000000004000342c                r_btdm_task_post_from_isr = 0x4000342c
                0x0000000040003438                r_btdm_task_recycle = 0x40003438
                0x0000000040003444                r_cali_phase_match_p = 0x40003444
                0x0000000040003450                r_cmp_abs_time = 0x40003450
                0x000000004000345c                r_cmp_dest_id = 0x4000345c
                0x0000000040003468                r_cmp_timer_id = 0x40003468
                0x0000000040003474                r_co_bdaddr_compare = 0x40003474
                0x0000000040003480                r_co_ble_pkt_dur_in_us = 0x40003480
                0x000000004000348c                r_co_list_extract = 0x4000348c
                0x0000000040003498                r_co_list_extract_after = 0x40003498
                0x00000000400034a4                r_co_list_extract_sublist = 0x400034a4
                0x00000000400034b0                r_co_list_find = 0x400034b0
                0x00000000400034bc                r_co_list_init = 0x400034bc
                0x00000000400034c8                r_co_list_insert_after = 0x400034c8
                0x00000000400034d4                r_co_list_insert_before = 0x400034d4
                0x00000000400034e0                r_co_list_merge = 0x400034e0
                0x00000000400034ec                r_co_list_pool_init = 0x400034ec
                0x00000000400034f8                r_co_list_pop_front = 0x400034f8
                0x0000000040003504                r_co_list_push_back = 0x40003504
                0x0000000040003510                r_co_list_push_back_sublist = 0x40003510
                0x000000004000351c                r_co_list_push_front = 0x4000351c
                0x0000000040003528                r_co_list_size = 0x40003528
                0x0000000040003534                r_co_nb_good_le_channels = 0x40003534
                0x0000000040003540                r_co_util_pack = 0x40003540
                0x000000004000354c                r_co_util_read_array_size = 0x4000354c
                0x0000000040003558                r_co_util_unpack = 0x40003558
                0x0000000040003564                r_dbg_env_deinit = 0x40003564
                0x0000000040003570                r_dbg_env_init = 0x40003570
                0x000000004000357c                r_dbg_platform_reset_complete = 0x4000357c
                0x0000000040003588                r_dl_upd_proc_start = 0x40003588
                0x0000000040003594                r_dump_data = 0x40003594
                0x00000000400035a0                r_ecc_abort_key256_generation = 0x400035a0
                0x00000000400035ac                r_ecc_gen_new_public_key = 0x400035ac
                0x00000000400035b8                r_ecc_gen_new_secret_key = 0x400035b8
                0x00000000400035c4                r_ecc_generate_key256 = 0x400035c4
                0x00000000400035d0                r_ecc_get_debug_Keys = 0x400035d0
                0x00000000400035dc                r_ecc_init = 0x400035dc
                0x00000000400035e8                r_ecc_is_valid_point = 0x400035e8
                0x00000000400035f4                r_ecc_multiplication_event_handler = 0x400035f4
                0x0000000040003600                r_ecc_point_multiplication_win_256 = 0x40003600
                0x000000004000360c                r_emi_alloc_em_mapping_by_offset = 0x4000360c
                0x0000000040003618                r_emi_base_reg_lut_show = 0x40003618
                0x0000000040003624                r_emi_em_base_reg_show = 0x40003624
                0x0000000040003630                r_emi_free_em_mapping_by_offset = 0x40003630
                0x000000004000363c                r_emi_get_em_mapping_idx_by_offset = 0x4000363c
                0x0000000040003648                r_emi_get_mem_addr_by_offset = 0x40003648
                0x0000000040003654                r_emi_overwrite_em_mapping_by_offset = 0x40003654
                0x0000000040003660                r_esp_vendor_hci_command_handler = 0x40003660
                0x000000004000366c                r_get_stack_usage = 0x4000366c
                0x0000000040003678                r_h4tl_acl_hdr_rx_evt_handler = 0x40003678
                0x0000000040003684                r_h4tl_cmd_hdr_rx_evt_handler = 0x40003684
                0x0000000040003690                r_h4tl_cmd_pld_rx_evt_handler = 0x40003690
                0x000000004000369c                r_h4tl_eif_io_event_post = 0x4000369c
                0x00000000400036a8                r_h4tl_eif_register = 0x400036a8
                0x00000000400036b4                r_h4tl_init = 0x400036b4
                0x00000000400036c0                r_h4tl_out_of_sync = 0x400036c0
                0x00000000400036cc                r_h4tl_out_of_sync_check = 0x400036cc
                0x00000000400036d8                r_h4tl_read_hdr = 0x400036d8
                0x00000000400036e4                r_h4tl_read_next_out_of_sync = 0x400036e4
                0x00000000400036f0                r_h4tl_read_payl = 0x400036f0
                0x00000000400036fc                r_h4tl_read_start = 0x400036fc
                0x0000000040003708                r_h4tl_rx_acl_hdr_extract = 0x40003708
                0x0000000040003714                r_h4tl_rx_cmd_hdr_extract = 0x40003714
                0x0000000040003720                r_h4tl_rx_done = 0x40003720
                0x000000004000372c                r_h4tl_start = 0x4000372c
                0x0000000040003738                r_h4tl_stop = 0x40003738
                0x0000000040003744                r_h4tl_tx_done = 0x40003744
                0x0000000040003750                r_h4tl_tx_evt_handler = 0x40003750
                0x000000004000375c                r_h4tl_write = 0x4000375c
                0x0000000040003768                r_hci_acl_tx_data_alloc = 0x40003768
                0x0000000040003774                r_hci_acl_tx_data_received = 0x40003774
                0x0000000040003780                r_hci_basic_cmd_send_2_controller = 0x40003780
                0x000000004000378c                r_hci_ble_adv_report_filter_check = 0x4000378c
                0x0000000040003798                r_hci_ble_adv_report_tx_check = 0x40003798
                0x00000000400037a4                r_hci_ble_conhdl_register = 0x400037a4
                0x00000000400037b0                r_hci_ble_conhdl_unregister = 0x400037b0
                0x00000000400037bc                r_hci_build_acl_data = 0x400037bc
                0x00000000400037c8                r_hci_build_cc_evt = 0x400037c8
                0x00000000400037d4                r_hci_build_cs_evt = 0x400037d4
                0x00000000400037e0                r_hci_build_evt = 0x400037e0
                0x00000000400037ec                r_hci_build_le_evt = 0x400037ec
                0x00000000400037f8                r_hci_cmd_get_max_param_size = 0x400037f8
                0x0000000040003804                r_hci_cmd_received = 0x40003804
                0x0000000040003810                r_hci_cmd_reject = 0x40003810
                0x000000004000381c                r_hci_evt_mask_check = 0x4000381c
                0x0000000040003828                r_hci_evt_mask_set = 0x40003828
                0x0000000040003834                r_hci_fc_acl_buf_size_set = 0x40003834
                0x0000000040003840                r_hci_fc_acl_en = 0x40003840
                0x000000004000384c                r_hci_fc_acl_packet_sent = 0x4000384c
                0x0000000040003858                r_hci_fc_check_host_available_nb_acl_packets = 0x40003858
                0x0000000040003864                r_hci_fc_host_nb_acl_pkts_complete = 0x40003864
                0x0000000040003870                r_hci_fc_init = 0x40003870
                0x000000004000387c                r_hci_look_for_cmd_desc = 0x4000387c
                0x0000000040003888                r_hci_look_for_evt_desc = 0x40003888
                0x0000000040003894                r_hci_look_for_le_evt_desc = 0x40003894
                0x00000000400038a0                r_hci_look_for_le_evt_desc_esp = 0x400038a0
                0x00000000400038ac                r_hci_pack_bytes = 0x400038ac
                0x00000000400038b8                r_hci_register_vendor_desc_tab = 0x400038b8
                0x00000000400038c4                r_hci_send_2_controller = 0x400038c4
                0x00000000400038d0                r_hci_send_2_host = 0x400038d0
                0x00000000400038dc                r_hci_tl_c2h_data_flow_on = 0x400038dc
                0x00000000400038e8                r_hci_tl_cmd_hdr_rx_evt_handler = 0x400038e8
                0x00000000400038f4                r_hci_tl_cmd_pld_rx_evt_handler = 0x400038f4
                0x0000000040003900                r_hci_tl_get_pkt = 0x40003900
                0x000000004000390c                r_hci_tl_hci_pkt_handler = 0x4000390c
                0x0000000040003918                r_hci_tl_hci_tx_done_evt_handler = 0x40003918
                0x0000000040003924                r_hci_tl_inc_nb_h2c_cmd_pkts = 0x40003924
                0x0000000040003930                r_hci_tl_save_pkt = 0x40003930
                0x000000004000393c                r_hci_tl_send = 0x4000393c
                0x0000000040003948                r_hci_tx_done = 0x40003948
                0x0000000040003954                r_hci_tx_start = 0x40003954
                0x0000000040003960                r_hci_tx_trigger = 0x40003960
                0x000000004000396c                r_isValidSecretKey_256 = 0x4000396c
                0x0000000040003978                r_ke_check_malloc = 0x40003978
                0x0000000040003984                r_ke_event_callback_set = 0x40003984
                0x0000000040003990                r_ke_event_clear = 0x40003990
                0x000000004000399c                r_ke_event_flush = 0x4000399c
                0x00000000400039a8                r_ke_event_get = 0x400039a8
                0x00000000400039b4                r_ke_event_get_all = 0x400039b4
                0x00000000400039c0                r_ke_event_init = 0x400039c0
                0x00000000400039cc                r_ke_event_schedule = 0x400039cc
                0x00000000400039d8                r_ke_event_set = 0x400039d8
                0x00000000400039e4                r_ke_flush = 0x400039e4
                0x00000000400039f0                r_ke_free = 0x400039f0
                0x00000000400039fc                r_ke_handler_search = 0x400039fc
                0x0000000040003a08                r_ke_init = 0x40003a08
                0x0000000040003a14                r_ke_is_free = 0x40003a14
                0x0000000040003a20                r_ke_malloc = 0x40003a20
                0x0000000040003a2c                r_ke_mem_init = 0x40003a2c
                0x0000000040003a38                r_ke_mem_is_empty = 0x40003a38
                0x0000000040003a44                r_ke_mem_is_in_heap = 0x40003a44
                0x0000000040003a50                r_ke_msg_alloc = 0x40003a50
                0x0000000040003a5c                r_ke_msg_dest_id_get = 0x40003a5c
                0x0000000040003a68                r_ke_msg_discard = 0x40003a68
                0x0000000040003a74                r_ke_msg_forward = 0x40003a74
                0x0000000040003a80                r_ke_msg_forward_new_id = 0x40003a80
                0x0000000040003a8c                r_ke_msg_free = 0x40003a8c
                0x0000000040003a98                r_ke_msg_in_queue = 0x40003a98
                0x0000000040003aa4                r_ke_msg_save = 0x40003aa4
                0x0000000040003ab0                r_ke_msg_send = 0x40003ab0
                0x0000000040003abc                r_ke_msg_send_basic = 0x40003abc
                0x0000000040003ac8                r_ke_msg_src_id_get = 0x40003ac8
                0x0000000040003ad4                r_ke_queue_extract = 0x40003ad4
                0x0000000040003ae0                r_ke_queue_insert = 0x40003ae0
                0x0000000040003aec                r_ke_sleep_check = 0x40003aec
                0x0000000040003af8                r_ke_state_get = 0x40003af8
                0x0000000040003b04                r_ke_state_set = 0x40003b04
                0x0000000040003b10                r_ke_task_check = 0x40003b10
                0x0000000040003b1c                r_ke_task_create = 0x40003b1c
                0x0000000040003b28                r_ke_task_delete = 0x40003b28
                0x0000000040003b34                r_ke_task_handler_get = 0x40003b34
                0x0000000040003b40                r_ke_task_init = 0x40003b40
                0x0000000040003b4c                r_ke_task_msg_flush = 0x40003b4c
                0x0000000040003b58                r_ke_task_saved_update = 0x40003b58
                0x0000000040003b64                r_ke_task_schedule = 0x40003b64
                0x0000000040003b70                r_ke_time = 0x40003b70
                0x0000000040003b7c                r_ke_time_cmp = 0x40003b7c
                0x0000000040003b88                r_ke_time_past = 0x40003b88
                0x0000000040003b94                r_ke_timer_active = 0x40003b94
                0x0000000040003ba0                r_ke_timer_adjust_all = 0x40003ba0
                0x0000000040003bac                r_ke_timer_clear = 0x40003bac
                0x0000000040003bb8                r_ke_timer_init = 0x40003bb8
                0x0000000040003bc4                r_ke_timer_schedule = 0x40003bc4
                0x0000000040003bd0                r_ke_timer_set = 0x40003bd0
                0x0000000040003bdc                r_led_init = 0x40003bdc
                0x0000000040003be8                r_led_set_all = 0x40003be8
                0x0000000040003bf4                r_llc_aes_res_cb = 0x40003bf4
                0x0000000040003c00                r_llc_ch_map_up_proc_err_cb = 0x40003c00
                0x0000000040003c0c                r_llc_cleanup = 0x40003c0c
                0x0000000040003c18                r_llc_cmd_cmp_send = 0x40003c18
                0x0000000040003c24                r_llc_cmd_stat_send = 0x40003c24
                0x0000000040003c30                r_llc_con_move_cbk = 0x40003c30
                0x0000000040003c3c                r_llc_con_plan_set_update = 0x40003c3c
                0x0000000040003c48                r_llc_con_upd_param_in_range = 0x40003c48
                0x0000000040003c54                r_llc_disconnect = 0x40003c54
                0x0000000040003c60                r_llc_disconnect_end = 0x40003c60
                0x0000000040003c6c                r_llc_disconnect_proc_continue = 0x40003c6c
                0x0000000040003c78                r_llc_disconnect_proc_err_cb = 0x40003c78
                0x0000000040003c84                r_llc_dl_chg_check = 0x40003c84
                0x0000000040003c90                r_llc_dle_proc_err_cb = 0x40003c90
                0x0000000040003c9c                r_llc_feats_exch_proc_err_cb = 0x40003c9c
                0x0000000040003ca8                r_llc_hci_cmd_handler_tab_p_get = 0x40003ca8
                0x0000000040003cb4                r_llc_hci_command_handler = 0x40003cb4
                0x0000000040003cc0                r_llc_hci_con_param_req_evt_send = 0x40003cc0
                0x0000000040003ccc                r_llc_hci_con_upd_info_send = 0x40003ccc
                0x0000000040003cd8                r_llc_hci_disconnected_dis = 0x40003cd8
                0x0000000040003ce4                r_llc_hci_dl_upd_info_send = 0x40003ce4
                0x0000000040003cf0                r_llc_hci_enc_evt_send = 0x40003cf0
                0x0000000040003cfc                r_llc_hci_feats_info_send = 0x40003cfc
                0x0000000040003d08                r_llc_hci_le_phy_upd_cmp_evt_send = 0x40003d08
                0x0000000040003d14                r_llc_hci_ltk_request_evt_send = 0x40003d14
                0x0000000040003d20                r_llc_hci_nb_cmp_pkts_evt_send = 0x40003d20
                0x0000000040003d2c                r_llc_hci_version_info_send = 0x40003d2c
                0x0000000040003d38                r_llc_init_term_proc = 0x40003d38
                0x0000000040003d44                r_llc_iv_skd_rand_gen = 0x40003d44
                0x0000000040003d50                r_llc_le_ping_proc_continue = 0x40003d50
                0x0000000040003d5c                r_llc_le_ping_proc_err_cb = 0x40003d5c
                0x0000000040003d68                r_llc_le_ping_restart = 0x40003d68
                0x0000000040003d74                r_llc_le_ping_set = 0x40003d74
                0x0000000040003d80                r_llc_ll_pause_enc_rsp_ack_handler = 0x40003d80
                0x0000000040003d8c                r_llc_ll_reject_ind_ack_handler = 0x40003d8c
                0x0000000040003d98                r_llc_ll_reject_ind_pdu_send = 0x40003d98
                0x0000000040003da4                r_llc_ll_start_enc_rsp_ack_handler = 0x40003da4
                0x0000000040003db0                r_llc_ll_terminate_ind_ack = 0x40003db0
                0x0000000040003dbc                r_llc_ll_unknown_ind_handler = 0x40003dbc
                0x0000000040003dc8                r_llc_llcp_send = 0x40003dc8
                0x0000000040003dd4                r_llc_llcp_state_set = 0x40003dd4
                0x0000000040003de0                r_llc_llcp_trans_timer_set = 0x40003de0
                0x0000000040003dec                r_llc_llcp_tx_check = 0x40003dec
                0x0000000040003df8                r_llc_loc_ch_map_proc_continue = 0x40003df8
                0x0000000040003e04                r_llc_loc_con_upd_proc_continue = 0x40003e04
                0x0000000040003e10                r_llc_loc_con_upd_proc_err_cb = 0x40003e10
                0x0000000040003e1c                r_llc_loc_dl_upd_proc_continue = 0x40003e1c
                0x0000000040003e28                r_llc_loc_encrypt_proc_continue = 0x40003e28
                0x0000000040003e34                r_llc_loc_encrypt_proc_err_cb = 0x40003e34
                0x0000000040003e40                r_llc_loc_feats_exch_proc_continue = 0x40003e40
                0x0000000040003e4c                r_llc_loc_phy_upd_proc_continue = 0x40003e4c
                0x0000000040003e58                r_llc_loc_phy_upd_proc_err_cb = 0x40003e58
                0x0000000040003e64                r_llc_msg_handler_tab_p_get = 0x40003e64
                0x0000000040003e70                r_llc_pref_param_compute = 0x40003e70
                0x0000000040003e7c                r_llc_proc_collision_check = 0x40003e7c
                0x0000000040003e88                r_llc_proc_err_ind = 0x40003e88
                0x0000000040003e94                r_llc_proc_get = 0x40003e94
                0x0000000040003ea0                r_llc_proc_id_get = 0x40003ea0
                0x0000000040003eac                r_llc_proc_reg = 0x40003eac
                0x0000000040003eb8                r_llc_proc_state_get = 0x40003eb8
                0x0000000040003ec4                r_llc_proc_state_set = 0x40003ec4
                0x0000000040003ed0                r_llc_proc_timer_pause_set = 0x40003ed0
                0x0000000040003edc                r_llc_proc_timer_set = 0x40003edc
                0x0000000040003ee8                r_llc_proc_unreg = 0x40003ee8
                0x0000000040003ef4                r_llc_rem_ch_map_proc_continue = 0x40003ef4
                0x0000000040003f00                r_llc_rem_con_upd_proc_continue = 0x40003f00
                0x0000000040003f0c                r_llc_rem_con_upd_proc_err_cb = 0x40003f0c
                0x0000000040003f18                r_llc_rem_dl_upd_proc = 0x40003f18
                0x0000000040003f24                r_llc_rem_encrypt_proc_continue = 0x40003f24
                0x0000000040003f30                r_llc_rem_encrypt_proc_err_cb = 0x40003f30
                0x0000000040003f3c                r_llc_rem_phy_upd_proc_continue = 0x40003f3c
                0x0000000040003f48                r_llc_rem_phy_upd_proc_err_cb = 0x40003f48
                0x0000000040003f54                r_llc_role_get = 0x40003f54
                0x0000000040003f60                r_llc_sk_gen = 0x40003f60
                0x0000000040003f6c                r_llc_start = 0x40003f6c
                0x0000000040003f78                r_llc_stop = 0x40003f78
                0x0000000040003f84                r_llc_ver_exch_loc_proc_continue = 0x40003f84
                0x0000000040003f90                r_llc_ver_proc_err_cb = 0x40003f90
                0x0000000040003f9c                r_llcp_pdu_handler_tab_p_get = 0x40003f9c
                0x0000000040003fa8                r_lld_aa_gen = 0x40003fa8
                0x0000000040003fb4                r_lld_adv_adv_data_set = 0x40003fb4
                0x0000000040003fc0                r_lld_adv_adv_data_update = 0x40003fc0
                0x0000000040003fcc                r_lld_adv_aux_ch_idx_set = 0x40003fcc
                0x0000000040003fd8                r_lld_adv_aux_evt_canceled_cbk = 0x40003fd8
                0x0000000040003fe4                r_lld_adv_aux_evt_start_cbk = 0x40003fe4
                0x0000000040003ff0                r_lld_adv_coex_check_ext_adv_synced = 0x40003ff0
                0x0000000040003ffc                r_lld_adv_coex_env_reset = 0x40003ffc
                0x0000000040004008                r_lld_adv_duration_update = 0x40004008
                0x0000000040004014                r_lld_adv_dynamic_pti_process = 0x40004014
                0x0000000040004020                r_lld_adv_end = 0x40004020
                0x000000004000402c                r_lld_adv_evt_canceled_cbk = 0x4000402c
                0x0000000040004038                r_lld_adv_evt_start_cbk = 0x40004038
                0x0000000040004044                r_lld_adv_ext_chain_construct = 0x40004044
                0x0000000040004050                r_lld_adv_ext_pkt_prepare = 0x40004050
                0x000000004000405c                r_lld_adv_frm_cbk = 0x4000405c
                0x0000000040004068                r_lld_adv_frm_isr = 0x40004068
                0x0000000040004074                r_lld_adv_frm_skip_isr = 0x40004074
                0x0000000040004080                r_lld_adv_init = 0x40004080
                0x000000004000408c                r_lld_adv_pkt_rx = 0x4000408c
                0x0000000040004098                r_lld_adv_pkt_rx_connect_ind = 0x40004098
                0x00000000400040a4                r_lld_adv_pkt_rx_send_scan_req_evt = 0x400040a4
                0x00000000400040b0                r_lld_adv_rand_addr_update = 0x400040b0
                0x00000000400040bc                r_lld_adv_restart = 0x400040bc
                0x00000000400040c8                r_lld_adv_scan_rsp_data_set = 0x400040c8
                0x00000000400040d4                r_lld_adv_scan_rsp_data_update = 0x400040d4
                0x00000000400040e0                r_lld_adv_set_tx_power = 0x400040e0
                0x00000000400040ec                r_lld_adv_start = 0x400040ec
                0x00000000400040f8                r_lld_adv_stop = 0x400040f8
                0x0000000040004104                r_lld_adv_sync_info_set = 0x40004104
                0x0000000040004110                r_lld_adv_sync_info_update = 0x40004110
                0x000000004000411c                r_lld_calc_aux_rx = 0x4000411c
                0x0000000040004128                r_lld_cca_alloc = 0x40004128
                0x0000000040004134                r_lld_cca_data_reset = 0x40004134
                0x0000000040004140                r_lld_cca_free = 0x40004140
                0x000000004000414c                r_lld_ch_assess_data_get = 0x4000414c
                0x0000000040004158                r_lld_ch_idx_get = 0x40004158
                0x0000000040004164                r_lld_ch_map_set = 0x40004164
                0x0000000040004170                r_lld_channel_assess = 0x40004170
                0x000000004000417c                r_lld_con_activity_act_offset_compute = 0x4000417c
                0x0000000040004188                r_lld_con_activity_offset_compute = 0x40004188
                0x0000000040004194                r_lld_con_ch_map_update = 0x40004194
                0x00000000400041a0                r_lld_con_cleanup = 0x400041a0
                0x00000000400041ac                r_lld_con_current_tx_power_get = 0x400041ac
                0x00000000400041b8                r_lld_con_data_flow_set = 0x400041b8
                0x00000000400041c4                r_lld_con_data_len_update = 0x400041c4
                0x00000000400041d0                r_lld_con_data_tx = 0x400041d0
                0x00000000400041dc                r_lld_con_enc_key_load = 0x400041dc
                0x00000000400041e8                r_lld_con_event_counter_get = 0x400041e8
                0x00000000400041f4                r_lld_con_evt_canceled_cbk = 0x400041f4
                0x0000000040004200                r_lld_con_evt_duration_min_get = 0x40004200
                0x000000004000420c                r_lld_con_evt_max_eff_time_cal = 0x4000420c
                0x0000000040004218                r_lld_con_evt_sd_evt_time_get = 0x40004218
                0x0000000040004224                r_lld_con_evt_start_cbk = 0x40004224
                0x0000000040004230                r_lld_con_evt_time_update = 0x40004230
                0x000000004000423c                r_lld_con_free_all_tx_buf = 0x4000423c
                0x0000000040004248                r_lld_con_frm_cbk = 0x40004248
                0x0000000040004254                r_lld_con_frm_isr = 0x40004254
                0x0000000040004260                r_lld_con_frm_skip_isr = 0x40004260
                0x000000004000426c                r_lld_con_init = 0x4000426c
                0x0000000040004278                r_lld_con_llcp_tx = 0x40004278
                0x0000000040004284                r_lld_con_max_lat_calc = 0x40004284
                0x0000000040004290                r_lld_con_offset_get = 0x40004290
                0x000000004000429c                r_lld_con_param_update = 0x4000429c
                0x00000000400042a8                r_lld_con_phys_update = 0x400042a8
                0x00000000400042b4                r_lld_con_pref_slave_evt_dur_set = 0x400042b4
                0x00000000400042c0                r_lld_con_pref_slave_latency_set = 0x400042c0
                0x00000000400042cc                r_lld_con_rssi_get = 0x400042cc
                0x00000000400042d8                r_lld_con_rx = 0x400042d8
                0x00000000400042e4                r_lld_con_rx_channel_assess = 0x400042e4
                0x00000000400042f0                r_lld_con_rx_enc = 0x400042f0
                0x00000000400042fc                r_lld_con_rx_isr = 0x400042fc
                0x0000000040004308                r_lld_con_rx_link_info_check = 0x40004308
                0x0000000040004314                r_lld_con_rx_llcp_check = 0x40004314
                0x0000000040004320                r_lld_con_rx_sync_time_update = 0x40004320
                0x000000004000432c                r_lld_con_sched = 0x4000432c
                0x0000000040004338                r_lld_con_set_tx_power = 0x40004338
                0x0000000040004344                r_lld_con_start = 0x40004344
                0x0000000040004350                r_lld_con_stop = 0x40004350
                0x000000004000435c                r_lld_con_tx = 0x4000435c
                0x0000000040004368                r_lld_con_tx_enc = 0x40004368
                0x0000000040004374                r_lld_con_tx_isr = 0x40004374
                0x0000000040004380                r_lld_con_tx_len_update = 0x40004380
                0x000000004000438c                r_lld_con_tx_len_update_for_intv = 0x4000438c
                0x0000000040004398                r_lld_con_tx_len_update_for_rate = 0x40004398
                0x00000000400043a4                r_lld_con_tx_prog = 0x400043a4
                0x00000000400043b0                r_lld_conn_dynamic_pti_process = 0x400043b0
                0x00000000400043bc                r_lld_continue_scan_rx_isr_end_process = 0x400043bc
                0x00000000400043c8                r_lld_ext_scan_dynamic_pti_process = 0x400043c8
                0x00000000400043d4                r_lld_hw_cca_end_isr = 0x400043d4
                0x00000000400043e0                r_lld_hw_cca_evt_handler = 0x400043e0
                0x00000000400043ec                r_lld_hw_cca_isr = 0x400043ec
                0x00000000400043f8                r_lld_init_cal_anchor_point = 0x400043f8
                0x0000000040004404                r_lld_init_compute_winoffset = 0x40004404
                0x0000000040004410                r_lld_init_connect_req_pack = 0x40004410
                0x000000004000441c                r_lld_init_end = 0x4000441c
                0x0000000040004428                r_lld_init_evt_canceled_cbk = 0x40004428
                0x0000000040004434                r_lld_init_evt_start_cbk = 0x40004434
                0x0000000040004440                r_lld_init_frm_cbk = 0x40004440
                0x000000004000444c                r_lld_init_frm_eof_isr = 0x4000444c
                0x0000000040004458                r_lld_init_frm_skip_isr = 0x40004458
                0x0000000040004464                r_lld_init_init = 0x40004464
                0x0000000040004470                r_lld_init_process_pkt_rx = 0x40004470
                0x000000004000447c                r_lld_init_process_pkt_rx_adv_ext_ind = 0x4000447c
                0x0000000040004488                r_lld_init_process_pkt_rx_adv_ind_or_direct_ind = 0x40004488
                0x0000000040004494                r_lld_init_process_pkt_rx_aux_connect_rsp = 0x40004494
                0x00000000400044a0                r_lld_init_process_pkt_tx = 0x400044a0
                0x00000000400044ac                r_lld_init_process_pkt_tx_cal_con_timestamp = 0x400044ac
                0x00000000400044b8                r_lld_init_sched = 0x400044b8
                0x00000000400044c4                r_lld_init_set_tx_power = 0x400044c4
                0x00000000400044d0                r_lld_init_start = 0x400044d0
                0x00000000400044dc                r_lld_init_stop = 0x400044dc
                0x00000000400044e8                r_lld_instant_proc_end = 0x400044e8
                0x00000000400044f4                r_lld_llcp_rx_ind_handler = 0x400044f4
                0x0000000040004500                r_lld_per_adv_ch_map_update = 0x40004500
                0x000000004000450c                r_lld_per_adv_chain_construct = 0x4000450c
                0x0000000040004518                r_lld_per_adv_cleanup = 0x40004518
                0x0000000040004524                r_lld_per_adv_coex_env_reset = 0x40004524
                0x0000000040004530                r_lld_per_adv_data_set = 0x40004530
                0x000000004000453c                r_lld_per_adv_data_update = 0x4000453c
                0x0000000040004548                r_lld_per_adv_dynamic_pti_process = 0x40004548
                0x0000000040004554                r_lld_per_adv_evt_canceled_cbk = 0x40004554
                0x0000000040004560                r_lld_per_adv_evt_start_cbk = 0x40004560
                0x000000004000456c                r_lld_per_adv_ext_pkt_prepare = 0x4000456c
                0x0000000040004578                r_lld_per_adv_frm_cbk = 0x40004578
                0x0000000040004584                r_lld_per_adv_frm_isr = 0x40004584
                0x0000000040004590                r_lld_per_adv_frm_skip_isr = 0x40004590
                0x000000004000459c                r_lld_per_adv_init = 0x4000459c
                0x00000000400045a8                r_lld_per_adv_init_info_get = 0x400045a8
                0x00000000400045b4                r_lld_per_adv_list_add = 0x400045b4
                0x00000000400045c0                r_lld_per_adv_list_rem = 0x400045c0
                0x00000000400045cc                r_lld_per_adv_sched = 0x400045cc
                0x00000000400045d8                r_lld_per_adv_set_tx_power = 0x400045d8
                0x00000000400045e4                r_lld_per_adv_start = 0x400045e4
                0x00000000400045f0                r_lld_per_adv_stop = 0x400045f0
                0x00000000400045fc                r_lld_per_adv_sync_info_get = 0x400045fc
                0x0000000040004608                r_lld_process_cca_data = 0x40004608
                0x0000000040004614                r_lld_ral_search = 0x40004614
                0x0000000040004620                r_lld_read_clock = 0x40004620
                0x000000004000462c                r_lld_res_list_add = 0x4000462c
                0x0000000040004638                r_lld_res_list_clear = 0x40004638
                0x0000000040004644                r_lld_res_list_is_empty = 0x40004644
                0x0000000040004650                r_lld_res_list_local_rpa_get = 0x40004650
                0x000000004000465c                r_lld_res_list_peer_rpa_get = 0x4000465c
                0x0000000040004668                r_lld_res_list_peer_update = 0x40004668
                0x0000000040004674                r_lld_res_list_priv_mode_update = 0x40004674
                0x0000000040004680                r_lld_res_list_rem = 0x40004680
                0x000000004000468c                r_lld_reset_reg = 0x4000468c
                0x0000000040004698                r_lld_rpa_renew = 0x40004698
                0x00000000400046a4                r_lld_rpa_renew_evt_canceled_cbk = 0x400046a4
                0x00000000400046b0                r_lld_rpa_renew_evt_start_cbk = 0x400046b0
                0x00000000400046bc                r_lld_rpa_renew_instant_cbk = 0x400046bc
                0x00000000400046c8                r_lld_rxdesc_check = 0x400046c8
                0x00000000400046d4                r_lld_rxdesc_free = 0x400046d4
                0x00000000400046e0                r_lld_scan_create_sync = 0x400046e0
                0x00000000400046ec                r_lld_scan_create_sync_cancel = 0x400046ec
                0x00000000400046f8                r_lld_scan_end = 0x400046f8
                0x0000000040004704                r_lld_scan_evt_canceled_cbk = 0x40004704
                0x0000000040004710                r_lld_scan_evt_start_cbk = 0x40004710
                0x000000004000471c                r_lld_scan_frm_cbk = 0x4000471c
                0x0000000040004728                r_lld_scan_frm_eof_isr = 0x40004728
                0x0000000040004734                r_lld_scan_frm_rx_isr = 0x40004734
                0x0000000040004740                r_lld_scan_frm_skip_isr = 0x40004740
                0x000000004000474c                r_lld_scan_init = 0x4000474c
                0x0000000040004758                r_lld_scan_params_update = 0x40004758
                0x0000000040004764                r_lld_scan_process_pkt_rx = 0x40004764
                0x0000000040004770                r_lld_scan_process_pkt_rx_adv_rep = 0x40004770
                0x000000004000477c                r_lld_scan_process_pkt_rx_aux_adv_ind = 0x4000477c
                0x0000000040004788                r_lld_scan_process_pkt_rx_aux_chain_ind = 0x40004788
                0x0000000040004794                r_lld_scan_process_pkt_rx_aux_scan_rsp = 0x40004794
                0x00000000400047a0                r_lld_scan_process_pkt_rx_ext_adv = 0x400047a0
                0x00000000400047ac                r_lld_scan_process_pkt_rx_ext_adv_ind = 0x400047ac
                0x00000000400047b8                r_lld_scan_process_pkt_rx_legacy_adv = 0x400047b8
                0x00000000400047c4                r_lld_scan_restart = 0x400047c4
                0x00000000400047d0                r_lld_scan_sched = 0x400047d0
                0x00000000400047dc                r_lld_scan_set_tx_power = 0x400047dc
                0x00000000400047e8                r_lld_scan_start = 0x400047e8
                0x00000000400047f4                r_lld_scan_stop = 0x400047f4
                0x0000000040004800                r_lld_scan_sync_accept = 0x40004800
                0x000000004000480c                r_lld_scan_sync_info_unpack = 0x4000480c
                0x0000000040004818                r_lld_scan_trunc_ind = 0x40004818
                0x0000000040004824                r_lld_sw_cca_evt_handler = 0x40004824
                0x0000000040004830                r_lld_sw_cca_isr = 0x40004830
                0x000000004000483c                r_lld_sync_ch_map_update = 0x4000483c
                0x0000000040004848                r_lld_sync_cleanup = 0x40004848
                0x0000000040004854                r_lld_sync_evt_canceled_cbk = 0x40004854
                0x0000000040004860                r_lld_sync_evt_start_cbk = 0x40004860
                0x000000004000486c                r_lld_sync_frm_cbk = 0x4000486c
                0x0000000040004878                r_lld_sync_frm_eof_isr = 0x40004878
                0x0000000040004884                r_lld_sync_frm_rx_isr = 0x40004884
                0x0000000040004890                r_lld_sync_frm_skip_isr = 0x40004890
                0x000000004000489c                r_lld_sync_init = 0x4000489c
                0x00000000400048a8                r_lld_sync_process_pkt_rx = 0x400048a8
                0x00000000400048b4                r_lld_sync_process_pkt_rx_aux_sync_ind = 0x400048b4
                0x00000000400048c0                r_lld_sync_process_pkt_rx_pkt_check = 0x400048c0
                0x00000000400048cc                r_lld_sync_scan_dynamic_pti_process = 0x400048cc
                0x00000000400048d8                r_lld_sync_sched = 0x400048d8
                0x00000000400048e4                r_lld_sync_start = 0x400048e4
                0x00000000400048f0                r_lld_sync_stop = 0x400048f0
                0x00000000400048fc                r_lld_sync_trunc_ind = 0x400048fc
                0x0000000040004908                r_lld_test_cleanup = 0x40004908
                0x0000000040004914                r_lld_test_evt_canceled_cbk = 0x40004914
                0x0000000040004920                r_lld_test_evt_start_cbk = 0x40004920
                0x000000004000492c                r_lld_test_freq2chnl = 0x4000492c
                0x0000000040004938                r_lld_test_frm_cbk = 0x40004938
                0x0000000040004944                r_lld_test_frm_isr = 0x40004944
                0x0000000040004950                r_lld_test_init = 0x40004950
                0x000000004000495c                r_lld_test_rx_isr = 0x4000495c
                0x0000000040004968                r_lld_test_set_tx_power = 0x40004968
                0x0000000040004974                r_lld_test_start = 0x40004974
                0x0000000040004980                r_lld_test_stop = 0x40004980
                0x000000004000498c                r_lld_update_rxbuf = 0x4000498c
                0x0000000040004998                r_lld_update_rxbuf_isr = 0x40004998
                0x00000000400049a4                r_lld_white_list_add = 0x400049a4
                0x00000000400049b0                r_lld_white_list_rem = 0x400049b0
                0x00000000400049bc                r_llm_activity_free_get = 0x400049bc
                0x00000000400049c8                r_llm_activity_free_set = 0x400049c8
                0x00000000400049d4                r_llm_activity_syncing_get = 0x400049d4
                0x00000000400049e0                r_llm_adv_con_len_check = 0x400049e0
                0x00000000400049ec                r_llm_adv_hdl_to_id = 0x400049ec
                0x00000000400049f8                r_llm_adv_rep_flow_control_check = 0x400049f8
                0x0000000040004a04                r_llm_adv_rep_flow_control_update = 0x40004a04
                0x0000000040004a10                r_llm_adv_reports_list_check = 0x40004a10
                0x0000000040004a1c                r_llm_adv_set_all_release = 0x40004a1c
                0x0000000040004a28                r_llm_adv_set_dft_params = 0x40004a28
                0x0000000040004a34                r_llm_adv_set_release = 0x40004a34
                0x0000000040004a40                r_llm_aes_res_cb = 0x40004a40
                0x0000000040004a4c                r_llm_ble_update_adv_flow_control = 0x40004a4c
                0x0000000040004a58                r_llm_ch_map_update = 0x40004a58
                0x0000000040004a64                r_llm_cmd_cmp_send = 0x40004a64
                0x0000000040004a70                r_llm_cmd_stat_send = 0x40004a70
                0x0000000040004a7c                r_llm_dev_list_empty_entry = 0x40004a7c
                0x0000000040004a88                r_llm_dev_list_search = 0x40004a88
                0x0000000040004a94                r_llm_env_adv_dup_filt_deinit = 0x40004a94
                0x0000000040004aa0                r_llm_env_adv_dup_filt_init = 0x40004aa0
                0x0000000040004aac                r_llm_init_ble_adv_report_flow_contol = 0x40004aac
                0x0000000040004ab8                r_llm_is_dev_connected = 0x40004ab8
                0x0000000040004ac4                r_llm_is_dev_synced = 0x40004ac4
                0x0000000040004ad0                r_llm_is_non_con_act_ongoing_check = 0x40004ad0
                0x0000000040004adc                r_llm_is_wl_accessible = 0x40004adc
                0x0000000040004ae8                r_llm_le_evt_mask_check = 0x40004ae8
                0x0000000040004af4                r_llm_le_features_get = 0x40004af4
                0x0000000040004b00                r_llm_link_disc = 0x40004b00
                0x0000000040004b0c                r_llm_master_ch_map_get = 0x40004b0c
                0x0000000040004b18                r_llm_msg_handler_tab_p_get = 0x40004b18
                0x0000000040004b24                r_llm_no_activity = 0x40004b24
                0x0000000040004b30                r_llm_per_adv_slot_dur = 0x40004b30
                0x0000000040004b3c                r_llm_plan_elt_get = 0x40004b3c
                0x0000000040004b48                r_llm_rx_path_comp_get = 0x40004b48
                0x0000000040004b54                r_llm_scan_start = 0x40004b54
                0x0000000040004b60                r_llm_scan_sync_acad_attach = 0x40004b60
                0x0000000040004b6c                r_llm_scan_sync_acad_detach = 0x40004b6c
                0x0000000040004b78                r_llm_send_adv_lost_event_to_host = 0x40004b78
                0x0000000040004b84                r_llm_tx_path_comp_get = 0x40004b84
                0x0000000040004b90                r_misc_deinit = 0x40004b90
                0x0000000040004b9c                r_misc_free_em_buf_in_isr = 0x40004b9c
                0x0000000040004ba8                r_misc_init = 0x40004ba8
                0x0000000040004bb4                r_misc_msg_handler_tab_p_get = 0x40004bb4
                0x0000000040004bc0                r_notEqual256 = 0x40004bc0
                0x0000000040004bcc                r_phy_upd_proc_start = 0x40004bcc
                0x0000000040004bd8                r_platform_reset = 0x40004bd8
                0x0000000040004be4                r_register_esp_vendor_cmd_handler = 0x40004be4
                0x0000000040004bf0                r_rf_em_init = 0x40004bf0
                0x0000000040004bfc                r_rf_force_agc_enable = 0x40004bfc
                0x0000000040004c08                r_rf_reg_rd = 0x40004c08
                0x0000000040004c14                r_rf_reg_wr = 0x40004c14
                0x0000000040004c20                r_rf_reset = 0x40004c20
                0x0000000040004c2c                r_rf_rssi_convert = 0x40004c2c
                0x0000000040004c38                r_rf_rw_v9_le_disable = 0x40004c38
                0x0000000040004c44                r_rf_rw_v9_le_enable = 0x40004c44
                0x0000000040004c50                r_rf_sleep = 0x40004c50
                0x0000000040004c5c                r_rf_txpwr_cs_get = 0x40004c5c
                0x0000000040004c68                r_rf_txpwr_dbm_get = 0x40004c68
                0x0000000040004c74                r_rf_util_cs_fmt_convert = 0x40004c74
                0x0000000040004c80                r_rw_crypto_aes_ccm = 0x40004c80
                0x0000000040004c8c                r_rw_crypto_aes_encrypt = 0x40004c8c
                0x0000000040004c98                r_rw_crypto_aes_init = 0x40004c98
                0x0000000040004ca4                r_rw_crypto_aes_k1 = 0x40004ca4
                0x0000000040004cb0                r_rw_crypto_aes_k2 = 0x40004cb0
                0x0000000040004cbc                r_rw_crypto_aes_k3 = 0x40004cbc
                0x0000000040004cc8                r_rw_crypto_aes_k4 = 0x40004cc8
                0x0000000040004cd4                r_rw_crypto_aes_rand = 0x40004cd4
                0x0000000040004ce0                r_rw_crypto_aes_result_handler = 0x40004ce0
                0x0000000040004cec                r_rw_crypto_aes_s1 = 0x40004cec
                0x0000000040004cf8                r_rw_cryto_aes_cmac = 0x40004cf8
                0x0000000040004d04                r_rw_v9_init_em_radio_table = 0x40004d04
                0x0000000040004d10                r_rwble_isr = 0x40004d10
                0x0000000040004d1c                r_rwble_sleep_enter = 0x40004d1c
                0x0000000040004d28                r_rwble_sleep_wakeup_end = 0x40004d28
                0x0000000040004d34                r_rwbtdm_isr_wrapper = 0x40004d34
                0x0000000040004d40                r_rwip_active_check = 0x40004d40
                0x0000000040004d4c                r_rwip_aes_encrypt = 0x40004d4c
                0x0000000040004d58                r_rwip_assert = 0x40004d58
                0x0000000040004d64                r_rwip_crypt_evt_handler = 0x40004d64
                0x0000000040004d70                r_rwip_crypt_isr_handler = 0x40004d70
                0x0000000040004d7c                r_rwip_eif_get = 0x40004d7c
                0x0000000040004d88                r_rwip_half_slot_2_lpcycles = 0x40004d88
                0x0000000040004d94                r_rwip_hus_2_lpcycles = 0x40004d94
                0x0000000040004da0                r_rwip_isr = 0x40004da0
                0x0000000040004dac                r_rwip_lpcycles_2_hus = 0x40004dac
                0x0000000040004db8                r_rwip_prevent_sleep_clear = 0x40004db8
                0x0000000040004dc4                r_rwip_prevent_sleep_set = 0x40004dc4
                0x0000000040004dd0                r_rwip_schedule = 0x40004dd0
                0x0000000040004ddc                r_rwip_sleep = 0x40004ddc
                0x0000000040004de8                r_rwip_sw_int_handler = 0x40004de8
                0x0000000040004df4                r_rwip_sw_int_req = 0x40004df4
                0x0000000040004e00                r_rwip_time_get = 0x40004e00
                0x0000000040004e0c                r_rwip_timer_10ms_handler = 0x40004e0c
                0x0000000040004e18                r_rwip_timer_10ms_set = 0x40004e18
                0x0000000040004e24                r_rwip_timer_hs_handler = 0x40004e24
                0x0000000040004e30                r_rwip_timer_hs_set = 0x40004e30
                0x0000000040004e3c                r_rwip_timer_hus_handler = 0x40004e3c
                0x0000000040004e48                r_rwip_timer_hus_set = 0x40004e48
                0x0000000040004e54                r_rwip_wakeup = 0x40004e54
                0x0000000040004e60                r_rwip_wakeup_end = 0x40004e60
                0x0000000040004e6c                r_rwip_wlcoex_set = 0x40004e6c
                0x0000000040004e78                r_sch_alarm_clear = 0x40004e78
                0x0000000040004e84                r_sch_alarm_init = 0x40004e84
                0x0000000040004e90                r_sch_alarm_prog = 0x40004e90
                0x0000000040004e9c                r_sch_alarm_set = 0x40004e9c
                0x0000000040004ea8                r_sch_alarm_timer_isr = 0x40004ea8
                0x0000000040004eb4                r_sch_arb_conflict_check = 0x40004eb4
                0x0000000040004ec0                r_sch_arb_elt_cancel = 0x40004ec0
                0x0000000040004ecc                r_sch_arb_event_start_isr = 0x40004ecc
                0x0000000040004ed8                r_sch_arb_init = 0x40004ed8
                0x0000000040004ee4                r_sch_arb_insert = 0x40004ee4
                0x0000000040004ef0                r_sch_arb_prog_timer = 0x40004ef0
                0x0000000040004efc                r_sch_arb_remove = 0x40004efc
                0x0000000040004f08                r_sch_arb_sw_isr = 0x40004f08
                0x0000000040004f14                r_sch_plan_chk = 0x40004f14
                0x0000000040004f20                r_sch_plan_clock_wrap_offset_update = 0x40004f20
                0x0000000040004f2c                r_sch_plan_init = 0x40004f2c
                0x0000000040004f38                r_sch_plan_interval_req = 0x40004f38
                0x0000000040004f44                r_sch_plan_offset_max_calc = 0x40004f44
                0x0000000040004f50                r_sch_plan_offset_req = 0x40004f50
                0x0000000040004f5c                r_sch_plan_position_range_compute = 0x40004f5c
                0x0000000040004f68                r_sch_plan_rem = 0x40004f68
                0x0000000040004f74                r_sch_plan_req = 0x40004f74
                0x0000000040004f80                r_sch_plan_set = 0x40004f80
                0x0000000040004f8c                r_sch_prog_end_isr = 0x40004f8c
                0x0000000040004f98                r_sch_prog_init = 0x40004f98
                0x0000000040004fa4                r_sch_prog_push = 0x40004fa4
                0x0000000040004fb0                r_sch_prog_rx_isr = 0x40004fb0
                0x0000000040004fbc                r_sch_prog_skip_isr = 0x40004fbc
                0x0000000040004fc8                r_sch_prog_tx_isr = 0x40004fc8
                0x0000000040004fd4                r_sch_slice_bg_add = 0x40004fd4
                0x0000000040004fe0                r_sch_slice_bg_remove = 0x40004fe0
                0x0000000040004fec                r_sch_slice_compute = 0x40004fec
                0x0000000040004ff8                r_sch_slice_fg_add = 0x40004ff8
                0x0000000040005004                r_sch_slice_fg_remove = 0x40005004
                0x0000000040005010                r_sch_slice_init = 0x40005010
                0x000000004000501c                r_sch_slice_per_add = 0x4000501c
                0x0000000040005028                r_sch_slice_per_remove = 0x40005028
                0x0000000040005034                r_sdk_config_get_bt_sleep_enable = 0x40005034
                0x0000000040005040                r_sdk_config_get_hl_derived_opts = 0x40005040
                0x000000004000504c                r_sdk_config_get_opts = 0x4000504c
                0x0000000040005058                r_sdk_config_get_priv_opts = 0x40005058
                0x0000000040005064                r_sdk_config_set_bt_sleep_enable = 0x40005064
                0x0000000040005070                r_sdk_config_set_hl_derived_opts = 0x40005070
                0x000000004000507c                r_sdk_config_set_opts = 0x4000507c
                0x0000000040005088                r_specialModP256 = 0x40005088
                0x0000000040005094                r_unloaded_area_init = 0x40005094
                0x00000000400050a0                r_vhci_flow_off = 0x400050a0
                0x00000000400050ac                r_vhci_flow_on = 0x400050ac
                0x00000000400050b8                r_vhci_notify_host_send_available = 0x400050b8
                0x00000000400050c4                r_vhci_send_to_host = 0x400050c4
                0x00000000400050d0                r_vnd_hci_command_handler = 0x400050d0
                0x00000000400050dc                r_vshci_init = 0x400050dc
                0x00000000400050e8                vnd_hci_command_handler_wrapper = 0x400050e8
                0x00000000400050f4                r_lld_legacy_adv_dynamic_pti_get = 0x400050f4
                0x0000000040005100                r_lld_legacy_adv_dynamic_pti_process = 0x40005100
                0x000000004000510c                r_lld_ext_adv_dynamic_pti_get = 0x4000510c
                0x0000000040005118                r_lld_ext_adv_dynamic_aux_pti_process = 0x40005118
                0x0000000040005124                r_lld_ext_adv_dynamic_pti_process = 0x40005124
                0x0000000040005130                r_lld_adv_ext_pkt_prepare_set = 0x40005130
                0x000000004000513c                r_lld_adv_ext_chain_none_construct = 0x4000513c
                0x0000000040005148                r_lld_adv_ext_chain_connectable_construct = 0x40005148
                0x0000000040005154                r_lld_adv_ext_chain_scannable_construct = 0x40005154
                0x0000000040005160                r_lld_adv_pkt_rx_connect_post = 0x40005160
                0x000000004000516c                r_lld_adv_start_init_evt_param = 0x4000516c
                0x0000000040005178                r_lld_adv_start_set_cs = 0x40005178
                0x0000000040005184                r_lld_adv_start_update_filter_policy = 0x40005184
                0x0000000040005190                r_lld_adv_start_schedule_asap = 0x40005190
                0x000000004000519c                r_lld_con_tx_prog_new_packet_coex = 0x4000519c
                0x00000000400051a8                r_lld_con_tx_prog_new_packet = 0x400051a8
                0x00000000400051b4                r_lld_per_adv_dynamic_pti_get = 0x400051b4
                0x00000000400051c0                r_lld_per_adv_evt_start_chm_upd = 0x400051c0
                0x00000000400051cc                r_lld_ext_scan_dynamic_pti_get = 0x400051cc
                0x00000000400051d8                r_lld_scan_try_sched = 0x400051d8
                0x00000000400051e4                r_lld_sync_insert = 0x400051e4
                0x00000000400051f0                r_sch_prog_ble_push = 0x400051f0
                0x00000000400051fc                r_sch_prog_bt_push = 0x400051fc
                0x0000000040005208                r_lld_init_evt_end_type_set = 0x40005208
                0x0000000040005214                r_lld_init_evt_end_type_get = 0x40005214
                0x0000000040005220                r_lld_adv_direct_adv_use_rpa_addr_state_set = 0x40005220
                0x000000004000522c                r_lld_adv_direct_adv_use_rpa_addr_state_get = 0x4000522c
                0x0000000040005238                r_lld_init_evt_end_type_check_state_set = 0x40005238
                0x0000000040005244                r_lld_init_evt_end_type_check_state_get = 0x40005244
                0x000000003fceffa8                bt_rf_coex_cfg_p = 0x3fceffa8
                0x000000003fceffa4                bt_rf_coex_hooks_p = 0x3fceffa4
                0x000000003fceffa0                btdm_env_p = 0x3fceffa0
                0x000000003fceff9c                g_rw_controller_task_handle = 0x3fceff9c
                0x000000003fceff98                g_rw_init_sem = 0x3fceff98
                0x000000003fceff94                g_rw_schd_queue = 0x3fceff94
                0x000000003fceff90                lld_init_env = 0x3fceff90
                0x000000003fceff8c                lld_rpa_renew_env = 0x3fceff8c
                0x000000003fceff88                lld_scan_env = 0x3fceff88
                0x000000003fceff84                lld_scan_sync_env = 0x3fceff84
                0x000000003fceff80                lld_test_env = 0x3fceff80
                0x000000003fceff7c                p_ble_util_buf_env = 0x3fceff7c
                0x000000003fceff78                p_lld_env = 0x3fceff78
                0x000000003fceff74                p_llm_env = 0x3fceff74
                0x000000003fceff70                r_h4tl_eif_p = 0x3fceff70
                0x000000003fceff6c                r_hli_funcs_p = 0x3fceff6c
                0x000000003fceff68                r_ip_funcs_p = 0x3fceff68
                0x000000003fceff64                r_modules_funcs_p = 0x3fceff64
                0x000000003fceff60                r_osi_funcs_p = 0x3fceff60
                0x000000003fceff5c                r_plf_funcs_p = 0x3fceff5c
                0x000000003fceff58                vhci_env_p = 0x3fceff58
                0x000000003fceff54                aa_gen = 0x3fceff54
                0x000000003fceff48                aes_env = 0x3fceff48
                0x000000003fcefef8                bt_rf_coex_cfg_cb = 0x3fcefef8
                0x000000003fcefef4                btdm_pwr_state = 0x3fcefef4
                0x000000003fcefef0                btdm_slp_err = 0x3fcefef0
                0x000000003fcefee8                ecc_env = 0x3fcefee8
                0x000000003fcefee0                esp_handler = 0x3fcefee0
                0x000000003fcefed8                esp_vendor_cmd = 0x3fcefed8
                0x000000003fcefed4                g_adv_delay_dis = 0x3fcefed4
                0x000000003fcefed0                g_conflict_elt = 0x3fcefed0
                0x000000003fcefec0                g_eif_api = 0x3fcefec0
                0x000000003fcefeb4                g_event_empty = 0x3fcefeb4
                0x000000003fcefeaa                g_llc_state = 0x3fcefeaa
                0x000000003fcefea9                g_llm_state = 0x3fcefea9
                0x000000003fcefea7                g_max_evt_env = 0x3fcefea7
                0x000000003fcefea6                g_misc_state = 0x3fcefea6
                0x000000003fcefe8a                g_rma_rule_db = 0x3fcefe8a
                0x000000003fcefe6e                g_rtp_rule_db = 0x3fcefe6e
                0x000000003fcefe6d                g_scan_forever = 0x3fcefe6d
                0x000000003fcefe6c                g_time_msb = 0x3fcefe6c
                0x000000003fcefe44                h4tl_env = 0x3fcefe44
                0x000000003fcefe21                hci_env = 0x3fcefe21
                0x000000003fcefe20                hci_ext_host = 0x3fcefe20
                0x000000003fcefe18                hci_fc_env = 0x3fcefe18
                0x000000003fcefdec                hci_tl_env = 0x3fcefdec
                0x000000003fcefdbc                ke_env = 0x3fcefdbc
                0x000000003fcefd7c                ke_event_env = 0x3fcefd7c
                0x000000003fcefd00                ke_task_env = 0x3fcefd00
                0x000000003fcefcd8                llc_env = 0x3fcefcd8
                0x000000003fcefcb0                lld_adv_env = 0x3fcefcb0
                0x000000003fcefc88                lld_con_env = 0x3fcefc88
                0x000000003fcefc80                lld_exp_sync_pos_tab = 0x3fcefc80
                0x000000003fcefc58                lld_per_adv_env = 0x3fcefc58
                0x000000003fcefc30                lld_sync_env = 0x3fcefc30
                0x000000003fcefc24                llm_le_adv_flow_env = 0x3fcefc24
                0x000000003fcefc20                rw_sleep_enable = 0x3fcefc20
                0x000000003fcefc18                rwble_env = 0x3fcefc18
                0x000000003fcefbfc                rwip_env = 0x3fcefbfc
                0x000000003fcefbf0                rwip_param = 0x3fcefbf0
                0x000000003fcefbec                rwip_prog_delay = 0x3fcefbec
                0x000000003fcefbb4                rwip_rf = 0x3fcefbb4
                0x000000003fcefbac                sch_alarm_env = 0x3fcefbac
                0x000000003fcefb98                sch_arb_env = 0x3fcefb98
                0x000000003fcefb90                sch_plan_env = 0x3fcefb90
                0x000000003fcefa8c                sch_prog_env = 0x3fcefa8c
                0x000000003fcefa2c                sch_slice_env = 0x3fcefa2c
                0x000000003fcefa24                sch_slice_params = 0x3fcefa24
                0x000000003fcefa1c                timer_env = 0x3fcefa1c
                0x000000003fcefa18                unloaded_area = 0x3fcefa18
                0x000000003fcefa14                vshci_state = 0x3fcefa14
                0x000000003fcefa08                TASK_DESC_LLC = 0x3fcefa08
                0x000000003fcef9fc                TASK_DESC_LLM = 0x3fcef9fc
                0x000000003fcef9f0                TASK_DESC_VSHCI = 0x3fcef9f0
                0x000000003fcef9e8                co_default_bdaddr = 0x3fcef9e8
                0x000000003fcef9e4                dbg_assert_block = 0x3fcef9e4
                0x000000003fcef9e0                g_bt_plf_log_level = 0x3fcef9e0
                0x000000003fcef9bc                hci_cmd_desc_tab_vs_esp = 0x3fcef9bc
                0x000000003fcef9a4                hci_command_handler_tab_esp = 0x3fcef9a4
                0x000000003fcef9a0                privacy_en = 0x3fcef9a0
                0x000000003fcef958                sdk_cfg_priv_opts = 0x3fcef958
                0x000000003ff1ffdc                BasePoint_x_256 = 0x3ff1ffdc
                0x000000003ff1ffbc                BasePoint_y_256 = 0x3ff1ffbc
                0x000000003ff1ff9c                DebugE256PublicKey_x = 0x3ff1ff9c
                0x000000003ff1ff7c                DebugE256PublicKey_y = 0x3ff1ff7c
                0x000000003ff1ff5c                DebugE256SecretKey = 0x3ff1ff5c
                0x000000003ff1f7a0                ECC_4Win_Look_up_table = 0x3ff1f7a0
                0x000000003ff1f79a                LLM_AA_CT1 = 0x3ff1f79a
                0x000000003ff1f798                LLM_AA_CT2 = 0x3ff1f798
                0x000000003ff1f790                RF_TX_PW_CONV_TBL = 0x3ff1f790
                0x000000003ff1f784                TASK_DESC_MISC = 0x3ff1f784
                0x000000003ff1f766                adv_evt_prop2type = 0x3ff1f766
                0x000000003ff1f761                adv_evt_type2prop = 0x3ff1f761
                0x000000003ff1f751                aes_cmac_zero = 0x3ff1f751
                0x000000003ff1f741                aes_k2_salt = 0x3ff1f741
                0x000000003ff1f73c                aes_k3_id64 = 0x3ff1f73c
                0x000000003ff1f72c                aes_k3_salt = 0x3ff1f72c
                0x000000003ff1f728                aes_k4_id6 = 0x3ff1f728
                0x000000003ff1f718                aes_k4_salt = 0x3ff1f718
                0x000000003ff1f6ec                bigHexP256 = 0x3ff1f6ec
                0x000000003ff1f6e2                byte_tx_time = 0x3ff1f6e2
                0x000000003ff1f6dc                co_null_bdaddr = 0x3ff1f6dc
                0x000000003ff1f6d7                co_phy_mask_to_rate = 0x3ff1f6d7
                0x000000003ff1f6d2                co_phy_mask_to_value = 0x3ff1f6d2
                0x000000003ff1f6ce                co_phy_to_rate = 0x3ff1f6ce
                0x000000003ff1f6ca                co_phy_value_to_mask = 0x3ff1f6ca
                0x000000003ff1f6c5                co_rate_to_byte_dur_us = 0x3ff1f6c5
                0x000000003ff1f6c0                co_rate_to_phy = 0x3ff1f6c0
                0x000000003ff1f6bc                co_rate_to_phy_mask = 0x3ff1f6bc
                0x000000003ff1f6ac                co_sca2ppm = 0x3ff1f6ac
                0x000000003ff1f680                coef_B = 0x3ff1f680
                0x000000003ff1f678                connect_req_dur_tab = 0x3ff1f678
                0x000000003ff1f5f4                ecc_Jacobian_InfinityPoint256 = 0x3ff1f5f4
                0x000000003ff1f526                em_base_reg_lut = 0x3ff1f526
                0x000000003ff1f51e                fixed_tx_time = 0x3ff1f51e
                0x000000003ff1f518                h4tl_msgtype2hdrlen = 0x3ff1f518
                0x000000003ff1f4e8                hci_cmd_desc_root_tab = 0x3ff1f4e8
                0x000000003ff1f47c                hci_cmd_desc_tab_ctrl_bb = 0x3ff1f47c
                0x000000003ff1f44c                hci_cmd_desc_tab_info_par = 0x3ff1f44c
                0x000000003ff1f0b0                hci_cmd_desc_tab_le = 0x3ff1f0b0
                0x000000003ff1f098                hci_cmd_desc_tab_lk_ctrl = 0x3ff1f098
                0x000000003ff1f08c                hci_cmd_desc_tab_stat_par = 0x3ff1f08c
                0x000000003ff1f050                hci_cmd_desc_tab_vs = 0x3ff1f050
                0x000000003ff1f008                hci_evt_desc_tab = 0x3ff1f008
                0x000000003ff1ef68                hci_evt_le_desc_tab = 0x3ff1ef68
                0x000000003ff1ef60                hci_evt_le_desc_tab_esp = 0x3ff1ef60
                0x000000003ff1ef57                hci_rsvd_evt_msk = 0x3ff1ef57
                0x000000003ff1ef54                lld_aux_phy_to_rate = 0x3ff1ef54
                0x000000003ff1ef4c                lld_init_max_aux_dur_tab = 0x3ff1ef4c
                0x000000003ff1ef44                lld_scan_map_legacy_pdu_to_evt_type = 0x3ff1ef44
                0x000000003ff1ef3c                lld_scan_max_aux_dur_tab = 0x3ff1ef3c
                0x000000003ff1ef34                lld_sync_max_aux_dur_tab = 0x3ff1ef34
                0x000000003ff1ef2c                llm_local_le_feats = 0x3ff1ef2c
                0x000000003ff1ef24                llm_local_le_states = 0x3ff1ef24
                0x000000003ff1eefc                llm_local_supp_cmds = 0x3ff1eefc
                0x000000003ff1eedc                maxSecretKey_256 = 0x3ff1eedc
                0x000000003ff1eed4                max_data_tx_time = 0x3ff1eed4
                0x000000003ff1eec3                one_bits = 0x3ff1eec3
                0x000000003ff1eebe                rwip_coex_cfg = 0x3ff1eebe
                0x000000003ff1eea8                rwip_priority = 0x3ff1eea8
                0x000000003ff1ee5c                veryBigHexP256 = 0x3ff1ee5c
                0x0000000040005250                esp_pp_rom_version_get = 0x40005250
                0x000000004000525c                RC_GetBlockAckTime = 0x4000525c
                0x0000000040005268                ebuf_list_remove = 0x40005268
                0x0000000040005274                esf_buf_alloc = 0x40005274
                0x0000000040005280                esf_buf_alloc_dynamic = 0x40005280
                0x000000004000528c                esf_buf_recycle = 0x4000528c
                0x0000000040005298                GetAccess = 0x40005298
                0x00000000400052a4                hal_mac_is_low_rate_enabled = 0x400052a4
                0x00000000400052b0                hal_mac_tx_get_blockack = 0x400052b0
                0x00000000400052bc                hal_mac_tx_set_ppdu = 0x400052bc
                0x00000000400052c8                ic_get_trc = 0x400052c8
                0x00000000400052d4                ic_mac_deinit = 0x400052d4
                0x00000000400052e0                ic_mac_init = 0x400052e0
                0x00000000400052ec                ic_interface_enabled = 0x400052ec
                0x00000000400052f8                is_lmac_idle = 0x400052f8
                0x0000000040005304                lmacAdjustTimestamp = 0x40005304
                0x0000000040005310                lmacDiscardAgedMSDU = 0x40005310
                0x000000004000531c                lmacDiscardMSDU = 0x4000531c
                0x0000000040005328                lmacEndFrameExchangeSequence = 0x40005328
                0x0000000040005334                lmacIsIdle = 0x40005334
                0x0000000040005340                lmacIsLongFrame = 0x40005340
                0x000000004000534c                lmacMSDUAged = 0x4000534c
                0x0000000040005358                lmacPostTxComplete = 0x40005358
                0x0000000040005364                lmacProcessAllTxTimeout = 0x40005364
                0x0000000040005370                lmacProcessCollisions = 0x40005370
                0x000000004000537c                lmacProcessRxSucData = 0x4000537c
                0x0000000040005388                lmacReachLongLimit = 0x40005388
                0x0000000040005394                lmacReachShortLimit = 0x40005394
                0x00000000400053a0                lmacRecycleMPDU = 0x400053a0
                0x00000000400053ac                lmacRxDone = 0x400053ac
                0x00000000400053b8                lmacSetTxFrame = 0x400053b8
                0x00000000400053c4                lmacTxDone = 0x400053c4
                0x00000000400053d0                lmacTxFrame = 0x400053d0
                0x00000000400053dc                mac_tx_set_duration = 0x400053dc
                0x00000000400053e8                mac_tx_set_htsig = 0x400053e8
                0x00000000400053f4                mac_tx_set_plcp0 = 0x400053f4
                0x0000000040005400                mac_tx_set_plcp1 = 0x40005400
                0x000000004000540c                mac_tx_set_plcp2 = 0x4000540c
                0x0000000040005418                pm_check_state = 0x40005418
                0x0000000040005424                pm_disable_dream_timer = 0x40005424
                0x0000000040005430                pm_disable_sleep_delay_timer = 0x40005430
                0x000000004000543c                pm_dream = 0x4000543c
                0x0000000040005448                pm_mac_wakeup = 0x40005448
                0x0000000040005454                pm_mac_sleep = 0x40005454
                0x0000000040005460                pm_enable_active_timer = 0x40005460
                0x000000004000546c                pm_enable_sleep_delay_timer = 0x4000546c
                0x0000000040005478                pm_local_tsf_process = 0x40005478
                0x0000000040005484                pm_set_beacon_filter = 0x40005484
                0x0000000040005490                pm_is_in_wifi_slice_threshold = 0x40005490
                0x000000004000549c                pm_is_waked = 0x4000549c
                0x00000000400054a8                pm_keep_alive = 0x400054a8
                0x00000000400054b4                pm_on_beacon_rx = 0x400054b4
                0x00000000400054c0                pm_on_data_rx = 0x400054c0
                0x00000000400054cc                pm_on_tbtt = 0x400054cc
                0x00000000400054d8                pm_parse_beacon = 0x400054d8
                0x00000000400054e4                pm_process_tim = 0x400054e4
                0x00000000400054f0                pm_rx_beacon_process = 0x400054f0
                0x00000000400054fc                pm_rx_data_process = 0x400054fc
                0x0000000040005508                pm_sleep = 0x40005508
                0x0000000040005514                pm_sleep_for = 0x40005514
                0x0000000040005520                pm_tbtt_process = 0x40005520
                0x000000004000552c                ppAMPDU2Normal = 0x4000552c
                0x0000000040005538                ppAssembleAMPDU = 0x40005538
                0x0000000040005544                ppCalFrameTimes = 0x40005544
                0x0000000040005550                ppCalSubFrameLength = 0x40005550
                0x000000004000555c                ppCalTxAMPDULength = 0x4000555c
                0x0000000040005568                ppCheckTxAMPDUlength = 0x40005568
                0x0000000040005574                ppDequeueRxq_Locked = 0x40005574
                0x0000000040005580                ppDequeueTxQ = 0x40005580
                0x000000004000558c                ppEmptyDelimiterLength = 0x4000558c
                0x0000000040005598                ppEnqueueRxq = 0x40005598
                0x00000000400055a4                ppEnqueueTxDone = 0x400055a4
                0x00000000400055b0                ppGetTxQFirstAvail_Locked = 0x400055b0
                0x00000000400055bc                ppGetTxframe = 0x400055bc
                0x00000000400055c8                ppMapTxQueue = 0x400055c8
                0x00000000400055e0                ppProcessRxPktHdr = 0x400055e0
                0x00000000400055ec                ppProcessTxQ = 0x400055ec
                0x00000000400055f8                ppRecordBarRRC = 0x400055f8
                0x0000000040005604                lmacRequestTxopQueue = 0x40005604
                0x0000000040005610                lmacReleaseTxopQueue = 0x40005610
                0x000000004000561c                ppRecycleAmpdu = 0x4000561c
                0x0000000040005628                ppRecycleRxPkt = 0x40005628
                0x0000000040005634                ppResortTxAMPDU = 0x40005634
                0x0000000040005640                ppResumeTxAMPDU = 0x40005640
                0x0000000040005658                ppRxPkt = 0x40005658
                0x0000000040005664                ppRxProtoProc = 0x40005664
                0x0000000040005670                ppSearchTxQueue = 0x40005670
                0x000000004000567c                ppSearchTxframe = 0x4000567c
                0x0000000040005688                ppSelectNextQueue = 0x40005688
                0x0000000040005694                ppSubFromAMPDU = 0x40005694
                0x00000000400056a0                ppTask = 0x400056a0
                0x00000000400056ac                ppTxPkt = 0x400056ac
                0x00000000400056b8                ppTxProtoProc = 0x400056b8
                0x00000000400056c4                ppTxqUpdateBitmap = 0x400056c4
                0x00000000400056d0                pp_coex_tx_request = 0x400056d0
                0x00000000400056dc                pp_hdrsize = 0x400056dc
                0x00000000400056e8                pp_post = 0x400056e8
                0x00000000400056f4                pp_process_hmac_waiting_txq = 0x400056f4
                0x0000000040005700                rcGetAmpduSched = 0x40005700
                0x000000004000570c                rcUpdateRxDone = 0x4000570c
                0x0000000040005718                rc_get_trc = 0x40005718
                0x0000000040005724                rc_get_trc_by_index = 0x40005724
                0x0000000040005730                rcAmpduLowerRate = 0x40005730
                0x000000004000573c                rcampduuprate = 0x4000573c
                0x0000000040005748                rcClearCurAMPDUSched = 0x40005748
                0x0000000040005754                rcClearCurSched = 0x40005754
                0x0000000040005760                rcClearCurStat = 0x40005760
                0x000000004000576c                rcGetSched = 0x4000576c
                0x0000000040005778                rcLowerSched = 0x40005778
                0x0000000040005784                rcSetTxAmpduLimit = 0x40005784
                0x0000000040005790                rcTxUpdatePer = 0x40005790
                0x000000004000579c                rcUpdateAckSnr = 0x4000579c
                0x00000000400057a8                rcUpdateRate = 0x400057a8
                0x00000000400057c0                rcUpdateTxDoneAmpdu2 = 0x400057c0
                0x00000000400057cc                rcUpSched = 0x400057cc
                0x00000000400057d8                rssi_margin = 0x400057d8
                0x00000000400057e4                rx11NRate2AMPDULimit = 0x400057e4
                0x00000000400057f0                TRC_AMPDU_PER_DOWN_THRESHOLD = 0x400057f0
                0x00000000400057fc                TRC_AMPDU_PER_UP_THRESHOLD = 0x400057fc
                0x0000000040005808                trc_calc_duration = 0x40005808
                0x0000000040005814                trc_isTxAmpduOperational = 0x40005814
                0x0000000040005820                trc_onAmpduOp = 0x40005820
                0x000000004000582c                TRC_PER_IS_GOOD = 0x4000582c
                0x0000000040005838                trc_SetTxAmpduState = 0x40005838
                0x0000000040005844                trc_tid_isTxAmpduOperational = 0x40005844
                0x0000000040005850                trcAmpduSetState = 0x40005850
                0x000000004000585c                wDevCheckBlockError = 0x4000585c
                0x0000000040005868                wDev_AppendRxBlocks = 0x40005868
                0x0000000040005874                wDev_DiscardFrame = 0x40005874
                0x0000000040005880                wDev_GetNoiseFloor = 0x40005880
                0x000000004000588c                wDev_IndicateAmpdu = 0x4000588c
                0x0000000040005898                wDev_IndicateFrame = 0x40005898
                0x00000000400058a4                wdev_bank_store = 0x400058a4
                0x00000000400058b0                wdev_bank_load = 0x400058b0
                0x00000000400058bc                wdev_mac_reg_load = 0x400058bc
                0x00000000400058c8                wdev_mac_reg_store = 0x400058c8
                0x00000000400058d4                wdev_mac_special_reg_load = 0x400058d4
                0x00000000400058e0                wdev_mac_special_reg_store = 0x400058e0
                0x00000000400058ec                wdev_mac_wakeup = 0x400058ec
                0x00000000400058f8                wdev_mac_sleep = 0x400058f8
                0x0000000040005904                hal_mac_is_dma_enable = 0x40005904
                0x0000000040005910                wDev_ProcessFiq = 0x40005910
                0x000000004000591c                wDev_ProcessRxSucData = 0x4000591c
                0x0000000040005928                wdevProcessRxSucDataAll = 0x40005928
                0x0000000040005934                wdev_csi_len_align = 0x40005934
                0x0000000040005940                ppDequeueTxDone_Locked = 0x40005940
                0x000000004000594c                ppProcTxDone = 0x4000594c
                0x0000000040005958                pm_tx_data_done_process = 0x40005958
                0x0000000040005964                config_is_cache_tx_buf_enabled = 0x40005964
                0x0000000040005970                ppMapWaitTxq = 0x40005970
                0x000000004000597c                ppProcessWaitingQueue = 0x4000597c
                0x0000000040005988                ppDisableQueue = 0x40005988
                0x0000000040005994                pm_allow_tx = 0x40005994
                0x00000000400059a0                wdev_is_data_in_rxlist = 0x400059a0
                0x00000000400059ac                ppProcTxCallback = 0x400059ac
                0x000000003ff1ee58                our_instances_ptr = 0x3ff1ee58
                0x000000003fcef954                pTxRx = 0x3fcef954
                0x000000003fcef950                lmacConfMib_ptr = 0x3fcef950
                0x000000003fcef94c                our_wait_eb = 0x3fcef94c
                0x000000003fcef948                our_tx_eb = 0x3fcef948
                0x000000003fcef944                pp_wdev_funcs = 0x3fcef944
                0x000000003fcef940                g_osi_funcs_p = 0x3fcef940
                0x000000003fcef93c                wDevCtrl_ptr = 0x3fcef93c
                0x000000003ff1ee54                g_wdev_last_desc_reset_ptr = 0x3ff1ee54
                0x000000003fcef938                wDevMacSleep_ptr = 0x3fcef938
                0x000000003fcef934                g_lmac_cnt_ptr = 0x3fcef934
                0x000000003ff1ee50                our_controls_ptr = 0x3ff1ee50
                0x000000003fcef930                pp_sig_cnt_ptr = 0x3fcef930
                0x000000003fcef92c                g_eb_list_desc_ptr = 0x3fcef92c
                0x000000003fcef928                s_fragment_ptr = 0x3fcef928
                0x000000003fcef924                if_ctrl_ptr = 0x3fcef924
                0x000000003fcef920                g_intr_lock_mux = 0x3fcef920
                0x000000003fcef91c                g_wifi_global_lock = 0x3fcef91c
                0x000000003fcef918                s_wifi_queue = 0x3fcef918
                0x000000003fcef914                pp_task_hdl = 0x3fcef914
                0x000000003fcef910                s_pp_task_create_sem = 0x3fcef910
                0x000000003fcef90c                s_pp_task_del_sem = 0x3fcef90c
                0x000000003fcef908                g_wifi_menuconfig_ptr = 0x3fcef908
                0x000000003fcef904                xphyQueue = 0x3fcef904
                0x000000003fcef900                ap_no_lr_ptr = 0x3fcef900
                0x000000003fcef8fc                rc11BSchedTbl_ptr = 0x3fcef8fc
                0x000000003fcef8f8                rc11NSchedTbl_ptr = 0x3fcef8f8
                0x000000003fcef8f4                rcLoRaSchedTbl_ptr = 0x3fcef8f4
                0x000000003fcef8f0                BasicOFDMSched_ptr = 0x3fcef8f0
                0x000000003fcef8ec                trc_ctl_ptr = 0x3fcef8ec
                0x000000003fcef8e8                g_pm_cnt_ptr = 0x3fcef8e8
                0x000000003fcef8e4                g_pm_ptr = 0x3fcef8e4
                0x000000003fcef8e0                g_pm_cfg_ptr = 0x3fcef8e0
                0x000000003fcef8dc                g_esp_mesh_quick_funcs_ptr = 0x3fcef8dc
                0x000000003fcef8d8                g_txop_queue_status_ptr = 0x3fcef8d8
                0x000000003fcef8d4                g_mac_sleep_en_ptr = 0x3fcef8d4
                0x000000003fcef8d0                g_mesh_is_root_ptr = 0x3fcef8d0
                0x000000003fcef8cc                g_mesh_topology_ptr = 0x3fcef8cc
                0x000000003fcef8c8                g_mesh_init_ps_type_ptr = 0x3fcef8c8
                0x000000003fcef8c4                g_mesh_is_started_ptr = 0x3fcef8c4
                0x000000003fcef8c0                g_config_func = 0x3fcef8c0
                0x000000003fcef8bc                g_net80211_tx_func = 0x3fcef8bc
                0x000000003fcef8b8                g_timer_func = 0x3fcef8b8
                0x000000003fcef8b4                s_michael_mic_failure_cb = 0x3fcef8b4
                0x000000003fcef8b0                wifi_sta_rx_probe_req = 0x3fcef8b0
                0x000000003fcef8ac                g_tx_done_cb_func = 0x3fcef8ac
                0x000000003fcef860                g_per_conn_trc = 0x3fcef860
                0x000000003fcef85c                s_encap_amsdu_func = 0x3fcef85c
                0x00000000400059b8                esp_net80211_rom_version_get = 0x400059b8
                0x00000000400059c4                ampdu_dispatch = 0x400059c4
                0x00000000400059d0                ampdu_dispatch_all = 0x400059d0
                0x00000000400059dc                ampdu_dispatch_as_many_as_possible = 0x400059dc
                0x00000000400059e8                ampdu_dispatch_movement = 0x400059e8
                0x00000000400059f4                ampdu_dispatch_upto = 0x400059f4
                0x0000000040005a00                chm_is_at_home_channel = 0x40005a00
                0x0000000040005a0c                cnx_node_is_existing = 0x40005a0c
                0x0000000040005a18                cnx_node_search = 0x40005a18
                0x0000000040005a24                ic_ebuf_recycle_rx = 0x40005a24
                0x0000000040005a30                ic_ebuf_recycle_tx = 0x40005a30
                0x0000000040005a3c                ic_reset_rx_ba = 0x40005a3c
                0x0000000040005a48                ieee80211_align_eb = 0x40005a48
                0x0000000040005a54                ieee80211_ampdu_reorder = 0x40005a54
                0x0000000040005a60                ieee80211_ampdu_start_age_timer = 0x40005a60
                0x0000000040005a78                ieee80211_is_tx_allowed = 0x40005a78
                0x0000000040005a84                ieee80211_output_pending_eb = 0x40005a84
                0x0000000040005a90                ieee80211_output_process = 0x40005a90
                0x0000000040005a9c                ieee80211_set_tx_desc = 0x40005a9c
                0x0000000040005aa8                sta_input = 0x40005aa8
                0x0000000040005ab4                wifi_get_macaddr = 0x40005ab4
                0x0000000040005ac0                wifi_rf_phy_disable = 0x40005ac0
                0x0000000040005acc                wifi_rf_phy_enable = 0x40005acc
                0x0000000040005ad8                ic_ebuf_alloc = 0x40005ad8
                0x0000000040005ae4                ieee80211_classify = 0x40005ae4
                0x0000000040005af0                ieee80211_copy_eb_header = 0x40005af0
                0x0000000040005afc                ieee80211_recycle_cache_eb = 0x40005afc
                0x0000000040005b08                ieee80211_search_node = 0x40005b08
                0x0000000040005b14                roundup2 = 0x40005b14
                0x0000000040005b20                ieee80211_crypto_encap = 0x40005b20
                0x0000000040005b2c                ieee80211_crypto_decap = 0x40005b2c
                0x0000000040005b44                ieee80211_set_tx_pti = 0x40005b44
                0x0000000040005b50                wifi_is_started = 0x40005b50
                0x0000000040005b5c                ieee80211_gettid = 0x40005b5c
                0x000000003fcef858                net80211_funcs = 0x3fcef858
                0x000000003fcef854                g_scan = 0x3fcef854
                0x000000003fcef850                g_chm = 0x3fcef850
                0x000000003fcef84c                g_ic_ptr = 0x3fcef84c
                0x000000003fcef848                g_hmac_cnt_ptr = 0x3fcef848
                0x000000003fcef844                g_tx_cacheq_ptr = 0x3fcef844
                0x000000003fcef840                s_netstack_free = 0x3fcef840
                0x000000003fcef83c                mesh_rxcb = 0x3fcef83c
                0x000000003fcef838                sta_rxcb = 0x3fcef838
                0x0000000040005b68                esp_coex_rom_version_get = 0x40005b68
                0x0000000040005b74                coex_bt_release = 0x40005b74
                0x0000000040005b80                coex_bt_request = 0x40005b80
                0x0000000040005b8c                coex_core_ble_conn_dyn_prio_get = 0x40005b8c
                0x0000000040005b98                coex_core_event_duration_get = 0x40005b98
                0x0000000040005ba4                coex_core_pti_get = 0x40005ba4
                0x0000000040005bb0                coex_core_release = 0x40005bb0
                0x0000000040005bbc                coex_core_request = 0x40005bbc
                0x0000000040005bc8                coex_core_status_get = 0x40005bc8
                0x0000000040005bd4                coex_core_timer_idx_get = 0x40005bd4
                0x0000000040005be0                coex_event_duration_get = 0x40005be0
                0x0000000040005bec                coex_hw_timer_disable = 0x40005bec
                0x0000000040005bf8                coex_hw_timer_enable = 0x40005bf8
                0x0000000040005c04                coex_hw_timer_set = 0x40005c04
                0x0000000040005c10                coex_schm_interval_set = 0x40005c10
                0x0000000040005c1c                coex_schm_lock = 0x40005c1c
                0x0000000040005c28                coex_schm_unlock = 0x40005c28
                0x0000000040005c34                coex_status_get = 0x40005c34
                0x0000000040005c40                coex_wifi_release = 0x40005c40
                0x0000000040005c4c                esp_coex_ble_conn_dynamic_prio_get = 0x40005c4c
                0x000000003fcef834                coex_env_ptr = 0x3fcef834
                0x000000003fcef830                coex_pti_tab_ptr = 0x3fcef830
                0x000000003fcef82c                coex_schm_env_ptr = 0x3fcef82c
                0x000000003fcef828                coexist_funcs = 0x3fcef828
                0x000000003fcef824                g_coa_funcs_p = 0x3fcef824
                0x000000003fcef820                g_coex_param_ptr = 0x3fcef820
                0x0000000040005c58                phy_get_romfuncs = 0x40005c58
                0x0000000040005c64                rom_abs_temp = 0x40005c64
                0x0000000040005c70                rom_bb_bss_cbw40_dig = 0x40005c70
                0x0000000040005c7c                rom_bb_wdg_test_en = 0x40005c7c
                0x0000000040005c88                rom_bb_wdt_get_status = 0x40005c88
                0x0000000040005c94                rom_bb_wdt_int_enable = 0x40005c94
                0x0000000040005ca0                rom_bb_wdt_rst_enable = 0x40005ca0
                0x0000000040005cac                rom_bb_wdt_timeout_clear = 0x40005cac
                0x0000000040005cb8                rom_cbw2040_cfg = 0x40005cb8
                0x0000000040005cc4                rom_check_noise_floor = 0x40005cc4
                0x0000000040005cd0                rom_chip_i2c_readReg = 0x40005cd0
                0x0000000040005cdc                rom_chip_i2c_writeReg = 0x40005cdc
                0x0000000040005ce8                rom_dc_iq_est = 0x40005ce8
                0x0000000040005cf4                rom_disable_agc = 0x40005cf4
                0x0000000040005d00                rom_en_pwdet = 0x40005d00
                0x0000000040005d0c                rom_enable_agc = 0x40005d0c
                0x0000000040005d18                rom_get_bbgain_db = 0x40005d18
                0x0000000040005d24                rom_get_data_sat = 0x40005d24
                0x0000000040005d30                rom_get_i2c_read_mask = 0x40005d30
                0x0000000040005d3c                rom_get_pwctrl_correct = 0x40005d3c
                0x0000000040005d48                rom_i2c_readReg = 0x40005d48
                0x0000000040005d54                rom_i2c_readReg_Mask = 0x40005d54
                0x0000000040005d60                rom_i2c_writeReg = 0x40005d60
                0x0000000040005d6c                rom_i2c_writeReg_Mask = 0x40005d6c
                0x0000000040005d78                rom_index_to_txbbgain = 0x40005d78
                0x0000000040005d84                rom_iq_est_disable = 0x40005d84
                0x0000000040005d90                rom_iq_est_enable = 0x40005d90
                0x0000000040005d9c                rom_linear_to_db = 0x40005d9c
                0x0000000040005da8                rom_loopback_mode_en = 0x40005da8
                0x0000000040005db4                rom_mhz2ieee = 0x40005db4
                0x0000000040005dc0                rom_noise_floor_auto_set = 0x40005dc0
                0x0000000040005dcc                rom_pbus_debugmode = 0x40005dcc
                0x0000000040005dd8                rom_pbus_force_mode = 0x40005dd8
                0x0000000040005de4                rom_pbus_force_test = 0x40005de4
                0x0000000040005df0                rom_pbus_rd = 0x40005df0
                0x0000000040005dfc                rom_pbus_rd_addr = 0x40005dfc
                0x0000000040005e08                rom_pbus_rd_shift = 0x40005e08
                0x0000000040005e14                rom_pbus_set_dco = 0x40005e14
                0x0000000040005e20                rom_pbus_set_rxgain = 0x40005e20
                0x0000000040005e2c                rom_pbus_workmode = 0x40005e2c
                0x0000000040005e38                rom_pbus_xpd_rx_off = 0x40005e38
                0x0000000040005e44                rom_pbus_xpd_rx_on = 0x40005e44
                0x0000000040005e50                rom_pbus_xpd_tx_off = 0x40005e50
                0x0000000040005e5c                rom_pbus_xpd_tx_on = 0x40005e5c
                0x0000000040005e68                rom_phy_byte_to_word = 0x40005e68
                0x0000000040005e74                rom_phy_disable_cca = 0x40005e74
                0x0000000040005e80                rom_phy_enable_cca = 0x40005e80
                0x0000000040005e8c                rom_phy_get_noisefloor = 0x40005e8c
                0x0000000040005e98                rom_phy_get_rx_freq = 0x40005e98
                0x0000000040005ea4                rom_phy_set_bbfreq_init = 0x40005ea4
                0x0000000040005eb0                rom_pow_usr = 0x40005eb0
                0x0000000040005ebc                rom_pwdet_sar2_init = 0x40005ebc
                0x0000000040005ec8                rom_read_hw_noisefloor = 0x40005ec8
                0x0000000040005ed4                rom_read_sar_dout = 0x40005ed4
                0x0000000040005ee0                rom_set_cal_rxdc = 0x40005ee0
                0x0000000040005eec                rom_set_chan_cal_interp = 0x40005eec
                0x0000000040005ef8                rom_set_loopback_gain = 0x40005ef8
                0x0000000040005f04                rom_set_noise_floor = 0x40005f04
                0x0000000040005f10                rom_set_rxclk_en = 0x40005f10
                0x0000000040005f1c                rom_set_tx_dig_gain = 0x40005f1c
                0x0000000040005f28                rom_set_txcap_reg = 0x40005f28
                0x0000000040005f34                rom_set_txclk_en = 0x40005f34
                0x0000000040005f40                rom_spur_cal = 0x40005f40
                0x0000000040005f4c                rom_spur_reg_write_one_tone = 0x40005f4c
                0x0000000040005f58                rom_target_power_add_backoff = 0x40005f58
                0x0000000040005f64                rom_tx_pwctrl_bg_init = 0x40005f64
                0x0000000040005f70                rom_txbbgain_to_index = 0x40005f70
                0x0000000040005f7c                rom_wifi_11g_rate_chg = 0x40005f7c
                0x0000000040005f88                rom_write_gain_mem = 0x40005f88
                0x0000000040005f94                chip728_phyrom_version = 0x40005f94
                0x0000000040005fa0                rom_disable_wifi_agc = 0x40005fa0
                0x0000000040005fac                rom_enable_wifi_agc = 0x40005fac
                0x0000000040005fb8                rom_bt_index_to_bb = 0x40005fb8
                0x0000000040005fc4                rom_bt_bb_to_index = 0x40005fc4
                0x0000000040005fd0                rom_spur_coef_cfg = 0x40005fd0
                0x0000000040005fdc                rom_bb_bss_cbw40 = 0x40005fdc
                0x0000000040005fe8                rom_set_cca = 0x40005fe8
                0x0000000040005ff4                rom_tx_paon_set = 0x40005ff4
                0x0000000040006000                rom_i2cmst_reg_init = 0x40006000
                0x000000004000600c                rom_iq_corr_enable = 0x4000600c
                0x0000000040006018                rom_fe_reg_init = 0x40006018
                0x0000000040006024                rom_agc_reg_init = 0x40006024
                0x0000000040006030                rom_bb_reg_init = 0x40006030
                0x000000004000603c                rom_mac_enable_bb = 0x4000603c
                0x0000000040006048                rom_bb_wdg_cfg = 0x40006048
                0x0000000040006054                rom_force_txon = 0x40006054
                0x0000000040006060                rom_fe_txrx_reset = 0x40006060
                0x000000004000606c                rom_set_rx_comp = 0x4000606c
                0x0000000040006078                rom_set_pbus_reg = 0x40006078
                0x0000000040006084                rom_write_chan_freq = 0x40006084
                0x0000000040006090                rom_phy_xpd_rf = 0x40006090
                0x000000004000609c                rom_set_xpd_sar = 0x4000609c
                0x00000000400060a8                rom_get_target_power_offset = 0x400060a8
                0x00000000400060b4                rom_write_txrate_power_offset = 0x400060b4
                0x00000000400060c0                rom_get_rate_fcc_index = 0x400060c0
                0x00000000400060cc                rom_get_rate_target_power = 0x400060cc
                0x00000000400060d8                rom_pkdet_vol_start = 0x400060d8
                0x00000000400060e4                rom_read_sar2_code = 0x400060e4
                0x00000000400060f0                rom_get_sar2_vol = 0x400060f0
                0x00000000400060fc                rom_get_pll_vol = 0x400060fc
                0x0000000040006108                rom_get_phy_target_power = 0x40006108
                0x0000000040006114                rom_temp_to_power = 0x40006114
                0x0000000040006120                rom_phy_track_pll_cap = 0x40006120
                0x000000004000612c                rom_phy_pwdet_always_en = 0x4000612c
                0x0000000040006138                rom_phy_pwdet_onetime_en = 0x40006138
                0x0000000040006144                rom_get_i2c_mst0_mask = 0x40006144
                0x0000000040006150                rom_get_i2c_hostid = 0x40006150
                0x000000004000615c                rom_enter_critical_phy = 0x4000615c
                0x0000000040006168                rom_exit_critical_phy = 0x40006168
                0x0000000040006174                rom_chip_i2c_readReg_org = 0x40006174
                0x0000000040006180                rom_i2c_paral_set_mst0 = 0x40006180
                0x000000004000618c                rom_i2c_paral_set_read = 0x4000618c
                0x0000000040006198                rom_i2c_paral_read = 0x40006198
                0x00000000400061a4                rom_i2c_paral_write = 0x400061a4
                0x00000000400061b0                rom_i2c_paral_write_num = 0x400061b0
                0x00000000400061bc                rom_i2c_paral_write_mask = 0x400061bc
                0x00000000400061c8                rom_bb_bss_cbw40_ana = 0x400061c8
                0x00000000400061d4                rom_chan_to_freq = 0x400061d4
                0x00000000400061e0                rom_open_i2c_xpd = 0x400061e0
                0x00000000400061ec                rom_dac_rate_set = 0x400061ec
                0x00000000400061f8                rom_tsens_read_init = 0x400061f8
                0x0000000040006204                rom_tsens_code_read = 0x40006204
                0x0000000040006210                rom_tsens_index_to_dac = 0x40006210
                0x000000004000621c                rom_tsens_index_to_offset = 0x4000621c
                0x0000000040006228                rom_tsens_dac_cal = 0x40006228
                0x0000000040006234                rom_code_to_temp = 0x40006234
                0x0000000040006240                rom_write_pll_cap_mem = 0x40006240
                0x000000004000624c                rom_pll_correct_dcap = 0x4000624c
                0x0000000040006258                rom_phy_en_hw_set_freq = 0x40006258
                0x0000000040006264                rom_phy_dis_hw_set_freq = 0x40006264
                0x0000000040006270                rom_pll_vol_cal = 0x40006270
                0x000000004000627c                rom_wrtie_pll_cap = 0x4000627c
                0x0000000040006288                rom_set_tx_gain_mem = 0x40006288
                0x0000000040006294                rom_bt_tx_dig_gain = 0x40006294
                0x00000000400062a0                rom_bt_get_tx_gain = 0x400062a0
                0x00000000400062ac                rom_get_chan_target_power = 0x400062ac
                0x00000000400062b8                rom_get_tx_gain_value = 0x400062b8
                0x00000000400062c4                rom_wifi_tx_dig_gain = 0x400062c4
                0x00000000400062d0                rom_wifi_get_tx_gain = 0x400062d0
                0x00000000400062dc                rom_fe_i2c_reg_renew = 0x400062dc
                0x00000000400062e8                rom_wifi_agc_sat_gain = 0x400062e8
                0x00000000400062f4                rom_i2c_master_reset = 0x400062f4
                0x0000000040006300                rom_bt_filter_reg = 0x40006300
                0x000000004000630c                rom_phy_bbpll_cal = 0x4000630c
                0x0000000040006318                rom_i2c_sar2_init_code = 0x40006318
                0x0000000040006324                rom_phy_param_addr = 0x40006324
                0x0000000040006330                rom_phy_reg_init = 0x40006330
                0x000000004000633c                rom_set_chan_reg = 0x4000633c
                0x0000000040006348                rom_phy_wakeup_init = 0x40006348
                0x0000000040006354                rom_phy_i2c_init1 = 0x40006354
                0x0000000040006360                rom_tsens_temp_read = 0x40006360
                0x000000004000636c                rom_bt_track_pll_cap = 0x4000636c
                0x0000000040006378                rom_wifi_track_pll_cap = 0x40006378
                0x0000000040006384                rom_wifi_set_tx_gain = 0x40006384
                0x0000000040006390                rom_txpwr_cal_track = 0x40006390
                0x000000004000639c                rom_tx_pwctrl_background = 0x4000639c
                0x00000000400063a8                rom_bt_set_tx_gain = 0x400063a8
                0x00000000400063b4                rom_noise_check_loop = 0x400063b4
                0x00000000400063c0                rom_phy_close_rf = 0x400063c0
                0x00000000400063cc                rom_phy_xpd_tsens = 0x400063cc
                0x00000000400063d8                rom_phy_freq_mem_backup = 0x400063d8
                0x00000000400063e4                rom_phy_ant_init = 0x400063e4
                0x00000000400063f0                rom_bt_track_tx_power = 0x400063f0
                0x00000000400063fc                rom_wifi_track_tx_power = 0x400063fc
                0x0000000040006408                rom_phy_dig_reg_backup = 0x40006408
                0x0000000040006414                chip728_phyrom_version_num = 0x40006414
                0x0000000040006420                rom_mac_tx_chan_offset = 0x40006420
                0x000000004000642c                rom_rx_gain_force = 0x4000642c
                0x000000003fcef81c                phy_param_rom = 0x3fcef81c
                [!provide]                        PROVIDE (esp_rom_tjpgd_decomp = 0x40000864)
                [!provide]                        PROVIDE (esp_rom_tjpgd_prepare = 0x40000858)
                [!provide]                        PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                [!provide]                        PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                [!provide]                        PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                [!provide]                        PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                [!provide]                        PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                [!provide]                        PROVIDE (esp_rom_efuse_get_flash_wp_gpio = ets_efuse_get_wp_pad)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                [!provide]                        PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_usb_acm_init = Uart_Init_USB)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_md5_init = MD5Init)
                [!provide]                        PROVIDE (esp_rom_md5_update = MD5Update)
                [!provide]                        PROVIDE (esp_rom_md5_final = MD5Final)
                0x00000000400005d0                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040000600                PROVIDE (esp_rom_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x000000004000057c                PROVIDE (esp_rom_get_reset_reason = rtc_get_reset_reason)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = spi_flash_attach)
                0x000000004000216c                __absvdi2 = 0x4000216c
                0x0000000040002178                __absvsi2 = 0x40002178
                0x0000000040002184                __adddf3 = 0x40002184
                0x0000000040002190                __addsf3 = 0x40002190
                0x000000004000219c                __addvdi3 = 0x4000219c
                0x00000000400021a8                __addvsi3 = 0x400021a8
                0x00000000400021b4                __ashldi3 = 0x400021b4
                0x00000000400021c0                __ashrdi3 = 0x400021c0
                0x00000000400021cc                __bswapdi2 = 0x400021cc
                0x00000000400021d8                __bswapsi2 = 0x400021d8
                0x00000000400021e4                __clear_cache = 0x400021e4
                0x00000000400021f0                __clrsbdi2 = 0x400021f0
                0x00000000400021fc                __clrsbsi2 = 0x400021fc
                0x0000000040002208                __clzdi2 = 0x40002208
                0x0000000040002214                __clzsi2 = 0x40002214
                0x0000000040002220                __cmpdi2 = 0x40002220
                0x000000004000222c                __ctzdi2 = 0x4000222c
                0x0000000040002238                __ctzsi2 = 0x40002238
                0x0000000040002244                __divdc3 = 0x40002244
                0x0000000040002250                __divdf3 = 0x40002250
                0x000000004000225c                __divdi3 = 0x4000225c
                0x0000000040002268                __divsc3 = 0x40002268
                0x0000000040002274                __divsf3 = 0x40002274
                0x0000000040002280                __divsi3 = 0x40002280
                0x000000004000228c                __eqdf2 = 0x4000228c
                0x0000000040002298                __eqsf2 = 0x40002298
                0x00000000400022a4                __extendsfdf2 = 0x400022a4
                0x00000000400022b0                __ffsdi2 = 0x400022b0
                0x00000000400022bc                __ffssi2 = 0x400022bc
                0x00000000400022c8                __fixdfdi = 0x400022c8
                0x00000000400022d4                __fixdfsi = 0x400022d4
                0x00000000400022e0                __fixsfdi = 0x400022e0
                0x00000000400022ec                __fixsfsi = 0x400022ec
                0x00000000400022f8                __fixunsdfsi = 0x400022f8
                0x0000000040002304                __fixunssfdi = 0x40002304
                0x0000000040002310                __fixunssfsi = 0x40002310
                0x000000004000231c                __floatdidf = 0x4000231c
                0x0000000040002328                __floatdisf = 0x40002328
                0x0000000040002334                __floatsidf = 0x40002334
                0x0000000040002340                __floatsisf = 0x40002340
                0x000000004000234c                __floatundidf = 0x4000234c
                0x0000000040002358                __floatundisf = 0x40002358
                0x0000000040002364                __floatunsidf = 0x40002364
                0x0000000040002370                __floatunsisf = 0x40002370
                0x000000004000237c                __gcc_bcmp = 0x4000237c
                0x0000000040002388                __gedf2 = 0x40002388
                0x0000000040002394                __gesf2 = 0x40002394
                0x00000000400023a0                __gtdf2 = 0x400023a0
                0x00000000400023ac                __gtsf2 = 0x400023ac
                0x00000000400023b8                __ledf2 = 0x400023b8
                0x00000000400023c4                __lesf2 = 0x400023c4
                0x00000000400023d0                __lshrdi3 = 0x400023d0
                0x00000000400023dc                __ltdf2 = 0x400023dc
                0x00000000400023e8                __ltsf2 = 0x400023e8
                0x00000000400023f4                __moddi3 = 0x400023f4
                0x0000000040002400                __modsi3 = 0x40002400
                0x000000004000240c                __muldc3 = 0x4000240c
                0x0000000040002418                __muldf3 = 0x40002418
                0x0000000040002424                __muldi3 = 0x40002424
                0x0000000040002430                __mulsc3 = 0x40002430
                0x000000004000243c                __mulsf3 = 0x4000243c
                0x0000000040002448                __mulsi3 = 0x40002448
                0x0000000040002454                __mulvdi3 = 0x40002454
                0x0000000040002460                __mulvsi3 = 0x40002460
                0x000000004000246c                __nedf2 = 0x4000246c
                0x0000000040002478                __negdf2 = 0x40002478
                0x0000000040002484                __negdi2 = 0x40002484
                0x0000000040002490                __negsf2 = 0x40002490
                0x000000004000249c                __negvdi2 = 0x4000249c
                0x00000000400024a8                __negvsi2 = 0x400024a8
                0x00000000400024b4                __nesf2 = 0x400024b4
                0x00000000400024c0                __paritysi2 = 0x400024c0
                0x00000000400024cc                __popcountdi2 = 0x400024cc
                0x00000000400024d8                __popcountsi2 = 0x400024d8
                0x00000000400024e4                __powidf2 = 0x400024e4
                0x00000000400024f0                __powisf2 = 0x400024f0
                0x00000000400024fc                __subdf3 = 0x400024fc
                0x0000000040002508                __subsf3 = 0x40002508
                0x0000000040002514                __subvdi3 = 0x40002514
                0x0000000040002520                __subvsi3 = 0x40002520
                0x000000004000252c                __truncdfsf2 = 0x4000252c
                0x0000000040002538                __ucmpdi2 = 0x40002538
                0x0000000040002544                __udivdi3 = 0x40002544
                0x0000000040002550                __udivmoddi4 = 0x40002550
                0x000000004000255c                __udivsi3 = 0x4000255c
                0x0000000040002568                __udiv_w_sdiv = 0x40002568
                0x0000000040002574                __umoddi3 = 0x40002574
                0x0000000040002580                __umodsi3 = 0x40002580
                0x000000004000258c                __unorddf2 = 0x4000258c
                0x0000000040002598                __unordsf2 = 0x40002598
                0x00000000400011dc                esp_rom_newlib_init_common_mutexes = 0x400011dc
                0x00000000400011e8                memset = 0x400011e8
                0x00000000400011f4                memcpy = 0x400011f4
                0x0000000040001200                memmove = 0x40001200
                0x000000004000120c                memcmp = 0x4000120c
                0x0000000040001218                strcpy = 0x40001218
                0x0000000040001224                strncpy = 0x40001224
                0x0000000040001230                strcmp = 0x40001230
                0x000000004000123c                strncmp = 0x4000123c
                0x0000000040001248                strlen = 0x40001248
                0x0000000040001254                strstr = 0x40001254
                0x0000000040001260                bzero = 0x40001260
                0x0000000040001278                sbrk = 0x40001278
                0x0000000040001284                isalnum = 0x40001284
                0x0000000040001290                isalpha = 0x40001290
                0x000000004000129c                isascii = 0x4000129c
                0x00000000400012a8                isblank = 0x400012a8
                0x00000000400012b4                iscntrl = 0x400012b4
                0x00000000400012c0                isdigit = 0x400012c0
                0x00000000400012cc                islower = 0x400012cc
                0x00000000400012d8                isgraph = 0x400012d8
                0x00000000400012e4                isprint = 0x400012e4
                0x00000000400012f0                ispunct = 0x400012f0
                0x00000000400012fc                isspace = 0x400012fc
                0x0000000040001308                isupper = 0x40001308
                0x0000000040001314                toupper = 0x40001314
                0x0000000040001320                tolower = 0x40001320
                0x000000004000132c                toascii = 0x4000132c
                0x0000000040001338                memccpy = 0x40001338
                0x0000000040001344                memchr = 0x40001344
                0x0000000040001350                memrchr = 0x40001350
                0x000000004000135c                strcasecmp = 0x4000135c
                0x0000000040001368                strcasestr = 0x40001368
                0x0000000040001374                strcat = 0x40001374
                0x000000004000138c                strchr = 0x4000138c
                0x0000000040001398                strcspn = 0x40001398
                0x00000000400013a4                strcoll = 0x400013a4
                0x00000000400013b0                strlcat = 0x400013b0
                0x00000000400013bc                strlcpy = 0x400013bc
                0x00000000400013c8                strlwr = 0x400013c8
                0x00000000400013d4                strncasecmp = 0x400013d4
                0x00000000400013e0                strncat = 0x400013e0
                0x00000000400013f8                strnlen = 0x400013f8
                0x0000000040001404                strrchr = 0x40001404
                0x0000000040001410                strsep = 0x40001410
                0x000000004000141c                strspn = 0x4000141c
                0x0000000040001428                strtok_r = 0x40001428
                0x0000000040001434                strupr = 0x40001434
                0x0000000040001440                longjmp = 0x40001440
                0x000000004000144c                setjmp = 0x4000144c
                0x0000000040001458                abs = 0x40001458
                0x0000000040001464                div = 0x40001464
                0x0000000040001470                labs = 0x40001470
                0x000000004000147c                ldiv = 0x4000147c
                0x0000000040001488                qsort = 0x40001488
                0x00000000400014b8                utoa = 0x400014b8
                0x00000000400014c4                itoa = 0x400014c4
                [!provide]                        PROVIDE (atoi = 0x400014d0)
                [!provide]                        PROVIDE (atol = 0x400014dc)
                [!provide]                        PROVIDE (strdup = 0x40001380)
                [!provide]                        PROVIDE (strndup = 0x400013ec)
                [!provide]                        PROVIDE (rand_r = 0x40001494)
                [!provide]                        PROVIDE (rand = 0x400014a0)
                [!provide]                        PROVIDE (srand = 0x400014ac)
                [!provide]                        PROVIDE (strtol = 0x400014e8)
                [!provide]                        PROVIDE (strtoul = 0x400014f4)
                [!provide]                        PROVIDE (fflush = 0x40001500)
                [!provide]                        PROVIDE (_fflush_r = 0x4000150c)
                [!provide]                        PROVIDE (_fwalk = 0x40001518)
                [!provide]                        PROVIDE (_fwalk_reent = 0x40001524)
                [!provide]                        PROVIDE (__swbuf_r = 0x40001548)
                0x0000000040001554                __swbuf = 0x40001554
                0x000000003fceffd4                syscall_table_ptr = 0x3fceffd4
                0x000000003fceffd0                _global_impure_ptr = 0x3fceffd0
                0x0000000040000570                _rom_chip_id = 0x40000570
                0x0000000040000574                _rom_eco_version = 0x40000574
                [!provide]                        PROVIDE (UART0 = 0x60000000)
                [!provide]                        PROVIDE (SPIMEM1 = 0x60002000)
                [!provide]                        PROVIDE (SPIMEM0 = 0x60003000)
                0x0000000060004000                PROVIDE (GPIO = 0x60004000)
                [!provide]                        PROVIDE (SIGMADELTA = 0x60004f00)
                0x0000000060008000                PROVIDE (RTCCNTL = 0x60008000)
                [!provide]                        PROVIDE (RTCIO = 0x60008400)
                0x0000000060008800                PROVIDE (SENS = 0x60008800)
                [!provide]                        PROVIDE (HINF = 0x6000b000)
                [!provide]                        PROVIDE (I2S0 = 0x6000f000)
                [!provide]                        PROVIDE (I2S1 = 0x6002d000)
                [!provide]                        PROVIDE (UART1 = 0x60010000)
                [!provide]                        PROVIDE (I2C0 = 0x60013000)
                [!provide]                        PROVIDE (UHCI0 = 0x60014000)
                [!provide]                        PROVIDE (UHCI1 = 0x60014000)
                [!provide]                        PROVIDE (HOST = 0x60015000)
                [!provide]                        PROVIDE (RMT = 0x60016000)
                [!provide]                        PROVIDE (RMTMEM = 0x60016800)
                [!provide]                        PROVIDE (PCNT = 0x60017000)
                [!provide]                        PROVIDE (SLC = 0x60018000)
                [!provide]                        PROVIDE (LEDC = 0x60019000)
                [!provide]                        PROVIDE (MCPWM0 = 0x6001e000)
                [!provide]                        PROVIDE (MCPWM1 = 0x6002c000)
                [!provide]                        PROVIDE (MCP = 0x600c3000)
                0x000000006001f000                PROVIDE (TIMERG0 = 0x6001f000)
                0x0000000060020000                PROVIDE (TIMERG1 = 0x60020000)
                0x0000000060023000                PROVIDE (SYSTIMER = 0x60023000)
                [!provide]                        PROVIDE (GPSPI2 = 0x60024000)
                [!provide]                        PROVIDE (GPSPI3 = 0x60025000)
                [!provide]                        PROVIDE (SYSCON = 0x60026000)
                [!provide]                        PROVIDE (I2C1 = 0x60027000)
                [!provide]                        PROVIDE (SDMMC = 0x60028000)
                [!provide]                        PROVIDE (TWAI = 0x6002b000)
                [!provide]                        PROVIDE (GPSPI4 = 0x60037000)
                [!provide]                        PROVIDE (GDMA = 0x6003f000)
                [!provide]                        PROVIDE (UART2 = 0x6002e000)
                [!provide]                        PROVIDE (DMA = 0x6003f000)
                [!provide]                        PROVIDE (APB_SARADC = 0x60040000)
                [!provide]                        PROVIDE (LCD_CAM = 0x60041000)
                0x0000000060038000                PROVIDE (USB_SERIAL_JTAG = 0x60038000)
                [!provide]                        PROVIDE (USB0 = 0x60080000)
                [!provide]                        PROVIDE (USBH = 0x60080000)
                [!provide]                        PROVIDE (USB_WRAP = 0x60039000)
OUTPUT(zephyr\zephyr.elf elf32-xtensa-le)
